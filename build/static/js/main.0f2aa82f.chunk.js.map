{"version":3,"sources":["components/order_manager/assets/qrcode.jpeg","components/main_dashboard/NavbarPanel.js","global.js","components/party_manager/RetailerPartyManager.js","components/party_manager/WholesellerPartyManager.js","components/party_manager/CustomerPartyManager.js","components/party_manager/PartyManager.js","components/expense_manager/ExpenseManager.js","components/product_manager/AddNewEntry.js","components/product_manager/ProductManager.js","components/order_manager/BillManager.js","components/order_manager/gstBillHistory.js","components/order_manager/nonGstBillHistory.js","components/order_manager/orderManager.js","components/ledger_manager/AddNewEntry.js","components/ledger_manager/LedgerManager.js","components/main_dashboard/Main.js","contexts/workerContext.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavbarPanel","props","className","Card","Body","Avatar","user","slice","toUpperCase","Badge","variant","style","textTransform","border","to","Button","size","block","hidden","Row","Col","xs","onClick","logout","API_URL","window","JSZip","jsZip","$","require","DataTable","axios","RetailerPartyManager","handleTabs","event","newValue","setState","value","renderPartiesData","parties","state","partiesData","map","party","align","color","e","activePartyId","activePartyName","activePartyMobile","activePartyAddress","activePartyType","showUpdateModal","icon","faPenAlt","faBook","confirm","deleteRecord","faTrash","showAddModal","showUpdateModel","data","crossDomain","crossOrigin","query","post","then","res","console","log","catch","err","preventDefault","this","toast","success","fetchPartiesData","id","error","setTimeout","refreshParties","destroy","keys","buttons","extend","messageTop","download","location","reload","Modal","show","onHide","aria-labelledby","centered","Header","closeButton","Title","noValidate","autoComplete","TextField","label","defaultValue","onChange","target","s","FormControl","minWidth","InputLabel","Select","labelId","MenuItem","float","handleUpdateSubmit","class","role","aria-label","faSyncAlt","renderUpdatePartyModal","handleAddSubmit","md","width","position","POSITION","TOP_RIGHT","autoClose","Component","WholesellerPartyManager","CustomerPartyManager","PartyManager","href","TabContext","AppBar","TabList","indicatorColor","textColor","Tab","TabPanel","expenses","showDeleteModal","description","amount","expenseData","activeExpenseId","initializeDataTable","getExpenseData","date","Date","moment","format","backgroundColor","onSubmit","handleSubmit","type","refreshLedger","component","Paper","length","expense","key","deleteExpense","AddNewEntry","name","quntity","quantity","required","faPlusCircle","ProductManager","fetchProducts","products","renderProductData","last_modified","record","faTrashAlt","partyId","showProudctUpdateModal","activeProduct","activeQuantity","TableContainer","maxHeight","TableBody","BillManager","getLatestId","billId","_res","item","productList","caluclateWeight","field","weight","weightPerBox","totalBoxes","calculateAmount","rate","calculateTaxes","total","sgst","Number","toFixed","cgst","igst","calculateGrandTotal","grandTotal","billType","adjustment","addItems","particular","items","addedItems","find","push","balance","advance","deleteItem","index","itemList","updatedList","filter","_index","handleClear","insertBillList","insertLedgerRecord","latestInsertId","insertId","insertNewPartyAndSave","newPartyName","address","saveBill","newDate","aadharCardNo","routeName","handleSave","a","handleSavePrint","partyName","gstin","particularValue","opts","routeOptions","partyList","getIdPartyList","fetchRouteOptions","Autocomplete","freeSolo","options","renderInput","params","split","disabled","display","alignItems","justifyContent","striped","bordered","hover","colSpan","Footer","trigger","GstBillHistory","fetchBillList","billList","fetchBillItemList","activeBillId","itemsList","renderMemoList","bill","pname","gst","paid","showDisplayBillModal","aadharCard","code","vehicleNo","faEye","faEdit","renderUpdateModal","activePaid","renderDisplayBillModal","boxQty","isLoadingItems","title","document","ready","dom","exportOptions","columns","initializeData","minHeight","NonGstBillHistory","OrderManager","React","useState","setValue","padding","debit","credit","getCurrentBalance","LedgerManager","fetchLedgerData","LedgerData","renderPartyData","partyData","totalBalance","renderLedgerData","ledger","activeRecordId","activeParticular","activeDebit","activeCredit","activeBalance","match","fetchPartyData","fetchBalance","Main","setAuthenticated","Navbar","bg","expand","Brand","exact","path","ExpenseManager","WorkerContext","createContext","WorkerProvider","workers","setWorkers","Provider","children","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","unregister","checkValidServiceWorker"],"mappings":"iJAAAA,EAAOC,QAAU,IAA0B,qC,4YCqH5BC,MA/Gf,SAAqBC,GAIjB,OACI,yBAAKC,UAAU,gCACX,6BACI,kBAACC,EAAA,EAAD,CAAMD,UAAU,QACZ,kBAACC,EAAA,EAAKC,KAAN,CAAWF,UAAU,oBACjB,kBAACG,EAAA,EAAD,CAAQH,UAAU,WACbD,EAAMK,KAAKC,MAAM,EAAG,GAAGC,eAE5B,kBAACC,EAAA,EAAD,CACIC,QAAQ,UACRR,UAAU,OACVS,MAAO,CAAEC,cAAe,eAEvBX,EAAMK,QAInB,kBAACH,EAAA,EAAD,CAAMU,OAAO,UAAUX,UAAU,QAC7B,kBAACC,EAAA,EAAKC,KAAN,CAAWF,UAAU,WACjB,oCACA,kBAAC,IAAD,CAAMY,GAAG,kBACL,kBAACC,EAAA,EAAD,CACIL,QAAQ,UACRM,KAAK,KACLC,OAAK,EACLf,UAAU,QAJd,kBAUJ,kBAAC,IAAD,CAAMY,GAAG,mBACL,kBAACC,EAAA,EAAD,CACIL,QAAQ,UACRM,KAAK,KACLC,OAAK,EACLf,UAAU,QAJd,oBAUJ,kBAAC,IAAD,CAAMY,GAAG,iBACL,kBAACC,EAAA,EAAD,CACIL,QAAQ,UACRM,KAAK,KACLC,OAAK,EACLf,UAAU,QAJd,kBASJ,kBAAC,IAAD,CAAMY,GAAG,mBACL,kBAACC,EAAA,EAAD,CACIL,QAAQ,UACRM,KAAK,KACLC,OAAK,EACLf,UAAU,QAJd,oBASJ,kBAAC,IAAD,CAAMY,GAAG,kBACL,kBAACC,EAAA,EAAD,CACIL,QAAQ,UACRM,KAAK,KACLC,OAAK,EACLf,UAAU,OACVgB,QAAM,GALV,qBAYZ,kBAACf,EAAA,EAAD,CAAMD,UAAU,WACZ,kBAACC,EAAA,EAAKC,KAAN,CAAWF,UAAU,WACjB,kBAAC,IAAD,CAAMY,GAAG,kBACL,kBAACC,EAAA,EAAD,CACIL,QAAQ,UACRM,KAAK,KACLC,OAAK,EACLf,UAAU,OACVgB,QAAM,GALV,gBAahB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGnB,UAAU,WAClB,kBAACa,EAAA,EAAD,CACIL,QAAQ,iBACRM,KAAK,KACLd,UAAU,OACVoB,QApGC,WACjBrB,EAAMsB,WA+FM,c,+KCnGPC,EAAU,sC,iBC+BvBC,OAAOC,MAAQC,IACf,IAAIC,EAAIC,EAAQ,IAChBD,EAAEE,UAAYD,EAAQ,IACtBA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IAGR,IAAME,EAAQF,EAAQ,IAEDG,E,kDACjB,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IA0FVgC,WAAa,SAACC,EAAOC,GACjB,EAAKC,SAAS,CAAEC,MAAOF,KA5FR,EAyHnBG,kBAAoB,WAChB,IAAMC,EAAU,EAAKC,MAAMC,YAE3B,OAAe,MAAXF,EACO,KAGJA,EAAQG,KAAI,SAACC,GAChB,OACI,4BACI,wBAAIC,MAAM,UACN,kBAACnC,EAAA,EAAD,CAAOC,QAAQ,WAAWiC,EAAK,IAAgB,KAEnD,wBAAIC,MAAM,UAAUD,EAAK,MACzB,wBAAIC,MAAM,UAAUD,EAAK,QACzB,wBAAIC,MAAM,UAAUD,EAAK,SACzB,wBAAIC,MAAM,UACe,MAApBD,EAAK,QAAsB,EAAIA,EAAK,SAEzC,wBAAIC,MAAM,UACN,kBAAC,IAAD,CACIC,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVW,cAAeJ,EAAK,GACpBK,gBAAiBL,EAAK,KACtBM,kBAAmBN,EAAK,OACxBO,mBAAoBP,EAAK,QACzBQ,gBAAiBR,EAAK,KACtBS,iBAAiB,MAIzB,kBAAC,IAAD,CAAiBC,KAAMC,OAE3B,kBAAC,IAAD,CAAMxC,GAAE,wBAAmB6B,EAAK,KAC5B,kBAAC,IAAD,CACIzC,UAAU,OACV2C,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,MAEV,kBAAC,IAAD,CAAiBO,KAAME,QAG/B,kBAAC,IAAD,CACIrD,UAAU,OACV2C,MAAM,SACNnC,QAAQ,YACRY,QAAS,SAACwB,GACFrB,OAAO+B,QAAQ,qBACf,EAAKC,aAAad,EAAK,MAI/B,kBAAC,IAAD,CAAiBU,KAAMK,aA/K3C,EAAKlB,MAAQ,CACTmB,cAAc,EACdC,iBAAiB,EACjBvB,MAAO,IACPU,cAAe,GACfC,gBAAiB,GACjBC,kBAAmB,GACnBC,mBAAoB,GACpBC,gBAAiB,EACjBV,YAAa,MAXF,E,oDAenB,WAAoB,IAAD,OAGXoB,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,sDAEXjC,EACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,eAAgBF,EAAIN,MAChC,EAAKzB,SAAS,CAAEK,YAAa0B,EAAIN,UAEpCS,OAAM,SAACC,GACJH,QAAQC,IAAI,qBAAsBE,Q,gCAI9C,SAAmBzB,GAAI,IAAD,OAClBA,EAAE0B,iBACF,IAGIX,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MAJO,iCAA6BS,KAAKjC,MAAMQ,gBAAxC,sBAAqEyB,KAAKjC,MAAMS,kBAAhF,uBAAgHwB,KAAKjC,MAAMU,mBAA3H,mBAAwJuB,KAAKjC,MAAMW,gBAAnK,qBAA+LsB,KAAKjC,MAAMO,cAA1M,MAMXhB,EACKkC,KATKzC,sCASKqC,GACVK,MAAK,SAACC,GACHO,IAAMC,QAAQ,sCACd,EAAKC,sBAERN,OAAM,SAACC,GACJH,QAAQC,IAAI,kCAAmCE,Q,6BAI3D,SAAgBzB,GAAI,IAAD,OACfA,EAAE0B,iBACF,IAGIX,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MAJO,iEAA6DS,KAAKjC,MAAMQ,gBAAxE,eAA8FyB,KAAKjC,MAAMS,kBAAzG,eAAiIwB,KAAKjC,MAAMU,mBAA5I,cAAoKuB,KAAKjC,MAAMW,gBAA/K,MAMXpB,EACKkC,KATKzC,sCASKqC,GACVK,MAAK,SAACC,GACHO,IAAMC,QAAQ,oCACd,EAAKC,sBAERN,OAAM,SAACC,GACJH,QAAQC,IAAIE,Q,0BAIxB,SAAaM,GAAK,IAAD,OAGThB,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,gDAA4Ca,EAA5C,MAEX9C,EACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,wBAAyBF,EAAIN,MACzCO,QAAQC,IAAI,8BACZK,IAAMI,MAAM,8BACZC,YAAW,WACP,EAAKC,mBACN,QAENV,OAAM,SAACC,GACJH,QAAQC,IAAI,wBAAyBE,Q,+BAQjD,WACIE,KAAKG,qB,gCAGT,WACIhD,EAAE,mBAAmBE,UAAU,CAC3BmD,SAAS,EACTC,MAAM,EACNC,QAAS,CACL,OACA,MACA,QACA,CACIC,OAAQ,MACRC,WAAY,gDACZC,SAAU,QAEd,CACIF,OAAQ,QACRC,WAAY,gDACZC,SAAU,a,4BAsE1B,WACI7D,OAAO8D,SAASC,QAAO,K,oCAG3B,WAA0B,IAAD,OACrB,OACI,kBAACC,EAAA,EAAD,CACIC,KAAMjB,KAAKjC,MAAMY,gBACjBuC,OAAQ,SAAC7C,GAAD,OAAO,EAAKV,SAAS,CAAEgB,iBAAiB,KAChDpC,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,iBAIJ,kBAACY,EAAA,EAAMrF,KAAP,KACI,0BAAM6F,YAAU,EAACC,aAAa,OAC1B,yBAAKhG,UAAU,QACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKJ,KAAK,MACN,kBAACmF,EAAA,EAAD,CACItB,GAAG,YACHuB,MAAM,aACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI5B,KAAKjC,MAAMQ,gBAEfsD,SAAU,SAACxD,GACP,EAAKV,SAAS,CACVY,gBAAiBF,EAAEyD,OAAOlE,YAK1C,kBAACjB,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,SACHuB,MAAM,SACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI5B,KAAKjC,MAAMS,kBAEfqD,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVa,kBACIH,EAAEyD,OAAOlE,aAMjC,kBAAClB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,UACH2B,GAAC,EACDJ,MAAM,UACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI5B,KAAKjC,MAAMU,mBAEfoD,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVc,mBACIJ,EAAEyD,OAAOlE,YAK7B,kBAACjB,EAAA,EAAD,KACI,kBAACqF,EAAA,EAAD,CACI/F,QAAQ,SACRC,MAAO,CACH+F,SAAU,SAEdxG,UAAU,aAEV,kBAACyG,EAAA,EAAD,CAAY9B,GAAG,qCAAf,QAGA,kBAAC+B,EAAA,EAAD,CACIC,QAAQ,oCACRhC,GAAG,8BACHuB,MAAM,OACNC,aACI5B,KAAKjC,MAAMW,gBAEfmD,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVe,gBACIL,EAAEyD,OAAOlE,UAIrB,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,eAGA,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,iBAQpB,6BACA,yBAAKnC,UAAU,aACX,kBAAC,IAAD,CACIS,MAAO,CAAEoG,MAAO,SAChBzF,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVgB,iBAAiB,IAErB,EAAK4D,mBAAmBlE,KANhC,gB,oBAiBxB,WAAU,IAAD,OACL,OACI,yBAAK5C,UAAU,uCACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,kCACX,yBACI+G,MAAM,YACNC,KAAK,QACLC,aAAW,iBAEX,kBAAC,IAAD,CACIjH,UAAU,iBACV2C,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,GACN,EAAKV,SAAS,CAAEuB,cAAc,MALtC,oBAUA,kBAAC,IAAD,CACId,MAAM,UACNnC,QAAQ,YACRR,UAAU,sBACVoB,QAASmD,KAAKO,gBAEd,kBAAC,IAAD,CAAiB3B,KAAM+D,IAAWpG,KAAK,SAI9CyD,KAAK4C,yBACN,kBAAC5B,EAAA,EAAD,CACIC,KAAMjB,KAAKjC,MAAMmB,aACjBgC,OAAQ,SAAC7C,GAAD,OACJ,EAAKV,SAAS,CAAEuB,cAAc,KAElC3C,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,qBAIJ,kBAACY,EAAA,EAAMrF,KAAP,KACI,0BAAM6F,YAAU,EAACC,aAAa,OAC1B,yBAAKhG,UAAU,QACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKJ,KAAK,MACN,kBAACmF,EAAA,EAAD,CACItB,GAAG,YACHuB,MAAM,aACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbC,SAAU,SAACxD,GACP,EAAKV,SAAS,CACVY,gBACIF,EAAEyD,OAAOlE,YAK7B,kBAACjB,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,SACHuB,MAAM,SACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbC,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVa,kBACIH,EAAEyD,OAAOlE,aAMjC,kBAAClB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,UACH2B,GAAC,EACDJ,MAAM,UACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbC,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVc,mBACIJ,EAAEyD,OAAOlE,YAK7B,kBAACjB,EAAA,EAAD,KACI,kBAACqF,EAAA,EAAD,CACI/F,QAAQ,SACRC,MAAO,CACH+F,SAAU,SAEdxG,UAAU,aAEV,kBAACyG,EAAA,EAAD,CAAY9B,GAAG,qCAAf,QAGA,kBAAC+B,EAAA,EAAD,CACIC,QAAQ,oCACRhC,GAAG,8BACHuB,MAAM,OACNC,aAAc,EACdC,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVe,gBACIL,EAAEyD,OACGlE,UAIjB,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,gCAQpB,6BACA,yBAAKnC,UAAU,aACX,kBAAC,IAAD,CACIS,MAAO,CAAEoG,MAAO,SAChBzF,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVuB,cAAc,IAElB,EAAK2D,gBAAgBxE,KAN7B,WAehB,kBAAC3B,EAAA,EAAD,CAAKjB,UAAU,aACX,kBAACkB,EAAA,EAAD,CAAKmG,GAAG,KAAKrH,UAAU,oBACnB,6BACI,2BACI2E,GAAG,iBACH3E,UAAU,UACVS,MAAO,CAAE6G,MAAO,SAEhB,+BACI,wBAAI5E,MAAM,UACN,wCACA,oCACA,yCACA,uCACA,uCACA,yCAGR,+BACK6B,KAAKnC,2BASlC,kBAAC,IAAD,CACImF,SAAU/C,IAAMgD,SAASC,UACzBC,UAAW,W,GA5emBC,aCflDpG,OAAOC,MAAQC,IACf,IAAIC,EAAIC,EAAQ,IAChBD,EAAEE,UAAYD,EAAQ,IACtBA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IAGR,IAAME,EAAQF,EAAQ,IAEDiG,E,kDACjB,WAAY7H,GAAQ,IAAD,8BACf,cAAMA,IA0FVgC,WAAa,SAACC,EAAOC,GACjB,EAAKC,SAAS,CAAEC,MAAOF,KA5FR,EAyHnBG,kBAAoB,WAChB,IAAMC,EAAU,EAAKC,MAAMC,YAE3B,OAAe,MAAXF,EACO,KAGJA,EAAQG,KAAI,SAACC,GAChB,OACI,4BACI,wBAAIC,MAAM,UACN,kBAACnC,EAAA,EAAD,CAAOC,QAAQ,WAAWiC,EAAK,IAAgB,KAEnD,wBAAIC,MAAM,UAAUD,EAAK,MACzB,wBAAIC,MAAM,UAAUD,EAAK,QACzB,wBAAIC,MAAM,UAAUD,EAAK,SACzB,wBAAIC,MAAM,UACe,MAApBD,EAAK,QAAsB,EAAIA,EAAK,SAEzC,wBAAIC,MAAM,UACN,kBAAC,IAAD,CACIC,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVW,cAAeJ,EAAK,GACpBK,gBAAiBL,EAAK,KACtBM,kBAAmBN,EAAK,OACxBO,mBAAoBP,EAAK,QACzBQ,gBAAiBR,EAAK,KACtBS,iBAAiB,MAIzB,kBAAC,IAAD,CAAiBC,KAAMC,OAE3B,kBAAC,IAAD,CAAMxC,GAAE,wBAAmB6B,EAAK,KAC5B,kBAAC,IAAD,CACIzC,UAAU,OACV2C,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,MAEV,kBAAC,IAAD,CAAiBO,KAAME,QAG/B,kBAAC,IAAD,CACIrD,UAAU,OACV2C,MAAM,SACNnC,QAAQ,YACRY,QAAS,SAACwB,GACFrB,OAAO+B,QAAQ,qBACf,EAAKC,aAAad,EAAK,MAI/B,kBAAC,IAAD,CAAiBU,KAAMK,aA/K3C,EAAKlB,MAAQ,CACTmB,cAAc,EACdC,iBAAiB,EACjBvB,MAAO,IACPU,cAAe,GACfC,gBAAiB,GACjBC,kBAAmB,GACnBC,mBAAoB,GACpBC,gBAAiB,EACjBV,YAAa,MAXF,E,oDAenB,WAAoB,IAAD,OAGXoB,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,kDAEXjC,EACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,eAAgBF,EAAIN,MAChC,EAAKzB,SAAS,CAAEK,YAAa0B,EAAIN,UAEpCS,OAAM,SAACC,GACJH,QAAQC,IAAI,qBAAsBE,Q,gCAI9C,SAAmBzB,GAAI,IAAD,OAClBA,EAAE0B,iBACF,IAGIX,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MAJO,qCAAiCS,KAAKjC,MAAMQ,gBAA5C,sBAAyEyB,KAAKjC,MAAMS,kBAApF,uBAAoHwB,KAAKjC,MAAMU,mBAA/H,mBAA4JuB,KAAKjC,MAAMW,gBAAvK,qBAAmMsB,KAAKjC,MAAMO,cAA9M,MAMXhB,EACKkC,KATKzC,sCASKqC,GACVK,MAAK,SAACC,GACHO,IAAMC,QAAQ,sCACd,EAAKC,sBAERN,OAAM,SAACC,GACJH,QAAQC,IAAI,kCAAmCE,Q,6BAI3D,SAAgBzB,GAAI,IAAD,OACfA,EAAE0B,iBACF,IAGIX,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MAJO,iEAA6DS,KAAKjC,MAAMQ,gBAAxE,eAA8FyB,KAAKjC,MAAMS,kBAAzG,eAAiIwB,KAAKjC,MAAMU,mBAA5I,cAAoKuB,KAAKjC,MAAMW,gBAA/K,MAMXpB,EACKkC,KATKzC,sCASKqC,GACVK,MAAK,SAACC,GACHO,IAAMC,QAAQ,oCACd,EAAKC,sBAERN,OAAM,SAACC,GACJH,QAAQC,IAAIE,Q,0BAIxB,SAAaM,GAAK,IAAD,OAGThB,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,gDAA4Ca,EAA5C,MAEX9C,EACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,wBAAyBF,EAAIN,MACzCO,QAAQC,IAAI,8BACZK,IAAMI,MAAM,8BACZC,YAAW,WACP,EAAKC,mBACN,QAENV,OAAM,SAACC,GACJH,QAAQC,IAAI,wBAAyBE,Q,+BAQjD,WACIE,KAAKG,qB,gCAGT,WACIhD,EAAE,sBAAsBE,UAAU,CAC9BmD,SAAS,EACTC,MAAM,EACNC,QAAS,CACL,OACA,MACA,QACA,CACIC,OAAQ,MACRC,WAAY,gDACZC,SAAU,QAEd,CACIF,OAAQ,QACRC,WAAY,gDACZC,SAAU,a,4BAsE1B,WACI7D,OAAO8D,SAASC,QAAO,K,oCAG3B,WAA0B,IAAD,OACrB,OACI,kBAACC,EAAA,EAAD,CACIC,KAAMjB,KAAKjC,MAAMY,gBACjBuC,OAAQ,SAAC7C,GAAD,OAAO,EAAKV,SAAS,CAAEgB,iBAAiB,KAChDpC,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,iBAIJ,kBAACY,EAAA,EAAMrF,KAAP,KACI,0BAAM6F,YAAU,EAACC,aAAa,OAC1B,yBAAKhG,UAAU,QACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKJ,KAAK,MACN,kBAACmF,EAAA,EAAD,CACItB,GAAG,YACHuB,MAAM,aACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI5B,KAAKjC,MAAMQ,gBAEfsD,SAAU,SAACxD,GACP,EAAKV,SAAS,CACVY,gBAAiBF,EAAEyD,OAAOlE,YAK1C,kBAACjB,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,SACHuB,MAAM,SACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI5B,KAAKjC,MAAMS,kBAEfqD,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVa,kBACIH,EAAEyD,OAAOlE,aAMjC,kBAAClB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,UACH2B,GAAC,EACDJ,MAAM,UACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI5B,KAAKjC,MAAMU,mBAEfoD,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVc,mBACIJ,EAAEyD,OAAOlE,YAK7B,kBAACjB,EAAA,EAAD,KACI,kBAACqF,EAAA,EAAD,CACI/F,QAAQ,SACRC,MAAO,CACH+F,SAAU,SAEdxG,UAAU,aAEV,kBAACyG,EAAA,EAAD,CAAY9B,GAAG,qCAAf,QAGA,kBAAC+B,EAAA,EAAD,CACIC,QAAQ,oCACRhC,GAAG,8BACHuB,MAAM,OACNC,aACI5B,KAAKjC,MAAMW,gBAEfmD,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVe,gBACIL,EAAEyD,OAAOlE,UAIrB,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,YAGA,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,oBAQpB,6BACA,yBAAKnC,UAAU,aACX,kBAAC,IAAD,CACIS,MAAO,CAAEoG,MAAO,SAChBzF,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVgB,iBAAiB,IAErB,EAAK4D,mBAAmBlE,KANhC,gB,oBAiBxB,WAAU,IAAD,OACL,OACI,yBAAK5C,UAAU,uCACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,kCACX,yBACI+G,MAAM,YACNC,KAAK,QACLC,aAAW,iBAEX,kBAAC,IAAD,CACIjH,UAAU,iBACV2C,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,GACN,EAAKV,SAAS,CAAEuB,cAAc,MALtC,uBAUA,kBAAC,IAAD,CACId,MAAM,UACNnC,QAAQ,YACRR,UAAU,sBACVoB,QAASmD,KAAKO,gBAEd,kBAAC,IAAD,CAAiB3B,KAAM+D,IAAWpG,KAAK,SAI9CyD,KAAK4C,yBACN,kBAAC5B,EAAA,EAAD,CACIC,KAAMjB,KAAKjC,MAAMmB,aACjBgC,OAAQ,SAAC7C,GAAD,OACJ,EAAKV,SAAS,CAAEuB,cAAc,KAElC3C,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,wBAIJ,kBAACY,EAAA,EAAMrF,KAAP,KACI,0BAAM6F,YAAU,EAACC,aAAa,OAC1B,yBAAKhG,UAAU,QACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKJ,KAAK,MACN,kBAACmF,EAAA,EAAD,CACItB,GAAG,YACHuB,MAAM,aACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbC,SAAU,SAACxD,GACP,EAAKV,SAAS,CACVY,gBACIF,EAAEyD,OAAOlE,YAK7B,kBAACjB,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,SACHuB,MAAM,SACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbC,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVa,kBACIH,EAAEyD,OAAOlE,aAMjC,kBAAClB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,UACH2B,GAAC,EACDJ,MAAM,UACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbC,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVc,mBACIJ,EAAEyD,OAAOlE,YAK7B,kBAACjB,EAAA,EAAD,KACI,kBAACqF,EAAA,EAAD,CACI/F,QAAQ,SACRC,MAAO,CACH+F,SAAU,SAEdxG,UAAU,aAEV,kBAACyG,EAAA,EAAD,CAAY9B,GAAG,qCAAf,QAGA,kBAAC+B,EAAA,EAAD,CACIC,QAAQ,oCACRhC,GAAG,8BACHuB,MAAM,OACNC,aAAc,EACdC,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVe,gBACIL,EAAEyD,OACGlE,UAIjB,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,oBAQpB,6BACA,yBAAKnC,UAAU,aACX,kBAAC,IAAD,CACIS,MAAO,CAAEoG,MAAO,SAChBzF,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVuB,cAAc,IAElB,EAAK2D,gBAAgBxE,KAN7B,WAehB,kBAAC3B,EAAA,EAAD,CAAKjB,UAAU,aACX,kBAACkB,EAAA,EAAD,CAAKmG,GAAG,KAAKrH,UAAU,oBACnB,6BACI,2BACI2E,GAAG,oBACH3E,UAAU,UACVS,MAAO,CAAE6G,MAAO,SAEhB,+BACI,wBAAI5E,MAAM,UACN,wCACA,oCACA,yCACA,uCACA,uCACA,yCAGR,+BACK6B,KAAKnC,2BASlC,kBAAC,IAAD,CACImF,SAAU/C,IAAMgD,SAASC,UACzBC,UAAW,W,GA5esBC,aClBrDpG,OAAOC,MAAQC,IACf,IAAIC,EAAIC,EAAQ,IAChBD,EAAEE,UAAYD,EAAQ,IACtBA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IAGR,IAAME,EAAQF,EAAQ,IAEDkG,E,kDACjB,WAAY9H,GAAQ,IAAD,8BACf,cAAMA,IA0FVgC,WAAa,SAACC,EAAOC,GACjB,EAAKC,SAAS,CAAEC,MAAOF,KA5FR,EAyHnBG,kBAAoB,WAChB,IAAMC,EAAU,EAAKC,MAAMC,YAE3B,OAAe,MAAXF,EACO,KAGJA,EAAQG,KAAI,SAACC,GAChB,OACI,4BACI,wBAAIC,MAAM,UACN,kBAACnC,EAAA,EAAD,CAAOC,QAAQ,WAAWiC,EAAK,IAAgB,KAEnD,wBAAIC,MAAM,UAAUD,EAAK,MACzB,wBAAIC,MAAM,UAAUD,EAAK,QACzB,wBAAIC,MAAM,UAAUD,EAAK,SACzB,wBAAIC,MAAM,UACe,MAApBD,EAAK,QAAsB,EAAIA,EAAK,SAEzC,wBAAIC,MAAM,UACN,kBAAC,IAAD,CACIC,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVW,cAAeJ,EAAK,GACpBK,gBAAiBL,EAAK,KACtBM,kBAAmBN,EAAK,OACxBO,mBAAoBP,EAAK,QACzBQ,gBAAiBR,EAAK,KACtBS,iBAAiB,MAIzB,kBAAC,IAAD,CAAiBC,KAAMC,OAE3B,kBAAC,IAAD,CAAMxC,GAAE,wBAAmB6B,EAAK,KAC5B,kBAAC,IAAD,CACIzC,UAAU,OACV2C,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,MAEV,kBAAC,IAAD,CAAiBO,KAAME,QAG/B,kBAAC,IAAD,CACIrD,UAAU,OACV2C,MAAM,SACNnC,QAAQ,YACRY,QAAS,SAACwB,GACFrB,OAAO+B,QAAQ,qBACf,EAAKC,aAAad,EAAK,MAI/B,kBAAC,IAAD,CAAiBU,KAAMK,aA/K3C,EAAKlB,MAAQ,CACTmB,cAAc,EACdC,iBAAiB,EACjBvB,MAAO,IACPU,cAAe,GACfC,gBAAiB,GACjBC,kBAAmB,GACnBC,mBAAoB,GACpBC,gBAAiB,EACjBV,YAAa,MAXF,E,oDAenB,WAAoB,IAAD,OAGXoB,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,kDAEXjC,EACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,eAAgBF,EAAIN,MAChC,EAAKzB,SAAS,CAAEK,YAAa0B,EAAIN,UAEpCS,OAAM,SAACC,GACJH,QAAQC,IAAI,qBAAsBE,Q,gCAI9C,SAAmBzB,GAAI,IAAD,OAClBA,EAAE0B,iBACF,IAGIX,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MAJO,iCAA6BS,KAAKjC,MAAMQ,gBAAxC,sBAAqEyB,KAAKjC,MAAMS,kBAAhF,uBAAgHwB,KAAKjC,MAAMU,mBAA3H,mBAAwJuB,KAAKjC,MAAMW,gBAAnK,qBAA+LsB,KAAKjC,MAAMO,cAA1M,MAMXhB,EACKkC,KATKzC,sCASKqC,GACVK,MAAK,SAACC,GACHO,IAAMC,QAAQ,sCACd,EAAKC,sBAERN,OAAM,SAACC,GACJH,QAAQC,IAAI,kCAAmCE,Q,6BAI3D,SAAgBzB,GAAI,IAAD,OACfA,EAAE0B,iBACF,IAGIX,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MAJO,iEAA6DS,KAAKjC,MAAMQ,gBAAxE,eAA8FyB,KAAKjC,MAAMS,kBAAzG,eAAiIwB,KAAKjC,MAAMU,mBAA5I,cAAoKuB,KAAKjC,MAAMW,gBAA/K,MAMXpB,EACKkC,KATKzC,sCASKqC,GACVK,MAAK,SAACC,GACHO,IAAMC,QAAQ,oCACd,EAAKC,sBAERN,OAAM,SAACC,GACJH,QAAQC,IAAIE,Q,0BAIxB,SAAaM,GAAK,IAAD,OAGThB,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,gDAA4Ca,EAA5C,MAEX9C,EACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,wBAAyBF,EAAIN,MACzCO,QAAQC,IAAI,8BACZK,IAAMI,MAAM,8BACZC,YAAW,WACP,EAAKC,mBACN,QAENV,OAAM,SAACC,GACJH,QAAQC,IAAI,wBAAyBE,Q,+BAQjD,WACIE,KAAKG,qB,gCAGT,WACIhD,EAAE,sBAAsBE,UAAU,CAC9BmD,SAAS,EACTC,MAAM,EACNC,QAAS,CACL,OACA,MACA,QACA,CACIC,OAAQ,MACRC,WAAY,gDACZC,SAAU,QAEd,CACIF,OAAQ,QACRC,WAAY,gDACZC,SAAU,a,4BAsE1B,WACI7D,OAAO8D,SAASC,QAAO,K,oCAG3B,WAA0B,IAAD,OACrB,OACI,kBAACC,EAAA,EAAD,CACIC,KAAMjB,KAAKjC,MAAMY,gBACjBuC,OAAQ,SAAC7C,GAAD,OAAO,EAAKV,SAAS,CAAEgB,iBAAiB,KAChDpC,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,iBAIJ,kBAACY,EAAA,EAAMrF,KAAP,KACI,0BAAM6F,YAAU,EAACC,aAAa,OAC1B,yBAAKhG,UAAU,QACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKJ,KAAK,MACN,kBAACmF,EAAA,EAAD,CACItB,GAAG,YACHuB,MAAM,aACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI5B,KAAKjC,MAAMQ,gBAEfsD,SAAU,SAACxD,GACP,EAAKV,SAAS,CACVY,gBAAiBF,EAAEyD,OAAOlE,YAK1C,kBAACjB,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,SACHuB,MAAM,SACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI5B,KAAKjC,MAAMS,kBAEfqD,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVa,kBACIH,EAAEyD,OAAOlE,aAMjC,kBAAClB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,UACH2B,GAAC,EACDJ,MAAM,UACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI5B,KAAKjC,MAAMU,mBAEfoD,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVc,mBACIJ,EAAEyD,OAAOlE,YAK7B,kBAACjB,EAAA,EAAD,KACI,kBAACqF,EAAA,EAAD,CACI/F,QAAQ,SACRC,MAAO,CACH+F,SAAU,SAEdxG,UAAU,aAEV,kBAACyG,EAAA,EAAD,CAAY9B,GAAG,qCAAf,QAGA,kBAAC+B,EAAA,EAAD,CACIC,QAAQ,oCACRhC,GAAG,8BACHuB,MAAM,OACNC,aACI5B,KAAKjC,MAAMW,gBAEfmD,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVe,gBACIL,EAAEyD,OAAOlE,UAIrB,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,YAGA,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,oBAQpB,6BACA,yBAAKnC,UAAU,aACX,kBAAC,IAAD,CACIS,MAAO,CAAEoG,MAAO,SAChBzF,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVgB,iBAAiB,IAErB,EAAK4D,mBAAmBlE,KANhC,gB,oBAiBxB,WAAU,IAAD,OACL,OACI,yBAAK5C,UAAU,uCACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,kCACX,yBACI+G,MAAM,YACNC,KAAK,QACLC,aAAW,iBAEX,kBAAC,IAAD,CACIjH,UAAU,iBACV2C,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,GACN,EAAKV,SAAS,CAAEuB,cAAc,MALtC,uBAUA,kBAAC,IAAD,CACId,MAAM,UACNnC,QAAQ,YACRR,UAAU,sBACVoB,QAASmD,KAAKO,gBAEd,kBAAC,IAAD,CAAiB3B,KAAM+D,IAAWpG,KAAK,SAI9CyD,KAAK4C,yBACN,kBAAC5B,EAAA,EAAD,CACIC,KAAMjB,KAAKjC,MAAMmB,aACjBgC,OAAQ,SAAC7C,GAAD,OACJ,EAAKV,SAAS,CAAEuB,cAAc,KAElC3C,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,wBAIJ,kBAACY,EAAA,EAAMrF,KAAP,KACI,0BAAM6F,YAAU,EAACC,aAAa,OAC1B,yBAAKhG,UAAU,QACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKJ,KAAK,MACN,kBAACmF,EAAA,EAAD,CACItB,GAAG,YACHuB,MAAM,aACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbC,SAAU,SAACxD,GACP,EAAKV,SAAS,CACVY,gBACIF,EAAEyD,OAAOlE,YAK7B,kBAACjB,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,SACHuB,MAAM,SACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbC,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVa,kBACIH,EAAEyD,OAAOlE,aAMjC,kBAAClB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,UACH2B,GAAC,EACDJ,MAAM,UACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbC,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVc,mBACIJ,EAAEyD,OAAOlE,YAK7B,kBAACjB,EAAA,EAAD,KACI,kBAACqF,EAAA,EAAD,CACI/F,QAAQ,SACRC,MAAO,CACH+F,SAAU,SAEdxG,UAAU,aAEV,kBAACyG,EAAA,EAAD,CAAY9B,GAAG,qCAAf,QAGA,kBAAC+B,EAAA,EAAD,CACIC,QAAQ,oCACRhC,GAAG,8BACHuB,MAAM,OACNC,aAAc,EACdC,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVe,gBACIL,EAAEyD,OACGlE,UAIjB,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,oBAQpB,6BACA,yBAAKnC,UAAU,aACX,kBAAC,IAAD,CACIS,MAAO,CAAEoG,MAAO,SAChBzF,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVuB,cAAc,IAElB,EAAK2D,gBAAgBxE,KAN7B,WAehB,kBAAC3B,EAAA,EAAD,CAAKjB,UAAU,aACX,kBAACkB,EAAA,EAAD,CAAKmG,GAAG,KAAKrH,UAAU,oBACnB,6BACI,2BACI2E,GAAG,oBACH3E,UAAU,UACVS,MAAO,CAAE6G,MAAO,SAEhB,+BACI,wBAAI5E,MAAM,UACN,wCACA,oCACA,yCACA,uCACA,uCACA,yCAGR,+BACK6B,KAAKnC,2BASlC,kBAAC,IAAD,CACImF,SAAU/C,IAAMgD,SAASC,UACzBC,UAAW,W,GA5emBC,aCblDpG,OAAOC,MAAQC,IACf,IAAIC,EAAIC,EAAQ,IAChBD,EAAEE,UAAYD,EAAQ,IACtBA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IAGR,IAAME,EAAQF,EAAQ,IA2iBPmG,E,kDAxiBX,WAAY/H,GAAQ,IAAD,8BACf,cAAMA,IA4FVgC,WAAa,SAACC,EAAOC,GACjB,EAAKC,SAAS,CAAEC,MAAOF,KA9FR,EA+HnBG,kBAAoB,WAChB,IAAMC,EAAU,EAAKC,MAAMC,YAE3B,OAAe,MAAXF,EACO,KAGJA,EAAQG,KAAI,SAACC,GAChB,OACI,4BACI,wBAAIC,MAAM,UACN,kBAACnC,EAAA,EAAD,CAAOC,QAAQ,WAAWiC,EAAK,IAAgB,KAEnD,wBAAIC,MAAM,UAAUD,EAAK,MACzB,wBAAIC,MAAM,UACN,uBAAGqF,KAAM,OAAStF,EAAK,QACnB,kBAAC,IAAD,CACIzC,UAAU,OACV2C,MAAM,UACNnC,QAAQ,aAEPiC,EAAK,UAIlB,wBAAIC,MAAM,UAAUD,EAAK,SACzB,wBAAIC,MAAM,UACa,IAAlBD,EAAK,KACA,WACkB,IAAlBA,EAAK,KACL,cACA,YAEV,wBAAIC,MAAM,UACe,MAApBD,EAAK,QAAsB,EAAIA,EAAK,SAEzC,wBAAIC,MAAM,UACN,kBAAC,IAAD,CACIC,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVW,cAAeJ,EAAK,GACpBK,gBAAiBL,EAAK,KACtBM,kBAAmBN,EAAK,OACxBO,mBAAoBP,EAAK,QACzBQ,gBAAiBR,EAAK,KACtBS,iBAAiB,MAIzB,kBAAC,IAAD,CAAiBC,KAAMC,OAE3B,kBAAC,IAAD,CAAMxC,GAAE,wBAAmB6B,EAAK,KAC5B,kBAAC,IAAD,CACIzC,UAAU,OACV2C,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,MAEV,kBAAC,IAAD,CAAiBO,KAAME,QAG/B,kBAAC,IAAD,CACIrD,UAAU,OACV2C,MAAM,SACNnC,QAAQ,YACRY,QAAS,SAACwB,GACFrB,OAAO+B,QAAQ,qBACf,EAAKC,aAAad,EAAK,MAI/B,kBAAC,IAAD,CAAiBU,KAAMK,aAtM3C,EAAKlB,MAAQ,CACTmB,cAAc,EACdC,iBAAiB,EACjBvB,MAAO,IACPU,cAAe,GACfC,gBAAiB,GACjBC,kBAAmB,GACnBC,mBAAoB,GACpBC,gBAAiB,EACjBV,YAAa,MAXF,E,oDAenB,WAAoB,IAAD,OAGXoB,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,2CAEXjC,EACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,eAAgBF,EAAIN,MAChC,EAAKzB,SAAS,CAAEK,YAAa0B,EAAIN,UAEpCS,OAAM,SAACC,GACJH,QAAQC,IAAI,qBAAsBE,Q,gCAI9C,SAAmBzB,GAAI,IAAD,OAClBA,EAAE0B,iBACF,IAGIX,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MAJO,iCAA6BS,KAAKjC,MAAMQ,gBAAxC,sBAAqEyB,KAAKjC,MAAMS,kBAAhF,uBAAgHwB,KAAKjC,MAAMU,mBAA3H,mBAAwJuB,KAAKjC,MAAMW,gBAAnK,qBAA+LsB,KAAKjC,MAAMO,cAA1M,MAMXhB,EACKkC,KATKzC,sCASKqC,GACVK,MAAK,SAACC,GACHO,IAAMC,QAAQ,sCACd,EAAKC,sBAERN,OAAM,SAACC,GACJH,QAAQC,IAAI,kCAAmCE,Q,6BAI3D,SAAgBzB,GAAI,IAAD,OACfA,EAAE0B,iBACF,IAGIX,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MAJO,iEAA6DS,KAAKjC,MAAMQ,gBAAxE,eAA8FyB,KAAKjC,MAAMS,kBAAzG,eAAiIwB,KAAKjC,MAAMU,mBAA5I,cAAoKuB,KAAKjC,MAAMW,gBAA/K,MAMXpB,EACKkC,KATKzC,sCASKqC,GACVK,MAAK,SAACC,GACHO,IAAMC,QAAQ,oCACdI,YAAW,WACP,EAAKC,mBACN,QAENV,OAAM,SAACC,GACJH,QAAQC,IAAIE,Q,0BAIxB,SAAaM,GAAK,IAAD,OAGThB,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,gDAA4Ca,EAA5C,MAEX9C,EACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,wBAAyBF,EAAIN,MACzCO,QAAQC,IAAI,8BACZK,IAAMI,MAAM,8BACZC,YAAW,WACP,EAAKC,mBACN,QAENV,OAAM,SAACC,GACJH,QAAQC,IAAI,wBAAyBE,Q,4BAQjD,WACI9C,OAAO8D,SAASC,QAAO,K,+BAG3B,WACIf,KAAKG,qB,gCAGT,WACIhD,EAAE,gBAAgBE,UAAU,CACxBmD,SAAS,EACTC,MAAM,EACNC,QAAS,CACL,OACA,MACA,QACA,CACIC,OAAQ,MACRC,WAAY,gDACZC,SAAU,QAEd,CACIF,OAAQ,QACRC,WAAY,gDACZC,SAAU,a,oCAuF1B,WAA0B,IAAD,OACrB,OACI,kBAACG,EAAA,EAAD,CACIC,KAAMjB,KAAKjC,MAAMY,gBACjBuC,OAAQ,SAAC7C,GAAD,OAAO,EAAKV,SAAS,CAAEgB,iBAAiB,KAChDpC,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,iBAIJ,kBAACY,EAAA,EAAMrF,KAAP,KACI,0BAAM6F,YAAU,EAACC,aAAa,OAC1B,yBAAKhG,UAAU,QACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKJ,KAAK,MACN,kBAACmF,EAAA,EAAD,CACItB,GAAG,YACHuB,MAAM,aACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI5B,KAAKjC,MAAMQ,gBAEfsD,SAAU,SAACxD,GACP,EAAKV,SAAS,CACVY,gBAAiBF,EAAEyD,OAAOlE,YAK1C,kBAACjB,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,SACHuB,MAAM,SACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI5B,KAAKjC,MAAMS,kBAEfqD,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVa,kBACIH,EAAEyD,OAAOlE,aAMjC,kBAAClB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,UACH2B,GAAC,EACDJ,MAAM,UACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI5B,KAAKjC,MAAMU,mBAEfoD,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVc,mBACIJ,EAAEyD,OAAOlE,YAK7B,kBAACjB,EAAA,EAAD,KACI,kBAACqF,EAAA,EAAD,CACI/F,QAAQ,SACRC,MAAO,CACH+F,SAAU,SAEdxG,UAAU,aAEV,kBAACyG,EAAA,EAAD,CAAY9B,GAAG,qCAAf,QAGA,kBAAC+B,EAAA,EAAD,CACIC,QAAQ,oCACRhC,GAAG,8BACHuB,MAAM,OACNC,aACI5B,KAAKjC,MAAMW,gBAEfmD,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVe,gBACIL,EAAEyD,OAAOlE,UAIrB,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,YAGA,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,eAGA,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,iBAQpB,6BACA,yBAAKnC,UAAU,aACX,kBAAC,IAAD,CACIS,MAAO,CAAEoG,MAAO,SAChBzF,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVgB,iBAAiB,IAErB,EAAK4D,mBAAmBlE,KANhC,gB,oBAiBxB,WAAU,IAAD,OACL,OACI,kBAACoF,EAAA,EAAD,CACI7F,MAAOoC,KAAKjC,MAAMH,MAClBnC,UAAU,uCAEV,kBAACiI,EAAA,EAAD,CAAQV,SAAS,SAAS5E,MAAM,WAC5B,kBAACuF,EAAA,EAAD,CACI9B,SAAU7B,KAAKxC,WACfkF,aAAW,sBACXkB,eAAe,UACfC,UAAU,WAEV,kBAACC,EAAA,EAAD,CAAKnC,MAAM,UAAU/D,MAAM,MAC3B,kBAACkG,EAAA,EAAD,CAAKnC,MAAM,YAAY/D,MAAM,MAC7B,kBAACkG,EAAA,EAAD,CAAKnC,MAAM,cAAc/D,MAAM,MAC/B,kBAACkG,EAAA,EAAD,CAAKnC,MAAM,WAAW/D,MAAM,QAGpC,kBAACmG,EAAA,EAAD,CAAUnG,MAAM,IAAInC,UAAU,WAC1B,yBAAKA,UAAU,kCACX,yBACIA,UAAU,YACVgH,KAAK,QACLC,aAAW,iBAEX,kBAAC,IAAD,CACIjH,UAAU,iBACV2C,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,GACN,EAAKV,SAAS,CAAEuB,cAAc,MALtC,iBAUA,kBAAC,IAAD,CACId,MAAM,UACNnC,QAAQ,YACRR,UAAU,sBACVoB,QAASmD,KAAKO,gBAEd,kBAAC,IAAD,CAAiB3B,KAAM+D,IAAWpG,KAAK,SAI9CyD,KAAK4C,yBACN,kBAAC5B,EAAA,EAAD,CACIC,KAAMjB,KAAKjC,MAAMmB,aACjBgC,OAAQ,SAAC7C,GAAD,OACJ,EAAKV,SAAS,CAAEuB,cAAc,KAElC3C,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,kBAIJ,kBAACY,EAAA,EAAMrF,KAAP,KACI,0BAAM6F,YAAU,EAACC,aAAa,OAC1B,yBAAKhG,UAAU,QACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKJ,KAAK,MACN,kBAACmF,EAAA,EAAD,CACItB,GAAG,YACHuB,MAAM,aACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbC,SAAU,SAACxD,GACP,EAAKV,SAAS,CACVY,gBACIF,EAAEyD,OAAOlE,YAK7B,kBAACjB,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,SACHuB,MAAM,SACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbC,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVa,kBACIH,EAAEyD,OAAOlE,aAMjC,kBAAClB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,UACH2B,GAAC,EACDJ,MAAM,UACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbC,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVc,mBACIJ,EAAEyD,OAAOlE,YAK7B,kBAACjB,EAAA,EAAD,KACI,kBAACqF,EAAA,EAAD,CACI/F,QAAQ,SACRC,MAAO,CACH+F,SAAU,SAEdxG,UAAU,aAEV,kBAACyG,EAAA,EAAD,CAAY9B,GAAG,qCAAf,QAGA,kBAAC+B,EAAA,EAAD,CACIC,QAAQ,oCACRhC,GAAG,8BACHuB,MAAM,OACNC,aAAc,EACdC,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVe,gBACIL,EAAEyD,OACGlE,UAIjB,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,YAGA,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,eAGA,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,iBAQpB,6BACA,yBAAKnC,UAAU,aACX,kBAAC,IAAD,CACIS,MAAO,CAAEoG,MAAO,SAChBzF,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVuB,cAAc,IAElB,EAAK2D,gBAAgBxE,KAN7B,WAehB,kBAAC3B,EAAA,EAAD,CAAKjB,UAAU,aACX,kBAACkB,EAAA,EAAD,CAAKmG,GAAG,KAAKrH,UAAU,oBACnB,6BACI,2BACI2E,GAAG,cACH3E,UAAU,UACVS,MAAO,CAAE6G,MAAO,SAEhB,+BACI,wBAAI5E,MAAM,UACN,wCACA,oCACA,yCACA,uCACA,oCACA,uCACA,yCAGR,+BACK6B,KAAKnC,2BAQlC,kBAACkG,EAAA,EAAD,CAAUnG,MAAM,IAAInC,UAAU,WAC1B,kBAAC,EAAD,OAEJ,kBAACsI,EAAA,EAAD,CAAUnG,MAAM,IAAInC,UAAU,WAC1B,kBAAC,EAAD,OAEJ,kBAACsI,EAAA,EAAD,CAAUnG,MAAM,IAAInC,UAAU,WAC1B,kBAAC,EAAD,OAGJ,kBAAC,IAAD,CACIuH,SAAU/C,IAAMgD,SAASC,UACzBC,UAAW,W,GAliBJC,a,6ECxCrB9F,GAAQF,EAAQ,IAwRP4G,GAtRf,kDACI,WAAYxI,GAAQ,IAAD,8BACf,cAAMA,IAEDuC,MAAQ,CACTkG,iBAAiB,EACjBC,YAAa,GACbC,OAAQ,GACRC,YAAa,GACbC,gBAAiB,MARN,EADvB,kDAYI,WAAkB,IAAD,OAETjF,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MAJO,6CAMXjC,GACKkC,KAAKzC,EAASqC,GACdK,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAAIN,MAChB,EAAKzB,SAAS,CAAEyG,YAAa1E,EAAIN,OACjC,EAAKkF,yBAERzE,OAAM,SAACC,GACJH,QAAQC,IAAIE,GACZG,YAAM,wBA5BtB,+BA+BI,WACID,KAAKuE,mBAhCb,0BAkCI,SAAalG,EAAGN,GAAQ,IAAD,OACnBM,EAAE0B,iBACF,IAAQmE,EAAwBnG,EAAxBmG,YAAaC,EAAWpG,EAAXoG,OACfK,EAAO,IAAIC,KAIbrF,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MANO,iEAA6D2E,EAA7D,cAA8EQ,KACrFF,GACFG,SAFS,aAEIR,EAFJ,OAQX7G,GACKkC,KAAKzC,EAASqC,GACdK,MAAK,SAACC,GACHO,YAAM,8BACN,EAAKsE,oBAER1E,OAAM,SAACC,GACJH,QAAQC,IAAIE,GACZG,YAAM,uBAtDtB,2BA0DI,SAAcG,GAAK,IAAD,OAEVhB,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MAJO,wCAAoCa,EAApC,MAMX9C,GACKkC,KAAKzC,EAASqC,GACdK,MAAK,SAACC,GACHO,IAAMC,QAAQ,gCACd,EAAKqE,oBAER1E,OAAM,SAACC,GACJH,QAAQC,IAAIE,QAxE5B,iCA4EI,WACI3C,KAAE,mBAAmBE,UAAU,CAC3BmD,SAAS,MA9ErB,2BAkFI,WACIxD,OAAO8D,SAASC,QAAO,KAnF/B,oBAsFI,WAAU,IAAD,OACL,OACI,yBACItF,UAAU,sCACVS,MAAO,CAAE0I,gBAAiB,cAE1B,kBAAClJ,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,KAAN,CAAWF,UAAU,aACjB,kBAACC,EAAA,EAAK6F,MAAN,wBACA,0BACIC,YAAU,EACVC,aAAa,MACboD,SAAU,SAACxG,GAAD,OAAO,EAAKyG,aAAazG,EAAG,EAAKN,SAE3C,yBAAKtC,UAAU,QACX,kBAACiG,EAAA,EAAD,CACItB,GAAG,SACHuB,MAAM,SACN1F,QAAQ,WACR8I,KAAK,SACLxI,KAAK,QACLqB,MAAOoC,KAAKjC,MAAMoG,OAClB1I,UAAU,OACVoG,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVwG,OAAQ9F,EAAEyD,OAAOlE,WAI7B,kBAAC8D,EAAA,EAAD,CACItB,GAAG,cACHuB,MAAM,cACN1F,QAAQ,WACRM,KAAK,QACLqB,MAAOoC,KAAKjC,MAAMmG,YAClBzI,UAAU,OACVS,MAAO,CAAE+F,SAAU,QACnBJ,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACVuG,YAAa7F,EAAEyD,OAAOlE,WAIlC,kBAAC,IAAD,CACI3B,QAAQ,YACRmC,MAAM,UACN2G,KAAK,UAHT,eAOA,kBAAC,IAAD,CACI3G,MAAM,UACNnC,QAAQ,YACRR,UAAU,WACVoB,QAASmD,KAAKgF,eAEd,kBAAC,IAAD,CACIpG,KAAM+D,IACNpG,KAAK,YAO7B,yBACI0I,UAAWC,IACXhJ,MAAO,CAAE6G,MAAO,QAChBtH,UAAU,QAEV,2BACI2E,GAAG,iBACH3E,UAAU,UACVS,MAAO,CAAE6G,MAAO,SAEhB,+BACI,4BACI,wBAAI5E,MAAM,UAAV,cACA,2CACA,sCACA,oCACA,wBAAIA,MAAM,UAAV,YAGR,+BACK6B,KAAKjC,MAAMqG,YAAYe,OAAS,EAC7BnF,KAAKjC,MAAMqG,YAAYnG,KAAI,SAACmH,GACxB,OACI,wBAAIC,IAAKD,EAAQhF,IACb,wBAAIjC,MAAM,UACN,kBAACnC,EAAA,EAAD,CAAOC,QAAQ,WACV,IACAmJ,EAAQhF,KAGjB,wBACIlE,MAAO,CACHC,cAAe,eAGlBiJ,EAAQlB,aAEb,sCAAOkB,EAAQjB,QACf,4BACKO,KAAOU,EAAQZ,MAAMG,OAClB,oBAGR,wBAAIxG,MAAM,UACN,kBAAC,IAAD,CACIC,MAAM,UACNnC,QAAQ,YACRR,UAAU,YACVoB,QAAS,SAACwB,GACN,EAAKV,SAAS,CACV0G,gBACIe,EAAQhF,KAEhB,EAAKzC,SAAS,CACVsG,iBAAiB,MAIzB,kBAAC,IAAD,CACIrF,KAAMK,OAGd,kBAAC+B,EAAA,EAAD,CACIC,KACI,EAAKlD,MACAkG,gBAET/C,OAAQ,SAAC7C,GAAD,OACJ,EAAKV,SAAS,CACVsG,iBAAiB,KAGzB1H,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,0BAKJ,kBAACY,EAAA,EAAMrF,KAAP,KACI,yEAKA,kBAAC,IAAD,CACIyC,MAAM,SACNnC,QAAQ,YACRR,UAAU,YACVoB,QAAS,WACL,EAAKyI,cACD,EAAKvH,MACAsG,iBAET,EAAK1G,SAAS,CACVsG,iBAAiB,MAV7B,iBAuBxB,4BACI,iDAMpB,kBAAC,IAAD,CACIjB,SAAU/C,IAAMgD,SAASC,UACzBC,UAAW,WA/Q/B,GAA8BC,a,6BCFxB9F,GAAQF,EAAQ,IAETmI,GAAb,kDACI,WAAY/J,GAAQ,IAAD,8BACf,cAAMA,IACDuC,MAAQ,CACTyH,KAAM,KACNC,QAAS,EACTtB,OAAQ,GALG,EADvB,mDAUI,SAAgB9F,GACZA,EAAE0B,iBAEF,IAEIX,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MALO,wDAAoDS,KAAKjC,MAAMyH,KAA/D,cAAyExF,KAAKjC,MAAM2H,SAApF,OAOXpI,GACKkC,KAAKzC,EAASqC,GACdK,MAAK,SAACC,GACHO,IAAMC,QAAQ,wCAEjBL,OAAM,SAACC,GACJH,QAAQC,IAAIE,QA1B5B,oBA8BI,WAAU,IAAD,OACL,OACI,yBAAKrE,UAAU,OACX,0BAAMgG,aAAa,OACf,yBAAKhG,UAAU,iBACX,kBAACiG,EAAA,EAAD,CACItB,GAAG,OACHuB,MAAM,OACN1F,QAAQ,WACR8I,KAAK,OACLtJ,UAAU,OACVkK,UAAU,EACVpJ,KAAK,QACLsF,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CAAE6H,KAAMnH,EAAEyD,OAAOlE,WAIvC,kBAAC8D,EAAA,EAAD,CACItB,GAAG,WACHuB,MAAM,WACN1F,QAAQ,WACR8I,KAAK,SACLtJ,UAAU,OACVc,KAAK,QACLsF,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CAAE+H,SAAUrH,EAAEyD,OAAOlE,WAG3C,kBAAC,IAAD,CACIQ,MAAM,UACNnC,QAAQ,YACRR,UAAU,OACVoB,QAAS,SAACwB,GAAD,OAAO,EAAKwE,gBAAgBxE,KAErC,kBAAC,IAAD,CAAiBO,KAAMgH,IAAcrJ,KAAK,QAE9C,kBAAC,IAAD,CACI6B,MAAM,UACNnC,QAAQ,YACRR,UAAU,YACVoB,QAASmD,KAAKxE,MAAMwJ,eAEpB,kBAAC,IAAD,CAAiBpG,KAAM+D,IAAWpG,KAAK,UAInD,kBAAC,IAAD,WA7EhB,GAAiC6G,aCiB3B9F,GAAQF,EAAQ,IAEDyI,G,kDACjB,WAAYrK,GAAQ,IAAD,8BACf,cAAMA,IAWVsK,cAAgB,WACZ,IACI1G,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,0BAEXjC,GACKkC,KAAKzC,EAASqC,GACdK,MAAK,SAACC,GACH,EAAK/B,SAAS,CAAEoI,SAAUrG,EAAIN,OAC9B,EAAKkF,yBAERzE,OAAM,SAACC,GACJH,QAAQC,IAAI,qBAAsBE,OAtB3B,EAuDnBkG,kBAAoB,WAChB,GAA2B,MAAvB,EAAKjI,MAAMgI,SACX,OAAO,KAGX,IAAMA,EAAW,EAAKhI,MAAMgI,SACxBE,EAAgB,KAEpB,OAAOF,EAAS9H,KAAI,SAACiI,GAMjB,OAJAD,EAAgBvB,KAAOwB,EAAM,eAAmBvB,OAC5C,wBAIA,4BACI,wBAAIxG,MAAM,UACN,kBAACnC,EAAA,EAAD,CAAOC,QAAQ,WACViK,EAAM,GACP,0BAAMzJ,QAAM,GAAZ,MACK,KAEb,4BAAKyJ,EAAM,MACX,4BAAKA,EAAM,UAEX,4BAAKD,GACL,wBAAI9H,MAAM,UAEN,kBAAC,IAAD,CACIlC,QAAQ,YACRY,QAAS,SAACwB,GACFrB,OAAO+B,QAAQ,qBACf,EAAKC,aAAakH,EAAO9F,MAIjC,kBAAC,IAAD,CAAiBxB,KAAMuH,aAzF3C,EAAKpI,MAAQ,CACTqI,QAAS,EACTlH,cAAc,EACdmH,wBAAwB,EACxBC,cAAe,KACfC,eAAgB,KAChBR,SAAU,MARC,E,gDA0BnB,SAAa3F,GACT,IACIhB,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,qDAAiDa,EAAjD,MAEX9C,GACKkC,KAAKzC,EAASqC,GACdK,MAAK,SAACC,GACHC,QAAQC,IAAI,wBAAyBF,EAAIN,MACzCO,QAAQC,IAAI,+BACZK,IAAMI,MAAM,kCAEfR,OAAM,SAACC,GACJH,QAAQC,IAAI,wBAAyBE,Q,2BAIjD,WACI9C,OAAO8D,SAASC,QAAO,K,+BAG3B,WACIf,KAAK8F,kB,iCAGT,WACI3I,KAAE,kBAAkBE,UAAU,CAC1BmD,SAAS,M,oBAgDjB,WAAU,IAAD,OACL,OACI,yBAAK/E,UAAU,kCACX,6BACA,yBACIA,UAAU,iBACVgH,KAAK,QACLC,aAAW,iBAEX,kBAAC,GAAD,CAAasC,cAAe,kBAAM,EAAKA,oBAG3C,kBAACtI,EAAA,EAAD,CAAKjB,UAAU,aACX,kBAACkB,EAAA,EAAD,CAAKmG,GAAG,KAAKrH,UAAU,oBACnB,kBAAC+K,GAAA,EAAD,CACIvB,UAAWC,IACXhJ,MAAO,CAAEuK,UAAW,SAEpB,2BACIrG,GAAG,gBACH3E,UAAU,UACVS,MAAO,CAAE6G,MAAO,SAEhB,+BACI,4BACI,wBAAI5E,MAAM,UAAV,MACA,wBAAIA,MAAM,UAAV,QACA,wCACA,6CACA,wBAAIA,MAAM,UAAV,aAGR,kBAACuI,GAAA,EAAD,KACK1G,KAAKgG,8B,GArIE5C,a,gGCftC9F,I,OAAQF,EAAQ,KAEDuJ,G,kDACjB,WAAYnL,GAAQ,IAAD,gCACf,gBAoFJoL,YAAc,WACV,IAEIxH,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,oDAEXjC,GACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,mBAAoBF,EAAIN,MACpC,EAAKzB,SAAS,CACVkJ,QAAwB,MAAfnH,EAAIN,KAAK,GAAaM,EAAIN,KAAK,GAAT,GAAoB,GAAK,OAG/DS,OAAM,SAACC,GACJH,QAAQC,IAAI,+BAAgCE,OAlGrC,EAsGnBgG,cAAgB,WACZ,IACI1G,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,6BAEXjC,GACKkC,KAAKzC,EAASqC,GACdK,MAAK,SAACC,GACH,IAAIoH,EAAOpH,EAAIN,KAAKnB,KAAI,SAAC8I,GACrB,OAAOA,EAAKvB,QAEhB,EAAK7H,SAAS,CAAEqJ,YAAaF,IAC7B,EAAKxC,yBAERzE,OAAM,SAACC,GACJH,QAAQC,IAAI,iCAAkCE,OAnHvC,EAuHnBmH,gBAAkB,SAACC,EAAOtJ,GACtB,GAAc,eAAVsJ,EAAwB,CACxB,IAAIC,EAASvJ,EAAQ,EAAKG,MAAMqJ,aAChC,EAAKzJ,SAAS,CAAE0J,WAAYzJ,IAC5B,EAAKD,SAAS,CAAEwJ,OAAQA,SACrB,GAAc,iBAAVD,EAA0B,CACjC,IAAIC,EAAS,EAAKpJ,MAAMsJ,WAAazJ,EACrC,EAAKD,SAAS,CAAEyJ,aAAcxJ,IAC9B,EAAKD,SAAS,CAAEwJ,OAAQA,MA/Hb,EAmInBG,gBAAkB,SAACJ,EAAOtJ,GACtB,GAAc,WAAVsJ,EAAoB,CACpB,IAAI/C,EAASvG,EAAQ,EAAKG,MAAMwJ,KAChC,EAAK5J,SAAS,CAAEwJ,OAAQvJ,IACxB,EAAKD,SAAS,CAAEwG,OAAQA,SACrB,GAAc,SAAV+C,EAAkB,CACzB,IAAI/C,EAAS,EAAKpG,MAAMoJ,OAASvJ,EACjC,EAAKD,SAAS,CAAE4J,KAAM3J,IACtB,EAAKD,SAAS,CAAEwG,OAAQA,MA3Ib,EA+InBqD,eAAiB,WACb,IAAMC,EAAQ,EAAK1J,MAAM0J,MACzB,EAAK9J,SACD,CACI+J,KAAMC,OAAQF,EAAQ,IAAO,GAAGG,QAAQ,GACxCC,KAAMF,OAAQF,EAAQ,IAAO,GAAGG,QAAQ,GACxCE,KAAMH,OAAQF,EAAQ,IAAO,IAAIG,QAAQ,IAE7C,EAAKG,sBAvJM,EA2JnBA,oBAAsB,WAClB,IAAIC,EAEAA,EADwB,IAAxB,EAAKjK,MAAMkK,SAEPN,OAAO,EAAK5J,MAAM0J,OAClBE,OAAO,EAAK5J,MAAM+J,MAClBH,OAAO,EAAK5J,MAAMmK,YAGlBP,OAAO,EAAK5J,MAAM0J,OAASE,OAAO,EAAK5J,MAAMmK,YAErD,EAAKvK,SAAS,CAAEqK,WAAYA,EAAWJ,QAAQ,MAtKhC,EAyKnBO,SAAW,WACP,GAAK,EAAKpK,MAAMqK,YAAe,EAAKrK,MAAMwJ,KAA1C,CAEA,IAAIc,EAAQ,EAAKtK,MAAMuK,WACND,EAAME,MACnB,SAACxB,GAAD,OAAUA,EAAKqB,aAAe,EAAKrK,MAAMqK,cAGzCC,EAAQA,EAAMpK,KAAI,SAAC8I,GACf,OAAIA,EAAKqB,aAAe,EAAKrK,MAAMqK,WACxB,CACHA,WAAY,EAAKrK,MAAMqK,WACvB1C,UAAWqB,EAAKrB,WAAY,EAAK3H,MAAM2H,SACvC6B,MAAOR,EAAKQ,OAAQ,EAAKxJ,MAAMwJ,KAC/BpD,QACK4C,EAAK5C,SACL,EAAKpG,MAAMwJ,MAAQ,EAAKxJ,MAAM2H,UAGhCqB,KAIfsB,EAAMG,KAAK,CACPJ,WAAY,EAAKrK,MAAMqK,WACvB1C,SAAU,EAAK3H,MAAM2H,SACrB6B,KAAM,EAAKxJ,MAAMwJ,KACjBpD,OAAQ,EAAKpG,MAAMwJ,KAAO,EAAKxJ,MAAM2H,WAa7C,EAAK/H,SAAS,CAAE2K,WAAYD,IAI5B,IAAIZ,EACAE,OAAO,EAAK5J,MAAM0J,OAClBE,OAAO,EAAK5J,MAAMwJ,KAAO,EAAKxJ,MAAM2H,UACxC,EAAK/H,SAAS,CAAE8J,MAAOA,GAAS,EAAKD,gBACrC,IAAIiB,EAAUhB,EAAQE,OAAO,EAAK5J,MAAM2K,SACxC,EAAK/K,SAAS,CAAE8K,QAASA,MA1NV,EA8NnBE,WAAa,SAACC,GAEV,IAAIC,EAAW,EAAK9K,MAAMuK,WAGtBb,EAAQ,EAAK1J,MAAM0J,MAAQoB,EAASD,GAAT,OAC3BH,EAAUhB,EAAQE,OAAO,EAAK5J,MAAM2K,SACxC,EAAK/K,SAAS,CAAE8J,MAAOA,GAAS,EAAKD,gBACrC,EAAK7J,SAAS,CAAE8K,QAASA,IAOzB,IAAIK,EAAcD,EAASE,QAAO,SAAChC,EAAMiC,GACrC,GAAIJ,IAAUI,EAAQ,OAAOjC,KAEjC,EAAKpJ,SAAS,CAAE2K,WAAYQ,KAhPb,EAmPnBG,YAAc,WACVjM,OAAO8D,SAASC,QAAO,IApPR,EAuPnBmI,eAAiB,WAIb,EAAKnL,MAAMuK,WAAWrK,KAAI,SAAC8I,EAAM6B,GAC7B,IAUIxJ,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MAVxC,wHACX,EAAKxB,MAAMkK,SADA,wBAEX,EAAKlK,MAAM8I,OAFA,wBAGX,EAAK9I,MAAMqI,QAHA,yBAIVW,EAAKqB,WAJK,0BAKXrB,EAAKrB,SALM,yBAMXqB,EAAKQ,KANM,yBAOXR,EAAK5C,OAPM,8BAWX7G,GACKkC,KAhBCzC,sCAgBSqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,uCAAwCgJ,MAEvD/I,OAAM,SAACC,GACJH,QAAQC,IAAI,qCAAsCE,UA7Q/C,EAkRnBqJ,mBAAqB,WAEjB,IAEI/J,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MAFxC,0EAAsE,EAAKxB,MAAMqI,QAAjF,iCAAiH,EAAKrI,MAAMqL,eAA5H,cAAgJ,EAAKrL,MAAM0J,MAA3J,aAAqK,EAAK1J,MAAMqL,eAAhL,MAGX9L,GACKkC,KAAKzC,EAASqC,GACdK,MAAK,SAACC,GACHC,QAAQC,IAAI,4BACZD,QAAQC,IAAI,oBAAqBF,EAAIN,KAAKiK,aAE7CxJ,OAAM,SAACC,GACJH,QAAQC,IAAI,mCAAoCE,OA9RzC,EAkSnBwJ,sBAAwB,WACpB,IACMlK,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MAD1C,oDAAgD,EAAKxB,MAAMwL,aAA3D,eAA8E,EAAKxL,MAAMyL,QAAzF,OAEXlM,GACKkC,KAAKzC,EAASqC,GACdK,MAAK,SAACC,GACHC,QAAQC,IAAI,2BACZD,QAAQC,IAAI,oBAAqBF,EAAIN,KAAKiK,UAC1C,EAAK1L,SAAS,CAAEyI,QAAS1G,EAAIN,KAAKiK,UAAY,EAAKI,aAEtD5J,OAAM,SAACC,GACJH,QAAQC,IAAI,kCAAmCE,OA7SxC,EAiTnB2J,SAAW,WACP,IAAMC,EAAUhF,KAAO,IAAID,MAAQE,OAAO,cA0BtCvF,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MAxBvB,IAAxB,EAAKxB,MAAMkK,SACN,2HACN,EAAKlK,MAAMqI,QADL,yBAEN,EAAKrI,MAAM4L,aAFL,4BAGP,EAAK5L,MAAMiK,WAHJ,sBAIP,EAAKjK,MAAM+J,KAJJ,uBAKP,EAAK/J,MAAMmK,WALJ,uBAMP,EAAKnK,MAAM2K,QANJ,sBAOP,EAAK3K,MAAMiK,WAAa,EAAKjK,MAAM2K,QAP5B,wBAQNgB,EARM,mBAWA,oIACP,EAAK3L,MAAMqI,QADJ,yBAEN,EAAKrI,MAAM4L,aAFL,wBAGP,EAAK5L,MAAMiK,WAHJ,uBAIP,EAAKjK,MAAMmK,WAJJ,uBAKP,EAAKnK,MAAM2K,QALJ,uBAMP,EAAK3K,MAAMiK,WAAa,EAAKjK,MAAM2K,QAN5B,uBAON,EAAK3K,MAAM6L,UAPL,yBAQNF,EARM,oBAaTpM,GACKkC,KAAKzC,EAASqC,GACdK,MAAK,SAACC,GACHO,IAAMC,QAAQ,+BACd,EAAKvC,SACD,CAAEkJ,OAAQnH,EAAIN,KAAKiK,UACnB,EAAKH,mBAGZrJ,OAAM,SAACC,GACJG,IAAMI,MAAM,gCAvVL,EA2VnBwJ,WA3VmB,yCA2VN,WAAOxL,GAAP,UAAAyL,EAAA,sDACTzL,EAAE0B,iBAIc,OADF,EAAKhC,MAAMqI,QAErB,EAAKkD,wBAEL,EAAKG,WARA,2CA3VM,wDAuWnBM,gBAAkB,SAAC1L,GACfsB,QAAQC,IAAI,wBAEZ,EAAKiK,cAvWL,EAAK9L,OAAL,GACI8I,OAAQ,KACRT,QAAS,EACT4D,UAAW,KACXT,aAAc,KACdC,QAAS,KACTG,aAAc,KACdM,MAAO,KACPhC,SAAU,EAEV2B,UAAW,GAEXpF,KAAME,KAAO,IAAID,MAAQE,OAAO,cAEhCuF,gBAAiB,KACjB9B,WAAY,KACZ1C,SAAU,EACV6B,KAAM,EACNpD,OAAQ,EAER0E,SAAU,GACVP,WAAY,GAEZI,QAAS,EACTjB,MAAO,EACPgB,QAAS,EACTf,KAAM,EACNG,KAAM,EACNC,KAAM,EACNI,WAAY,GA7BhB,yBA8Ba,GA9Bb,4BA+BgB,GA/BhB,mCAiCuB,MAjCvB,2BAmCe,MAnCf,gCAqCoB,GArCpB,6BAuCiB,IAvCjB,8BAyCkB,IAzClB,GAHe,E,qDAgDnB,WAAqB,IAAD,OAIZ9I,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MAJQ,4BAMZjC,GACKkC,KATKzC,sCASKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,wBAAyBF,EAAIN,MACzC,IAAM+K,EAAOzK,EAAIN,KAAKnB,KAAI,SAACiI,GAAD,OAAYA,EAAOV,QAC7C,EAAK7H,SAAS,CAAEyM,aAAcD,OAEjCtK,OAAM,SAACC,GACJH,QAAQC,IAAI,yBAA0BE,Q,4BAIlD,WAAkB,IAAD,OAITV,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,wCAEXjC,GACKkC,KALKzC,sCAKKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,iBAAkBF,EAAIN,MAClC,EAAKzB,SAAS,CAAE0M,UAAW3K,EAAIN,UAElCS,OAAM,SAACC,GACJH,QAAQC,IAAI,0BAA2BE,Q,+BA4RnD,WACIE,KAAK4G,cACL5G,KAAKsK,iBACLtK,KAAKuK,oBACLvK,KAAK8F,kB,oBAGT,WAAU,IAAD,OACL,OACI,0BAAMrK,UAAU,OAAOoJ,SAAU,SAACxG,GAAD,OAAOA,EAAE0B,mBAGtC,kBAACiC,EAAA,EAAD,CACI9F,MAAO,CAAE+F,SAAU,SACnBxG,UAAU,mBAEV,kBAAC+O,GAAA,EAAD,CACIpK,GAAG,iBACHqK,UAAQ,EACRC,QAC4B,MAAxB1K,KAAKjC,MAAMsM,UACLrK,KAAKjC,MAAMsM,UAAUpM,KACjB,SAAC8I,GAAD,OAAUA,EAAK3G,GAAK,KAAO2G,EAAKvB,QAEpC,GAEVmF,YAAa,SAACC,GAAD,OACT,kBAAClJ,EAAA,EAAD,iBACQkJ,EADR,CAGIjJ,MAAM,aACN1F,QAAQ,WACRM,KAAK,QACLqB,MAAO,EAAKG,MAAMwL,aAClB1H,SAAU,SAACpE,GAAD,OACN,EAAKE,SAAS,CACV4L,aAAc9L,EAAMqE,OAAOlE,aAK3CiE,SAAU,SAACpE,EAAOG,GAE0B,IAAD,GADvC+B,QAAQC,IAAIhC,GACC,MAATA,GAAiBA,EAAMuH,OAAS,GAChC,EAAKxH,SAAS,CACVyI,QAASxI,EAAMiN,MAAM,MAAM,GAC3Bb,UAAWpM,EAAMiN,MAAM,MAAM,GAC7BrB,QAAO,UAAE,EAAKzL,MAAMsM,UAAU9B,MAC1B,SAACrK,GAAD,OACIA,EAAMkC,IAAMxC,EAAMiN,MAAM,MAAM,aAF/B,aAAE,EAGNrB,UAGP,EAAK7L,SAAS,CACVyI,QAAS,KACT4D,UAAW,SAO/B,kBAACtI,EAAA,EAAD,CACItB,GAAG,cACHuB,MAAM,UACN1F,QAAQ,WACRR,UAAU,OACVmC,MAAOoC,KAAKjC,MAAMyL,SAAW,GAC7B3H,SAAU,SAACxD,GAAD,OAAO,EAAKV,SAAS,CAAE6L,QAASnL,EAAEyD,OAAOlE,SAEnDkN,WAAY9K,KAAKjC,MAAMqI,QACvB7J,KAAK,UAET,kBAACmF,EAAA,EAAD,CACItB,GAAG,eACHuB,MAAM,iBACN1F,QAAQ,WACRR,UAAU,OACVmC,MAAOoC,KAAKjC,MAAM4L,aAClB9H,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CAAEgM,aAActL,EAAEyD,OAAOlE,SAG3CrB,KAAK,UAET,kBAACmF,EAAA,EAAD,CACItB,GAAG,QACHuB,MAAM,QACN1F,QAAQ,WACRR,UAAU,YACVmC,MAAOoC,KAAKjC,MAAMkM,MAClBpI,SAAU,SAACxD,GAAD,OAAO,EAAKV,SAAS,CAAEsM,MAAO5L,EAAEyD,OAAOlE,SAEjDrB,KAAK,UAET,kBAACyF,EAAA,EAAD,CAEI/F,QAAQ,WACRR,UAAU,iBACVS,MAAO,CAAE+F,SAAU,SACnB1F,KAAK,SAEL,kBAAC2F,EAAA,EAAD,CAAY9B,GAAG,qCAAf,aAGA,kBAAC+B,EAAA,EAAD,CACIC,QAAQ,oCACRhC,GAAG,8BACHyB,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CAAEsK,SAAU5J,EAAEyD,OAAOlE,SAEvC4H,KAAK,WACL5H,MAAOoC,KAAKjC,MAAMkK,SAClB1L,KAAK,QACLoF,MAAM,aAEN,kBAACU,EAAA,EAAD,CAAUzE,MAAO,GAAjB,OACA,kBAACyE,EAAA,EAAD,CAAUzE,MAAO,GAAjB,aAIR,kBAAC8D,EAAA,EAAD,CACItB,GAAG,aACHuB,MAAM,aACN1F,QAAQ,WACRR,UAAU,YACVmC,MAAOoC,KAAKjC,MAAMmK,WAClBrG,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CAAEuK,WAAY7J,EAAEyD,OAAOlE,SAGzCrB,KAAK,QACLwI,KAAK,WAET,kBAACrD,EAAA,EAAD,CACItB,GAAG,UACHuB,MAAM,UACN1F,QAAQ,WACRR,UAAU,YACVmC,MAAOoC,KAAKjC,MAAM2K,QAClB7G,SAAU,SAACxD,GAAD,OAAO,EAAKV,SAAS,CAAE+K,QAASrK,EAAEyD,OAAOlE,SAEnDrB,KAAK,QACLwI,KAAK,WAKT,6BAEA,kBAACrI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACqF,EAAA,EAAD,CACI9F,MAAO,CAAE+F,SAAU,SACnBxG,UAAU,mBAEV,kBAAC+O,GAAA,EAAD,CACIpK,GAAG,iBACHqK,UAAQ,EACRC,QAC8B,MAA1B1K,KAAKjC,MAAMiJ,YACLhH,KAAKjC,MAAMiJ,YAAY/I,KACnB,SAAC8I,GAAD,OAAUA,KAEd,GAEV4D,YAAa,SAACC,GAAD,OACT,kBAAClJ,EAAA,EAAD,iBACQkJ,EADR,CAGIjJ,MAAM,UACN1F,QAAQ,WACRM,KAAK,YAGbsF,SAAU,SAACpE,EAAOG,GAQd,EAAKD,SAAS,CAAEyK,WAAYxK,SAK5C,kBAACjB,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,WACHuB,MAAM,WACN1F,QAAQ,WACRR,UAAU,YACVmC,MAAOoC,KAAKjC,MAAM2H,SAClB7D,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CAAE+H,SAAUrH,EAAEyD,OAAOlE,SAEvC+H,SAAS,OACTpJ,KAAK,QACLwI,KAAK,YAGb,kBAACpI,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,OACHuB,MAAM,OACN1F,QAAQ,WACRR,UAAU,YACVmC,MAAOoC,KAAKjC,MAAMwJ,KAClB1F,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CAAE4J,KAAMlJ,EAAEyD,OAAOlE,SAEnC+H,SAAS,OACTpJ,KAAK,QACLwI,KAAK,YAGb,kBAACpI,EAAA,EAAD,KACI,kBAAC,IAAD,CACIyB,MAAM,UACNnC,QAAQ,YACRR,UAAU,OACVoB,QAASmD,KAAKmI,SACd2C,UACK9K,KAAKjC,MAAMqK,aACXpI,KAAKjC,MAAMwJ,OACXvH,KAAKjC,MAAM2H,UARpB,SAgBR,yBAAKjK,UAAU,oBACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,EAAGrH,UAAU,WAClB,kBAACC,EAAA,EAAD,CAAMD,UAAU,YACZ,kBAACC,EAAA,EAAK2F,OAAN,KACI,kBAAC3F,EAAA,EAAK6F,MAAN,CAAY9F,UAAU,yBAClB,uCAEJ,6BACA,uBAAGA,UAAU,eAAb,uCAEI,6BAFJ,uCAKA,6BAEA,0BACIS,MAAO,CACH6O,QAAS,OACTC,WAAY,SACZC,eAAgB,kBAGpB,yCACgB,IACZ,2BAAIjL,KAAKjC,MAAM8I,SAEnB,kCACS,IACL,2BACKnC,KAAO,IAAID,MAAQE,OAChB,eAKhB,kBAACjJ,EAAA,EAAK6F,MAAN,CAAY9F,UAAU,yBAClB,4BACI,6CAIZ,kBAACC,EAAA,EAAKC,KAAN,CAAWF,UAAU,aACjB,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,cAKgB,IACZ,2BACK6D,KAAKjC,MAAMiM,WACRhK,KAAKjC,MAAMwL,gBAI3B,kBAAC5M,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,WAKa,IACT,2BAAI6D,KAAKjC,MAAMyL,YAK3B,kBAAC9M,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,mBAKqB,IACjB,2BAAI6D,KAAKjC,MAAM4L,gBAGvB,kBAAChN,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,QAKU,IACN,2BACKuI,KAAO,IAAID,MAAQE,OAChB,kBAMpB,kBAACjI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,UAKW,2BAAI6D,KAAKjC,MAAMkM,SAG9B,kBAACtN,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,mBAMnC,kBAACT,EAAA,EAAKC,KAAN,CAAWF,UAAU,YAEjB,kBAAC,KAAD,CAAKyP,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC7O,KAAK,MAC7B,+BACI,4BACI,0CACA,wCACA,oCACA,wCAGPyD,KAAKjC,MAAMuK,WAAWnD,OAAS,EAC5B,+BACKnF,KAAKjC,MAAMuK,WAAWrK,KACnB,SAAC8I,EAAM6B,GACH,OAGI,wBACIvD,IACI,GACA0B,EAAKqB,YAGT,4BAEQrB,EAAKqB,WACP,KAEN,4BAEQrB,EAAKrB,UAGb,4BACKqB,EAAKQ,MAEV,4BAEQR,EAAK5C,QAGb,wBACI1I,UAAU,eACV0C,MAAM,UAEN,kBAAC,IAAD,CACIlC,QAAQ,YACRmC,MAAM,UACNvB,QAAS,kBACL,EAAK8L,WACDC,KAIR,kBAAC,IAAD,CACIhK,KACIK,YAShC,6BACyB,IAAxBe,KAAKjC,MAAMkK,SACR,oCACI,4BACI,wBAAIoD,QAAQ,KAAZ,2BAIA,wBAAIA,QAAQ,KAEJrL,KAAKjC,MACA0J,QAIjB,4BACI,wBAAI4D,QAAQ,KAAZ,WAGA,wBAAIA,QAAQ,KAEJrL,KAAKjC,MACA2J,OAIjB,4BACI,wBAAI2D,QAAQ,KAAZ,WAGA,wBAAIA,QAAQ,KAEJrL,KAAKjC,MACA8J,OAIjB,4BACI,wBAAIwD,QAAQ,KAAZ,YAGA,wBAAIA,QAAQ,KAEJrL,KAAKjC,MACA+J,QAMrB,4BACI,wBAAIuD,QAAQ,KAAZ,gBAGA,wBAAIA,QAAQ,KACPrL,KAAKjC,MAAM0J,QAIxB,4BACI,wBAAI4D,QAAQ,KAAZ,cAGA,wBAAIA,QAAQ,KACPrL,KAAKjC,MAAMmK,aAGpB,4BACI,wBAAImD,QAAQ,KAAZ,eAGA,wBAAIA,QAAQ,KACPrL,KAAKjC,MAAMiK,cAKxB,+BACI,4BACI,wBAAIqD,QAAQ,KAAZ,sBAQpB,kBAAC3P,EAAA,EAAK4P,OAAN,CAAa7P,UAAU,aACnB,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,iBAKmB,IACf,iDAGJ,wBACID,MAAO,CACHC,cAAe,eAFvB,aAKe,IACX,gDAGJ,wBACID,MAAO,CACHC,cAAe,eAFvB,WAKY,4CAIhB,kBAACQ,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,UAKW,qCAEX,wBACID,MAAO,CACHC,cAAe,eAFvB,aAKc,4CAEd,wBACID,MAAO,CACHC,cAAe,eAFvB,eAKgB,2CAEhB,wBACID,MAAO,CACHC,cAAe,eAFvB,iBAKkB,wCAI1B,6BACA,kBAACO,EAAA,EAAD,CAAKjB,UAAU,QACX,kBAACkB,EAAA,EAAD,CAAKmG,GAAI,IACL,wBAAIrH,UAAU,eAAd,2BAU5B,yBAAKA,UAAU,aACX,kBAAC,KAAD,CACI8P,QAAS,kBACL,kBAAC,IAAD,CACI9P,UAAU,YACV2C,MAAM,UACNnC,QAAQ,YACRC,MAAO,CAAEoG,MAAO,SAChBwI,UACK,EAAK/M,MAAMiM,YACR,EAAKjM,MAAMwL,eACf,EAAKxL,MAAMyL,QAIf/M,QAAM,GAZV,mBAkBR,kBAAC,IAAD,CACIhB,UAAU,YACV2C,MAAM,UACNnC,QAAQ,YACRC,MAAO,CAAEoG,MAAO,SAEhBzF,QAASmD,KAAK6J,WACdiB,UACK9K,KAAKjC,MAAMiM,YAAahK,KAAKjC,MAAMwL,eACpCvJ,KAAKjC,MAAMyL,SATnB,aAgBA,kBAAC,IAAD,CACI/N,UAAU,YACV2C,MAAM,UACNnC,QAAQ,YACRC,MAAO,CAAEoG,MAAO,SAChBzF,QAASmD,KAAKiJ,aALlB,e,GAn9BqB7F,aCDnC9F,GAAQF,EAAQ,IAEDoO,G,kDACjB,WAAYhQ,GAAQ,IAAD,8BACf,gBAyBJiQ,cAAgB,WACZ,IAEIrM,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,sIAEXjC,GACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,SAAUF,EAAIN,MAC1B,EAAKzB,SAAS,CAAE+N,SAAUhM,EAAIN,OAG9B,EAAKkF,yBAERzE,OAAM,SAACC,GACJH,QAAQC,IAAI,kCAAmCE,OAxCxC,EA4CnB6L,kBAAoB,WAChB,IAEIvM,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,yGAAqG,EAAKxB,MAAM6N,eAE3HtO,GACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,mBAAoBF,EAAIN,MACpC,EAAKzB,SAAS,CAAEkO,UAAWnM,EAAIN,OAG/B,EAAKkF,yBAERzE,OAAM,SAACC,GACJH,QAAQC,IAAI,0BAA2BE,OA1DhC,EA4InBgM,eAAiB,WACb,OAA2B,MAAvB,EAAK/N,MAAM2N,SAAyB,KAGjC,EAAK3N,MAAM2N,SAASzN,KAAI,SAAC8N,GAC5B,OACI,wBAAI5N,MAAM,UACN,4BAAK4N,EAAK3L,IACV,4BAAK2L,EAAKC,OACV,4BAAKD,EAAKE,KACV,4BAAKF,EAAK7D,YACV,4BAAK6D,EAAKtE,OACV,4BAAKsE,EAAKG,MACV,4BAAKH,EAAKtD,SACV,4BAAK/D,KAAOqH,EAAKvH,MAAMG,OAAO,eAC9B,wBAAIlJ,UAAU,iCAAd,OAEI,kBAAC,IAAD,CACIA,UAAU,OACV2C,MAAM,UACNnC,QAAQ,YACRY,QAAS,WACL,EAAKc,SACD,CACIiO,aAAcG,EAAK3L,GACnB+L,sBAAsB,EACtBC,WAAYL,EAAKK,WACjBC,KAAMN,EAAKM,KACX7H,KAAMuH,EAAKvH,KACXwH,MAAOD,EAAKC,MACZvE,MAAOsE,EAAKtE,MACZwE,IAAKF,EAAKE,IACV/D,WAAY6D,EAAK7D,WACjBoE,UAAWP,EAAKO,WAEpB,EAAKX,qBAIb,kBAAC,IAAD,CAAiB/M,KAAM2N,OAE3B,kBAAC,IAAD,CACI9Q,UAAU,OACV2C,MAAM,UACNnC,QAAQ,YACRY,QAAS,WACL,EAAKc,SAAS,CACViO,aAAcG,EAAK3L,GACnBjB,iBAAiB,MAIzB,kBAAC,IAAD,CAAiBP,KAAM4N,OAE3B,kBAAC,IAAD,CACI/Q,UAAU,OACV2C,MAAM,SACNnC,QAAQ,YACRY,QAAS,SAACwB,GACFrB,OAAO+B,QAAQ,qBACf,EAAKC,aAAa+M,EAAK3L,MAI/B,kBAAC,IAAD,CAAiBxB,KAAMK,aA5M5B,EAoNnBwN,kBAAoB,WAChB,OACI,kBAACzL,EAAA,EAAD,CACIC,KAAM,EAAKlD,MAAMoB,gBACjB+B,OAAQ,SAAC7C,GAAD,OAAO,EAAKV,SAAS,CAAEwB,iBAAiB,KAChD5C,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,gBAIJ,kBAACY,EAAA,EAAMrF,KAAP,KACI,0BAAM6F,YAAU,EAACC,aAAa,OAC1B,yBAAKhG,UAAU,QACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC8E,EAAA,EAAD,CACItB,GAAG,UACHuB,MAAM,OACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbhE,MAAO,EAAKG,MAAM2O,WAClB7K,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACV+O,WAAYrO,EAAEyD,OAAOlE,cAQ7C,yBAAKnC,UAAU,aACX,kBAAC,IAAD,CACIS,MAAO,CAAEoG,MAAO,SAChBzF,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVwB,iBAAiB,IAErB,EAAKoD,mBAAmBlE,IAE5BpC,QAAQ,YACRmC,MAAM,WATV,eAzPL,EA6QnBuO,uBAAyB,WACrB,OACI,kBAAC3L,EAAA,EAAD,CACIC,KAAM,EAAKlD,MAAMoO,qBACjBjL,OAAQ,SAAC7C,GAAD,OAAO,EAAKV,SAAS,CAAEwO,sBAAsB,KACrD5P,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,iBAIJ,yBAAK3E,UAAU,gBACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKlB,UAAU,WACX,kBAACC,EAAA,EAAD,CAAMD,UAAU,OACZ,kBAACC,EAAA,EAAK2F,OAAN,KACI,kBAAC3F,EAAA,EAAK6F,MAAN,CAAY9F,UAAU,yBAClB,uCAEJ,6BAEA,uBAAGA,UAAU,eAAb,wCAEI,6BAFJ,uCAKA,6BAEA,0BACIS,MAAO,CACH6O,QAAS,OACTC,WAAY,SACZC,eAAgB,kBAGpB,yCACgB,IACZ,2BAAI,EAAKlN,MAAM6N,eAEnB,kCACS,IACL,2BACKlH,KAAO,EAAK3G,MAAMyG,MAAMG,OACrB,eAKhB,kBAACjJ,EAAA,EAAK6F,MAAN,CAAY9F,UAAU,yBAClB,4BACI,6CAIZ,kBAACC,EAAA,EAAKC,KAAN,CAAWF,UAAU,aACjB,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,cAKgB,IACZ,2BAAI,EAAK4B,MAAMiO,UAI3B,kBAACtP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,WAKa,IACT,2BAAI,EAAK4B,MAAMyL,WAGvB,kBAAC7M,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,eAKiB,IACb,2BAAI,EAAK4B,MAAMuO,cAI3B,kBAAC5P,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,mBAKqB,IACjB,2BAAI,EAAK4B,MAAMqO,cAGvB,kBAACzP,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,QAKU,IACN,2BACKuI,KACG,EAAK3G,MAAMyG,MACbG,OAAO,kBAKzB,kBAACjI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,UAKW,2BAAI,EAAK4B,MAAMkM,QAE1B,wBACI/N,MAAO,CACHC,cAAe,eAFvB,SAKU,2BAAI,EAAK4B,MAAMsO,QAG7B,kBAAC1P,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,YAUZ,kBAACT,EAAA,EAAKC,KAAN,CAAWF,UAAU,YAEjB,kBAAC,KAAD,CAAKyP,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC7O,KAAK,MAC7B,+BACI,4BACI,0CACA,wCACA,wCACA,oCACA,wCAGP,EAAKwB,MAAM8N,UAAU1G,OAAS,EAC3B,+BACK,EAAKpH,MAAM8N,UAAU5N,KAClB,SAAC8I,EAAM6B,GACH,OAGI,wBACIvD,IACI,GACA0B,EAAKqB,YAGT,4BAEQrB,EAAKqB,WACP,KAEN,oCACA,4BAEQrB,EAAK6F,QAGb,4BACK7F,EAAKQ,MAEV,4BAEQR,EAAK5C,YAO7B,6BACA,4BACI,wBAAIkH,QAAQ,KAAZ,2BAGA,wBAAIA,QAAQ,KACP,EAAKtN,MAAM0J,MACR,EAAK1J,MAAMkO,IACX,EAAKlO,MACAmK,aAGjB,4BACI,wBAAImD,QAAQ,KAAZ,WACA,wBAAIA,QAAQ,KACP,EAAKtN,MAAMkO,IAAM,IAG1B,4BACI,wBAAIZ,QAAQ,KAAZ,WACA,wBAAIA,QAAQ,KACP,EAAKtN,MAAMkO,IAAM,IAG1B,4BACI,wBAAIZ,QAAQ,KAAZ,YAGA,wBAAIA,QAAQ,KACP,EAAKtN,MAAMkO,MAGpB,4BACI,wBAAIZ,QAAQ,KAAZ,cAGA,wBAAIA,QAAQ,KACP,EAAKtN,MAAMmK,aAGpB,4BACI,wBAAImD,QAAQ,KAAZ,eAGA,wBAAIA,QAAQ,KACP,EAAKtN,MAAM0J,SAKxB,+BACI,4BACI,wBAAI4D,QAAQ,KAAZ,sBAQpB,kBAAC3P,EAAA,EAAK4P,OAAN,CAAa7P,UAAU,aACnB,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,aAKe,IACX,+CAEJ,wBACID,MAAO,CACHC,cAAe,eAFvB,oBAOA,wBACID,MAAO,CACHC,cAAe,eAFvB,iCASJ,kBAACQ,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,aAKc,8CAEd,wBACID,MAAO,CACHC,cAAe,eAFvB,2BAOA,uDAljBpC,EAAK4B,MAAQ,CACT2N,SAAU,KACVvM,iBAAiB,EACjByM,aAAc,KACdc,WAAY,EAEZN,WAAY,KACZlE,WAAY,EACZO,QAAS,EACT4D,KAAM,KACN7H,KAAM,KACNyH,IAAK,KACLC,KAAM,EACN9F,QAAS,KACT4F,MAAO,KACPvE,MAAO,EACP6E,UAAW,KAEXT,UAAW,GACXgB,gBAAgB,GAtBL,E,gDA8DnB,SAAazM,GAAK,IAAD,OAGThB,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,kDAA8Ca,EAA9C,MAEX9C,GACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,wBAAyBF,EAAIN,MACzCa,IAAMC,QAAQ,6BACdD,IAAMC,QAAQ,+BACd,EAAKuL,mBAER5L,OAAM,SAACC,GACJH,QAAQC,IAAI,wBAAyBE,GACrCG,IAAMI,MAAM,gC,iCAIxB,WACI,IAAMyM,EAAQ,oBAAsBpI,OAASC,OAAO,cACpDxH,KAAE4P,UAAUC,OAAM,WACd7P,KAAE,aAAaE,UAAU,CACrBmD,SAAS,EACTyM,IACI,sJAIJvM,QAAS,CACL,CACIC,OAAQ,MACRmM,QACAjM,SAAU,OACVqM,cAAe,CACXC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAGpC,CACIxM,OAAQ,QACRmM,QACAlM,WAAW,iCAAD,OAAmCkM,EAAnC,SACVjM,SAAU,OACVqM,cAAe,CACXC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,a,4BAQpD,WACInN,KAAKyL,kB,+BAET,WACIzL,KAAKoN,mB,gCAGT,SAAmB/O,GAAI,IAAD,OAIde,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MALO,iDAA6CS,KAAKjC,MAAM2O,WAAxD,2BAAqF1M,KAAKjC,MAAM2O,WAAhG,qBAAuH1M,KAAKjC,MAAM6N,aAAlI,MAOXtO,GACKkC,KATKzC,sCASKqC,GACVK,MAAK,SAACC,GACHO,IAAMC,QAAQ,qCACd,EAAKuL,mBAER5L,OAAM,SAACC,GACJH,QAAQC,IAAIE,Q,oBAybxB,WACI,OACI,6BACI,kBAACpD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACImG,GAAG,KACHrH,UAAU,mBACVS,MAAO,CAAEmR,UAAW,SAEpB,6BACI,2BACIjN,GAAG,WACHoC,MAAM,UACNtG,MAAO,CAAE6G,MAAO,SAEhB,+BACI,wBAAI5E,MAAM,UACN,wBAAIA,MAAM,UAAV,WACA,wBAAIA,MAAM,UAAV,cACA,wBAAIA,MAAM,UAAV,OACA,wBAAIA,MAAM,UAAV,cACA,wBAAIA,MAAM,UAAV,SACA,wBAAIA,MAAM,UAAV,QACA,wBAAIA,MAAM,UAAV,WACA,wBAAIA,MAAM,UAAV,QACA,wBAAIA,MAAM,UAAV,aAGR,+BAAQ6B,KAAK8L,mBAEhB9L,KAAKyM,oBACLzM,KAAK2M,iC,GAjmBUvJ,aCFtC9F,GAAQF,EAAQ,IAEDkQ,G,kDACjB,WAAY9R,GAAQ,IAAD,8BACf,gBAwBJiQ,cAAgB,WACZ,IAEIrM,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,8IAEXjC,GACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,SAAUF,EAAIN,MAC1B,EAAKzB,SAAS,CAAE+N,SAAUhM,EAAIN,OAG9B,EAAKkF,yBAERzE,OAAM,SAACC,GACJH,QAAQC,IAAI,kCAAmCE,OAvCxC,EA2CnB6L,kBAAoB,WAChB,IAEIvM,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,8GAA0G,EAAKxB,MAAM6N,eAEhItO,GACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,mBAAoBF,EAAIN,MACpC,EAAKzB,SAAS,CAAEkO,UAAWnM,EAAIN,OAG/B,EAAKkF,yBAERzE,OAAM,SAACC,GACJH,QAAQC,IAAI,0BAA2BE,OAzDhC,EA0InBgM,eAAiB,WACb,OAA2B,MAAvB,EAAK/N,MAAM2N,SAAyB,KAGjC,EAAK3N,MAAM2N,SAASzN,KAAI,SAAC8N,GAC5B,OACI,wBAAI5N,MAAM,UACN,4BAAK4N,EAAK3L,IACV,4BAAK2L,EAAKC,OACV,4BAAKD,EAAK7D,YACV,4BAAK6D,EAAKtE,OACV,4BAAKsE,EAAKG,MACV,4BAAKH,EAAKtD,SACV,4BAAK/D,KAAOqH,EAAKvH,MAAMG,OAAO,eAC9B,wBAAIlJ,UAAU,iCAAd,OAEI,kBAAC,IAAD,CACIA,UAAU,OACV2C,MAAM,UACNnC,QAAQ,YACRY,QAAS,WACL,EAAKc,SACD,CACIiO,aAAcG,EAAK3L,GACnB+L,sBAAsB,EACtBC,WAAYL,EAAKK,WACjBC,KAAMN,EAAKM,KACX7H,KAAMuH,EAAKvH,KACXwH,MAAOD,EAAKC,MACZvE,MAAOsE,EAAKtE,MACZS,WAAY6D,EAAK7D,WACjBoE,UAAWP,EAAKO,WAEpB,EAAKX,qBAIb,kBAAC,IAAD,CAAiB/M,KAAM2N,OAE3B,kBAAC,IAAD,CACI9Q,UAAU,OACV2C,MAAM,UACNnC,QAAQ,YACRY,QAAS,WACL,EAAKc,SAAS,CACViO,aAAcG,EAAK3L,GACnBjB,iBAAiB,MAIzB,kBAAC,IAAD,CAAiBP,KAAM4N,OAE3B,kBAAC,IAAD,CACI/Q,UAAU,OACV2C,MAAM,SACNnC,QAAQ,YACRY,QAAS,SAACwB,GACFrB,OAAO+B,QAAQ,qBACf,EAAKC,aAAa+M,EAAK3L,MAI/B,kBAAC,IAAD,CAAiBxB,KAAMK,aAxM5B,EAgNnBwN,kBAAoB,WAChB,OACI,kBAACzL,EAAA,EAAD,CACIC,KAAM,EAAKlD,MAAMoB,gBACjB+B,OAAQ,SAAC7C,GAAD,OAAO,EAAKV,SAAS,CAAEwB,iBAAiB,KAChD5C,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,gBAIJ,kBAACY,EAAA,EAAMrF,KAAP,KACI,0BAAM6F,YAAU,EAACC,aAAa,OAC1B,yBAAKhG,UAAU,QACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC8E,EAAA,EAAD,CACItB,GAAG,UACHuB,MAAM,OACN1F,QAAQ,WACRR,UAAU,MACVmG,aAAa,GACbhE,MAAO,EAAKG,MAAM2O,WAClB7K,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACV+O,WAAYrO,EAAEyD,OAAOlE,cAQ7C,yBAAKnC,UAAU,aACX,kBAAC,IAAD,CACIS,MAAO,CAAEoG,MAAO,SAChBzF,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVwB,iBAAiB,IAErB,EAAKoD,mBAAmBlE,IAE5BpC,QAAQ,YACRmC,MAAM,WATV,eArPL,EAyQnBuO,uBAAyB,WACrB,OACI,kBAAC3L,EAAA,EAAD,CACIC,KAAM,EAAKlD,MAAMoO,qBACjBjL,OAAQ,SAAC7C,GAAD,OAAO,EAAKV,SAAS,CAAEwO,sBAAsB,KACrD5P,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,iBAIJ,yBAAK3E,UAAU,gBACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKlB,UAAU,WACX,kBAACC,EAAA,EAAD,CAAMD,UAAU,OACZ,kBAACC,EAAA,EAAK2F,OAAN,KACI,kBAAC3F,EAAA,EAAK6F,MAAN,CAAY9F,UAAU,yBAClB,uCAEJ,6BAEA,uBAAGA,UAAU,eAAb,wCAEI,6BAFJ,uCAKA,6BAEA,0BACIS,MAAO,CACH6O,QAAS,OACTC,WAAY,SACZC,eAAgB,kBAGpB,yCACgB,IACZ,2BAAI,EAAKlN,MAAM6N,eAEnB,kCACS,IACL,2BACKlH,KAAO,EAAK3G,MAAMyG,MAAMG,OACrB,eAKhB,kBAACjJ,EAAA,EAAK6F,MAAN,CAAY9F,UAAU,yBAClB,4BACI,6CAIZ,kBAACC,EAAA,EAAKC,KAAN,CAAWF,UAAU,aACjB,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,cAKgB,IACZ,2BAAI,EAAK4B,MAAMiO,UAI3B,kBAACtP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,WAKa,IACT,2BAAI,EAAK4B,MAAMyL,WAGvB,kBAAC7M,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,eAKiB,IACb,2BAAI,EAAK4B,MAAMuO,cAI3B,kBAAC5P,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,mBAKqB,IACjB,2BAAI,EAAK4B,MAAMqO,cAGvB,kBAACzP,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,QAKU,IACN,2BACKuI,KACG,EAAK3G,MAAMyG,MACbG,OAAO,kBAKzB,kBAACjI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,UAKW,2BAAI,EAAK4B,MAAMkM,QAE1B,wBACI/N,MAAO,CACHC,cAAe,eAFvB,SAKU,2BAAI,EAAK4B,MAAMsO,QAG7B,kBAAC1P,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,YAUZ,kBAACT,EAAA,EAAKC,KAAN,CAAWF,UAAU,YAEjB,kBAAC,KAAD,CAAKyP,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC7O,KAAK,MAC7B,+BACI,4BACI,0CACA,wCACA,wCACA,oCACA,wCAGP,EAAKwB,MAAM8N,UAAU1G,OAAS,EAC3B,+BACK,EAAKpH,MAAM8N,UAAU5N,KAClB,SAAC8I,EAAM6B,GACH,OAGI,wBACIvD,IACI,GACA0B,EAAKqB,YAGT,4BAEQrB,EAAKqB,WACP,KAEN,oCACA,4BAEQrB,EAAK6F,QAGb,4BACK7F,EAAKQ,MAEV,4BAEQR,EAAK5C,YAO7B,6BACA,4BACI,wBAAIkH,QAAQ,KAAZ,gBAGA,wBAAIA,QAAQ,KACP,EAAKtN,MAAM0J,MACR,EAAK1J,MACAmK,aAGjB,4BACI,wBAAImD,QAAQ,KAAZ,cAGA,wBAAIA,QAAQ,KACP,EAAKtN,MAAMmK,aAGpB,4BACI,wBAAImD,QAAQ,KAAZ,eAGA,wBAAIA,QAAQ,KACP,EAAKtN,MAAM0J,SAKxB,+BACI,4BACI,wBAAI4D,QAAQ,KAAZ,sBAQpB,kBAAC3P,EAAA,EAAK4P,OAAN,CAAa7P,UAAU,aACnB,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,aAKe,IACX,+CAEJ,wBACID,MAAO,CACHC,cAAe,eAFvB,oBAOA,wBACID,MAAO,CACHC,cAAe,eAFvB,iCASJ,kBAACQ,EAAA,EAAD,CAAKmG,GAAI,GACL,wBACI5G,MAAO,CACHC,cAAe,eAFvB,YAKc,IACV,4DAIJ,wBACID,MAAO,CACHC,cAAe,eAFvB,2BAOA,uDA5hBpC,EAAK4B,MAAQ,CACT2N,SAAU,KACVvM,iBAAiB,EACjByM,aAAc,KACdc,WAAY,EAEZN,WAAY,KACZlE,WAAY,EACZO,QAAS,EACT4D,KAAM,KACN7H,KAAM,KACN0H,KAAM,EACN9F,QAAS,KACT4F,MAAO,KACPvE,MAAO,EACP6E,UAAW,KAEXT,UAAW,GACXgB,gBAAgB,GArBL,E,gDA6DnB,SAAazM,GAAK,IAAD,OAGThB,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,0DAAsDa,EAAtD,MAEX9C,GACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,wBAAyBF,EAAIN,MACzCO,QAAQC,IAAI,6BACZK,IAAMC,QAAQ,+BACd,EAAKuL,mBAER5L,OAAM,SAACC,GACJH,QAAQC,IAAI,wBAAyBE,Q,iCAIjD,WACI,IAAMgN,EAAQ,wBAA0BpI,OAASC,OAAO,cACxDxH,KAAE4P,UAAUC,OAAM,WACd7P,KAAE,aAAaE,UAAU,CACrBmD,SAAS,EACTyM,IACI,sJAIJvM,QAAS,CACL,CACIC,OAAQ,MACRmM,QACAjM,SAAU,OACVqM,cAAe,CACXC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAGpC,CACIxM,OAAQ,QACRmM,QACAlM,WAAW,iCAAD,OAAmCkM,EAAnC,SACVjM,SAAU,OACVqM,cAAe,CACXC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,a,4BAQpD,WACInN,KAAKyL,kB,+BAET,WACIzL,KAAKoN,mB,gCAGT,SAAmB/O,GAAI,IAAD,OAIde,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MALO,oDAAgDS,KAAKjC,MAAM2O,WAA3D,2BAAwF1M,KAAKjC,MAAM2O,WAAnG,qBAA0H1M,KAAKjC,MAAM6N,aAArI,MAOXtO,GACKkC,KATKzC,sCASKqC,GACVK,MAAK,SAACC,GACHO,IAAMC,QAAQ,qCACd,EAAKuL,mBAER5L,OAAM,SAACC,GACJH,QAAQC,IAAIE,Q,oBAqaxB,WACI,OACI,6BACI,kBAACpD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACImG,GAAG,KACHrH,UAAU,mBACVS,MAAO,CAAEmR,UAAW,SAEpB,6BACI,2BACIjN,GAAG,WACHoC,MAAM,UACNtG,MAAO,CAAE6G,MAAO,SAEhB,+BACI,wBAAI5E,MAAM,UACN,wBAAIA,MAAM,UAAV,WACA,wBAAIA,MAAM,UAAV,cACA,wBAAIA,MAAM,UAAV,cACA,wBAAIA,MAAM,UAAV,SACA,wBAAIA,MAAM,UAAV,QACA,wBAAIA,MAAM,UAAV,WACA,wBAAIA,MAAM,UAAV,QACA,wBAAIA,MAAM,UAAV,aAGR,+BAAQ6B,KAAK8L,mBAEhB9L,KAAKyM,oBACLzM,KAAK2M,iC,GA1kBavJ,aCwDhCmK,OAtDf,WACI,MAA0BC,IAAMC,SAAS,KAAzC,mBAAO7P,EAAP,KAAc8P,EAAd,KAMA,OACI,kBAACjK,EAAA,EAAD,CACI7F,MAAOA,EACPnC,UAAU,uCAEV,kBAACiI,EAAA,EAAD,CAAQV,SAAS,SAAS5E,MAAM,WAC5B,kBAACuF,EAAA,EAAD,CACI9B,SAXG,SAACpE,EAAOC,GACvBgQ,EAAShQ,IAWGgF,aAAW,sBACXkB,eAAe,UACfC,UAAU,WAEV,kBAACC,EAAA,EAAD,CAAKnC,MAAM,WAAW/D,MAAM,MAC5B,kBAACkG,EAAA,EAAD,CAAKnC,MAAM,qBAAqB/D,MAAM,MACtC,kBAACkG,EAAA,EAAD,CAAKnC,MAAM,yBAAyB/D,MAAM,QAGlD,kBAACmG,EAAA,EAAD,CACInG,MAAM,IACNnC,UAAU,kBACVS,MAAO,CAAEyR,QAAS,wBAElB,kBAAC,GAAD,OAEJ,kBAAC5J,EAAA,EAAD,CACInG,MAAM,IACNnC,UAAU,kBACVS,MAAO,CAAEyR,QAAS,wBAElB,kBAAC,GAAD,OAEJ,kBAAC5J,EAAA,EAAD,CACInG,MAAM,IACNnC,UAAU,kBACVS,MAAO,CAAEyR,QAAS,wBAElB,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CACI3K,SAAU/C,IAAMgD,SAASC,UACzBC,UAAW,QClErB7F,I,OAAQF,EAAQ,KAETmI,GAAb,kDACI,WAAY/J,GAAQ,IAAD,8BACf,cAAMA,IACDuC,MAAQ,CACTqI,QAAS,EAAK5K,MAAM4K,QACpBgC,WAAY,KACZX,MAAO,EACPmG,MAAO,EACPC,OAAQ,EACRpF,QAAS,GARE,EADvB,qDAaI,WAAqB,IAAD,OAKZrJ,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MALO,oDAAgDS,KAAKjC,MAAMqI,QAA3D,+BAOX9I,GACKkC,KAVKzC,sCAUKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,mBAAoBF,EAAIN,KAAK,GAAT,SAChC,EAAKzB,SAAS,CAAE8K,QAAS/I,EAAIN,KAAK,GAAT,UACzBO,QAAQC,IAAI,0CAEfC,OAAM,SAACC,GACJH,QAAQC,IAAIE,QA/B5B,6BAmCI,SAAgBzB,GAAI,IAAD,OACfA,EAAE0B,iBAEFC,KAAKjC,MAAM0K,QACPzI,KAAKjC,MAAM8P,OAAS7N,KAAKjC,MAAM6P,MAAQ5N,KAAKjC,MAAM0K,QACtD,IAEIrJ,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MALO,kFAA8ES,KAAKjC,MAAMqI,QAAzF,cAAsGpG,KAAKjC,MAAMqK,WAAjH,cAAiIpI,KAAKjC,MAAM6P,MAA5I,aAAsJ5N,KAAKjC,MAAM8P,OAAjK,aAA4K7N,KAAKjC,MAAM0K,QAAvL,OAOXnL,GACKkC,KAXKzC,sCAWKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,oCACZK,IAAMC,QAAQ,oCACd,EAAK1E,MAAMwJ,mBAEdnF,OAAM,SAACC,GACJH,QAAQC,IAAIE,QAvD5B,+BA2DI,WACIE,KAAK8N,sBA5Db,oBA+DI,WAAU,IAAD,OACL,OACI,yBAAKrS,UAAU,OACX,0BAAMgG,aAAa,OACf,yBAAKhG,UAAU,iBACX,kBAACiG,EAAA,EAAD,CACItB,GAAG,aACHuB,MAAM,aACN1F,QAAQ,WACR8I,KAAK,OACLtJ,UAAU,OACVkK,UAAU,EACVpJ,KAAK,QACLsF,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CAAEyK,WAAY/J,EAAEyD,OAAOlE,WAgB7C,kBAAC8D,EAAA,EAAD,CACItB,GAAG,QACHuB,MAAM,QACN1F,QAAQ,WACR8I,KAAK,SACLtJ,UAAU,OACVc,KAAK,QACLsF,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CAAEiQ,MAAOvP,EAAEyD,OAAOlE,WAGxC,kBAAC8D,EAAA,EAAD,CACItB,GAAG,SACHuB,MAAM,SACN1F,QAAQ,WACRR,UAAU,OACVsJ,KAAK,SACLxI,KAAK,QACLsF,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CAAEkQ,OAAQxP,EAAEyD,OAAOlE,WAIzC,kBAAC,IAAD,CACIQ,MAAM,UACNnC,QAAQ,YACRR,UAAU,GACVoB,QAAS,SAACwB,GAAD,OAAO,EAAKwE,gBAAgBxE,KAErC,kBAAC,IAAD,CAAiBO,KAAMgH,IAAcrJ,KAAK,QAE9C,kBAAC,IAAD,CACI6B,MAAM,UACNnC,QAAQ,YACRR,UAAU,OACVoB,QAASmD,KAAKxE,MAAMwJ,eAEpB,kBAAC,IAAD,CAAiBpG,KAAM+D,IAAWpG,KAAK,UAInD,kBAAC,IAAD,WAtIhB,GAAiC6G,aCoB3B9F,GAAQF,EAAQ,IAyUP2Q,G,kDAtUX,WAAYvS,GAAQ,IAAD,8BACf,cAAMA,IAqDVwS,gBAAkB,WAEd,IAAK,EAAKjQ,MAAMqI,QAAS,OAAO,KAEhC,IAEIhH,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,8CAA0C,EAAKxB,MAAMqI,QAArD,MAEX9I,GACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,gBAAiBF,EAAIN,MACjC,EAAKzB,SAAS,CAAEsQ,WAAYvO,EAAIN,OAChC,EAAKkF,yBAERzE,OAAM,SAACC,GACJH,QAAQC,IAAI,4BAA6BE,OArElC,EAuGnBoO,gBAAkB,WACd,IAAMhQ,EAAQ,EAAKH,MAAMoQ,UACzB,OAAKjQ,GAASA,EAAMiH,OAAS,EAAU,KAGnC,yBAAK1J,UAAU,QACX,wBAAIA,UAAU,mBACTyC,EAAM,GAAN,GADL,MACuB,2BAAIA,EAAM,GAAN,OAE3B,kBAAC,IAAD,CACIE,MAAM,UACNnC,QAAQ,WACRR,UAAU,oBAEV,sDAEI,2BAAI,EAAKsC,MAAMqQ,kBAvHhB,EA6HnBC,iBAAmB,WACf,GAA6B,MAAzB,EAAKtQ,MAAMkQ,WACX,OAAO,KAGX,IAAMK,EAAS,EAAKvQ,MAAMkQ,WACtBhI,EAAgB,KAChBwC,EAAU,EAEd,OAAO6F,EAAOrQ,KAAI,SAACiI,GAQf,OANAD,EAAgBvB,KAAOwB,EAAM,eAAmBvB,OAC5C,uBAGJ8D,EACIA,EAAUvC,EAAM,MAAYA,EAAM,MAAYA,EAAM,OAEpD,4BACI,wBAAI/H,MAAM,UACN,kBAACnC,EAAA,EAAD,CAAOC,QAAQ,WAAWiK,EAAM,IAAgB,KAEpD,wBAAI/H,MAAM,UAAU+H,EAAM,YAC1B,4BAAKA,EAAM,OACX,4BAAKA,EAAM,OACX,4BAAKA,EAAM,QACX,4BAAKuC,GACL,4BAAKxC,GACL,wBAAI9H,MAAM,UACN,kBAAC,IAAD,CACIC,MAAM,UACNnC,QAAQ,YACRY,QAAS,SAACwB,GACN,EAAKV,SAAS,CACV4Q,eAAgBrI,EAAO9F,GACvBoO,iBAAkBtI,EAAOkC,WACzBqG,YAAavI,EAAO0H,MACpBc,aAAcxI,EAAO2H,OACrBc,cAAelG,IAEnB,EAAK9K,SAAS,CAAEwB,iBAAiB,MAGrC,kBAAC,IAAD,CAAiBP,KAAMC,OAE3B,kBAACmC,EAAA,EAAD,CACIC,KAAM,EAAKlD,MAAMoB,gBACjB+B,OAAQ,SAAC7C,GAAD,OACJ,EAAKV,SAAS,CAAEwB,iBAAiB,KAErC5C,KAAK,KACL4E,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,CAAanB,GAAG,iCAAhB,kBAIJ,kBAACY,EAAA,EAAMrF,KAAP,KACI,0BAAM6F,YAAU,EAACC,aAAa,OAC1B,yBAAKhG,UAAU,QACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC8E,EAAA,EAAD,CACItB,GAAG,aACHuB,MAAM,aACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI,EAAK7D,MACAyQ,iBAET3M,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACV6Q,iBACInQ,EAAEyD,OAAOlE,aAOjC,kBAAClB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,QACHuB,MAAM,QACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI,EAAK7D,MAAM0Q,YAEf5M,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACV8Q,YACIpQ,EAAEyD,OAAOlE,YAM7B,kBAACjB,EAAA,EAAD,KACI,kBAAC+E,EAAA,EAAD,CACItB,GAAG,SACHuB,MAAM,SACN1F,QAAQ,WACRR,UAAU,MACVmG,aACI,EAAK7D,MAAM2Q,aAEf7M,SAAU,SAACxD,GAAD,OACN,EAAKV,SAAS,CACV+Q,aACIrQ,EAAEyD,OAAOlE,cAQrC,yBAAKnC,UAAU,aACX,kBAAC,IAAD,CACIS,MAAO,CAAEoG,MAAO,SAChBzF,QAAS,SAACwB,GACN,EAAKV,SAAS,CACVwB,iBAAiB,IAErB,EAAKoD,mBAAmBlE,KANhC,oBAtPhC,EAAKN,MAAQ,CACTqI,QAAS,EAAK5K,MAAMoT,MAAMhE,OAAOxE,QACjClH,cAAc,EACdC,iBAAiB,EACjBoP,eAAgB,KAChBjQ,cAAe,KACfkQ,iBAAkB,KAClBC,YAAa,KACbC,aAAc,KACdC,cAAe,KACfR,UAAW,KACXF,WAAY,KACZG,aAAc,GAdH,E,gDAkBnB,WAAgB,IAAD,OAEX,IAAKpO,KAAKjC,MAAMqI,QAAS,OAAO,KAEhC,IAEIhH,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,+FAA2FS,KAAKjC,MAAMqI,QAAtG,MAEX9I,GACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,kBAAmBF,EAAIN,KAAK,GAAT,SAC/B,EAAKzB,SAAS,CAAEyQ,aAAc1O,EAAIN,KAAK,GAAT,aAEjCS,OAAM,SAACC,GACJH,QAAQC,IAAI,2BAA4BE,Q,4BAIpD,WAAkB,IAAD,OAEb,IAAKE,KAAKjC,MAAMqI,QAAS,OAAO,KAEhC,IAEIhH,EAAO,CAAEC,aAAa,EAAMC,aAAa,EAAMC,MADxC,uCAAmCS,KAAKjC,MAAMqI,QAA9C,MAEX9I,GACKkC,KAJKzC,sCAIKqC,GACVK,MAAK,SAACC,GACHC,QAAQC,IAAI,eAAgBF,EAAIN,MAChC,EAAKzB,SAAS,CAAEwQ,UAAWzO,EAAIN,UAElCS,OAAM,SAACC,GACJH,QAAQC,IAAI,2BAA4BE,Q,gCAuBpD,SAAmBzB,GAAI,IAAD,OAIde,EAAO,CACPC,aAAa,EACbC,aAAa,EACbC,MAJO,wCAAoCS,KAAKjC,MAAMyQ,iBAA/C,qBAA4ExO,KAAKjC,MAAM0Q,YAAvF,sBAAgHzO,KAAKjC,MAAM2Q,aAA3H,uBAAsJ1O,KAAKjC,MAAM4Q,cAAjK,sBAA4L3O,KAAKjC,MAAMwQ,eAAvM,MAMXjR,GACKkC,KATKzC,sCASKqC,GACVK,MAAK,SAACC,GACHO,IAAMC,QAAQ,uCACd,EAAK8N,qBAERnO,OAAM,SAACC,GACJH,QAAQC,IAAIE,Q,2BAIxB,WACI9C,OAAO8D,SAASC,QAAO,K,+BAG3B,WACIf,KAAK6O,iBACL7O,KAAKgO,kBACLhO,KAAK8O,iB,iCAyKT,WACI3R,KAAE,iBAAiBE,UAAU,CACzBmD,SAAS,M,oBAIjB,WAAU,IAAD,OACL,OACI,yBAAK/E,UAAU,kCACVuE,KAAKkO,kBACN,6BACA,6BACA,yBACI1L,MAAM,iBACNC,KAAK,QACLC,aAAW,iBAEX,kBAAC,GAAD,CACI0D,QAASpG,KAAKjC,MAAMqI,QACpBpB,cAAe,kBAAM,EAAKA,iBAC1BoJ,aAAcpO,KAAKjC,MAAMqQ,gBAIjC,kBAAC1R,EAAA,EAAD,CAAKjB,UAAU,aACX,kBAACkB,EAAA,EAAD,CAAKmG,GAAG,KAAKrH,UAAU,oBACnB,kBAAC+K,GAAA,EAAD,CACIvB,UAAWC,IACXhJ,MAAO,CAAEuK,UAAW,SAEpB,2BACIrG,GAAG,eACHoC,MAAM,UACNtG,MAAO,CAAE6G,MAAO,SAEhB,+BACI,4BACI,wBAAI5E,MAAM,UAAV,MACA,wBAAIA,MAAM,UAAV,cACA,qCACA,qCACA,wBAAIA,MAAM,UAAV,UACA,uCACA,6CACA,wBAAIA,MAAM,UAAV,aAGR,kBAACuI,GAAA,EAAD,KAAY1G,KAAKqO,6B,GA7TrBjL,aC6Cb2L,OAhEf,SAAcvT,GACV,MAA0CiS,mBAASjS,EAAMsF,SAAS/C,OAAlE,mBAAsBiR,GAAtB,WAQI,OACI,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,MACrB,kBAACF,EAAA,EAAOG,MAAR,CAAchP,GAAG,QAAQoD,KAAK,SAA9B,uCAIJ,yBAAK/H,UAAU,2BACX,kBAACiB,EAAA,EAAD,CAAKjB,UAAU,WACX,kBAACkB,EAAA,EAAD,CAAKlB,UAAU,2BACX,kBAAC,EAAD,CACII,KAZP,QAaOiB,OAAQ,WAjBhCkS,EAAiB,UAoBD,kBAACrS,EAAA,EAAD,CAAKlB,UAAU,sBACX,kBAAC,IAAD,KAEI,kBAAC,IAAD,CACI4T,OAAK,EACLC,KAAK,iBACLrK,UAAWsI,KAEf,kBAAC,IAAD,CACI+B,KAAK,gBACLD,OAAK,EACLpK,UAAW1B,IAGf,kBAAC,IAAD,CACI+L,KAAK,kBACLD,OAAK,EACLpK,UAAWY,KAEf,kBAAC,IAAD,CACIyJ,KAAK,kBACLD,OAAK,EACLpK,UAAWsK,KAEf,kBAAC,IAAD,CACID,KAAK,0BACLD,OAAK,EACLpK,UAAW8I,WCpElCyB,GAAgBC,0BAEhBC,GAAiB,SAAClU,GAC7B,MAA8BiS,mBAAS,MAAvC,mBAAOkC,EAAP,KAAgBC,EAAhB,KAEA,OACE,kBAACJ,GAAcK,SAAf,CAAwBjS,MAAO,CAAC+R,EAASC,IACtCpU,EAAMsU,WCoBEC,OAff,WACI,OACI,kBAAC,GAAD,KACI,kBAAC,IAAD,KACI,yBAAKtU,UAAU,2BACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO6T,KAAK,iBAAiBD,OAAK,EAACpK,UAAW8J,KAC9C,kBAAC,IAAD,CAAOO,KAAK,IAAIrK,UAAW8J,UCT7CiB,GAAcC,QACW,cAA7BjT,OAAO8D,SAASoP,UAEe,UAA7BlT,OAAO8D,SAASoP,UAEhBlT,OAAO8D,SAASoP,SAAStB,MACvB,2DAsCN,SAASuB,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT3Q,MAAK,SAAAgR,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5S,QACfuS,UAAUC,cAAcO,YAI1BnR,QAAQC,IACN,iHAKEyQ,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB9Q,QAAQC,IAAI,sCAGRyQ,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5B5Q,OAAM,SAAAQ,GACLV,QAAQU,MAAM,4CAA6CA,MCxFjE4Q,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFpE,SAASqE,eAAe,SDUnB,SAAkBf,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIe,IAAIC,kCAAwBtU,OAAO8D,SAAS0C,MACpD+N,SAAWvU,OAAO8D,SAASyQ,OAIvC,OAGFvU,OAAOwU,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMkB,kCAAN,sBAEPtB,KAgEV,SAAiCI,EAAOC,GAEtCoB,MAAMrB,EAAO,CACXsB,QAAS,CAAE,iBAAkB,YAE5BjS,MAAK,SAAAkS,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CzB,UAAUC,cAAcvD,MAAMvN,MAAK,SAAAgR,GACjCA,EAAauB,aAAavS,MAAK,WAC7BzC,OAAO8D,SAASC,eAKpBoP,GAAgBC,EAAOC,MAG1BxQ,OAAM,WACLF,QAAQC,IACN,oEAvFAqS,CAAwB7B,EAAOC,GAI/BC,UAAUC,cAAcvD,MAAMvN,MAAK,WACjCE,QAAQC,IACN,iHAMJuQ,GAAgBC,EAAOC,OChC/BE,I","file":"static/js/main.0f2aa82f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/qrcode.75f40b32.jpeg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Row, Col, Card, Button, Badge } from \"react-bootstrap\";\nimport \"./style.css\";\n\nfunction NavbarPanel(props) {\n    const handleLogout = () => {\n        props.logout();\n    };\n    return (\n        <div className=\"container-fluid  main-navbar\">\n            <div>\n                <Card className=\"mb-2\">\n                    <Card.Body className=\"p-2 profile-body\">\n                        <Avatar className=\"profile\">\n                            {props.user.slice(0, 1).toUpperCase()}\n                        </Avatar>\n                        <Badge\n                            variant=\"warning\"\n                            className=\"mt-2\"\n                            style={{ textTransform: \"capitalize\" }}\n                        >\n                            {props.user}\n                        </Badge>\n                    </Card.Body>\n                </Card>\n                <Card border=\"primary\" className=\"mb-2\">\n                    <Card.Body className=\"m-0 p-1\">\n                        <h6>Menu</h6>\n                        <Link to=\"/mainDashboard\">\n                            <Button\n                                variant=\"primary\"\n                                size=\"sm\"\n                                block\n                                className=\"mb-2\"\n                            >\n                                Order Manager\n                            </Button>\n                        </Link>\n\n                        <Link to=\"/productManager\">\n                            <Button\n                                variant=\"primary\"\n                                size=\"sm\"\n                                block\n                                className=\"mb-2\"\n                            >\n                                Product Manager\n                            </Button>\n                        </Link>\n\n                        <Link to=\"/partyManager\">\n                            <Button\n                                variant=\"primary\"\n                                size=\"sm\"\n                                block\n                                className=\"mb-2\"\n                            >\n                                Party Manager\n                            </Button>\n                        </Link>\n                        <Link to=\"/expenseManager\">\n                            <Button\n                                variant=\"primary\"\n                                size=\"sm\"\n                                block\n                                className=\"mb-2\"\n                            >\n                                Expense Manager\n                            </Button>\n                        </Link>\n                        <Link to=\"/workerManager\">\n                            <Button\n                                variant=\"primary\"\n                                size=\"sm\"\n                                block\n                                className=\"mb-2\"\n                                hidden\n                            >\n                                Worker Manager\n                            </Button>\n                        </Link>\n                    </Card.Body>\n                </Card>\n                <Card className=\"m-0 p-1\">\n                    <Card.Body className=\"m-0 p-1\">\n                        <Link to=\"/mainDashboard\">\n                            <Button\n                                variant=\"primary\"\n                                size=\"sm\"\n                                block\n                                className=\"mb-2\"\n                                hidden\n                            >\n                                settings\n                            </Button>\n                        </Link>\n                    </Card.Body>\n                </Card>\n            </div>\n            <Row>\n                <Col xs={6} className=\"mx-auto\">\n                    <Button\n                        variant=\"dark btn-block\"\n                        size=\"sm\"\n                        className=\"mb-2\"\n                        onClick={handleLogout}\n                    >\n                        Logout\n                    </Button>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default NavbarPanel;\n","// production URI\n// export const API_URL = \"https://acp.5techg.com/api/\";\n\n// dev URI\nexport const API_URL = \"http://localhost:5000/executeQuery/\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// material UI imports\nimport {\n    Button,\n    TextField,\n    InputLabel,\n    MenuItem,\n    Select,\n    FormControl,\n} from \"@material-ui/core\";\nimport { Row, Col, Button as Btn1, Modal, Badge } from \"react-bootstrap\";\n\n// font awasome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faPenAlt,\n    faBook,\n    faTrash,\n    faSyncAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Toastify imports\nimport { ToastContainer, toast } from \"react-toastify\";\n// import \"../ledger_manager/exportManager/node_modules/react-toastify/dist/ReactToastify.css\";\n\n//API handling components\nimport { API_URL } from \"./../../global\";\n\n// datatable setup\nimport jsZip from \"jszip\";\nwindow.JSZip = jsZip;\nvar $ = require(\"jquery\");\n$.DataTable = require(\"datatables.net\");\nrequire(\"datatables.net-bs4\");\nrequire(\"datatables.net-autofill-bs4\");\nrequire(\"datatables.net-buttons-bs4\");\nrequire(\"datatables.net-buttons/js/buttons.colVis\");\nrequire(\"datatables.net-buttons/js/buttons.flash\");\nrequire(\"datatables.net-buttons/js/buttons.html5\");\nrequire(\"datatables.net-buttons/js/buttons.print\");\nrequire(\"datatables.net-responsive-bs4\");\nrequire(\"datatables.net-scroller-bs4\");\nrequire(\"datatables.net-select-bs4\");\nrequire(\"pdfmake\");\n\n// constants\nconst axios = require(\"axios\");\n\nexport default class RetailerPartyManager extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showAddModal: false,\n            showUpdateModel: false,\n            value: \"1\",\n            activePartyId: \"\",\n            activePartyName: \"\",\n            activePartyMobile: \"\",\n            activePartyAddress: \"\",\n            activePartyType: 1,\n            partiesData: null,\n        };\n    }\n\n    fetchPartiesData() {\n        let url = API_URL;\n        const query = `SELECT * FROM partyView WHERE type=1 AND status=1;`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"party data: \", res.data);\n                this.setState({ partiesData: res.data });\n            })\n            .catch((err) => {\n                console.log(\"party data error: \", err);\n            });\n    }\n\n    handleUpdateSubmit(e) {\n        e.preventDefault();\n        let url = API_URL;\n\n        const query = `UPDATE party SET name=\"${this.state.activePartyName}\", mobile=\"${this.state.activePartyMobile}\", address=\"${this.state.activePartyAddress}\", type=${this.state.activePartyType} WHERE id=${this.state.activePartyId};`;\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(url, data)\n            .then((res) => {\n                toast.success(\"Party details updated successfully\");\n                this.fetchPartiesData();\n            })\n            .catch((err) => {\n                console.log(\"error while updating party data\", err);\n            });\n    }\n\n    handleAddSubmit(e) {\n        e.preventDefault();\n        let url = API_URL;\n\n        const query = `INSERT INTO party(name, mobile, address, type) VALUES('${this.state.activePartyName}', '${this.state.activePartyMobile}', '${this.state.activePartyAddress}', ${this.state.activePartyType})`;\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(url, data)\n            .then((res) => {\n                toast.success(\"party details added successfully\");\n                this.fetchPartiesData();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    deleteRecord(id) {\n        let url = API_URL;\n        const query = `UPDATE party SET status = 0  WHERE id=${id};`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"deleted status data: \", res.data);\n                console.log(\"Party deleted successfully\");\n                toast.error(\"Party deleted successfully\");\n                setTimeout(() => {\n                    this.refreshParties();\n                }, 2000);\n            })\n            .catch((err) => {\n                console.log(\"record delete error: \", err);\n            });\n    }\n\n    handleTabs = (event, newValue) => {\n        this.setState({ value: newValue });\n    };\n\n    componentDidMount() {\n        this.fetchPartiesData();\n    }\n\n    componentDidUpdate() {\n        $(\"#retailer_table\").DataTable({\n            destroy: true,\n            keys: true,\n            buttons: [\n                \"copy\",\n                \"csv\",\n                \"excel\",\n                {\n                    extend: \"pdf\",\n                    messageTop: \"<h4 style='text-align:center'>Users List</h4>\",\n                    download: \"open\",\n                },\n                {\n                    extend: \"print\",\n                    messageTop: \"<h4 style='text-align:center'>Users List</h4>\",\n                    download: \"open\",\n                },\n            ],\n        });\n    }\n\n    renderPartiesData = () => {\n        const parties = this.state.partiesData;\n\n        if (parties == null) {\n            return null;\n        }\n\n        return parties.map((party) => {\n            return (\n                <tr>\n                    <td align=\"center\">\n                        <Badge variant=\"primary\">{party[\"id\"]}</Badge>{\" \"}\n                    </td>\n                    <td align=\"center\">{party[\"name\"]}</td>\n                    <td align=\"center\">{party[\"mobile\"]}</td>\n                    <td align=\"center\">{party[\"address\"]}</td>\n                    <td align=\"center\">\n                        {party[\"balance\"] == null ? 0 : party[\"balance\"]}\n                    </td>\n                    <td align=\"center\">\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={(e) => {\n                                this.setState({\n                                    activePartyId: party[\"id\"],\n                                    activePartyName: party[\"name\"],\n                                    activePartyMobile: party[\"mobile\"],\n                                    activePartyAddress: party[\"address\"],\n                                    activePartyType: party[\"type\"],\n                                    showUpdateModal: true,\n                                });\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faPenAlt} />\n                        </Button>\n                        <Link to={`ledgerManager/${party[\"id\"]}`}>\n                            <Button\n                                className=\"mx-1\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={(e) => {}}\n                            >\n                                <FontAwesomeIcon icon={faBook} />\n                            </Button>\n                        </Link>\n                        <Button\n                            className=\"mx-1\"\n                            color=\"danger\"\n                            variant=\"contained\"\n                            onClick={(e) => {\n                                if (window.confirm(\"Delete the item?\")) {\n                                    this.deleteRecord(party[\"id\"]);\n                                }\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faTrash} />\n                        </Button>\n                    </td>\n                </tr>\n            );\n        });\n    };\n\n    refreshParties() {\n        window.location.reload(false);\n    }\n\n    renderUpdatePartyModal() {\n        return (\n            <Modal\n                show={this.state.showUpdateModal}\n                onHide={(e) => this.setState({ showUpdateModal: false })}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Update Party\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form noValidate autoComplete=\"off\">\n                        <div className=\"mt-3\">\n                            <Row>\n                                <Col size=\"12\">\n                                    <TextField\n                                        id=\"partyName\"\n                                        label=\"Party name\"\n                                        variant=\"outlined\"\n                                        className=\"m-2\"\n                                        defaultValue={\n                                            this.state.activePartyName\n                                        }\n                                        onChange={(e) => {\n                                            this.setState({\n                                                activePartyName: e.target.value,\n                                            });\n                                        }}\n                                    />\n                                </Col>\n                                <Col>\n                                    <TextField\n                                        id=\"mobile\"\n                                        label=\"Mobile\"\n                                        variant=\"outlined\"\n                                        className=\"m-2\"\n                                        defaultValue={\n                                            this.state.activePartyMobile\n                                        }\n                                        onChange={(e) =>\n                                            this.setState({\n                                                activePartyMobile:\n                                                    e.target.value,\n                                            })\n                                        }\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <TextField\n                                        id=\"address\"\n                                        s\n                                        label=\"Address\"\n                                        variant=\"outlined\"\n                                        className=\"m-2\"\n                                        defaultValue={\n                                            this.state.activePartyAddress\n                                        }\n                                        onChange={(e) =>\n                                            this.setState({\n                                                activePartyAddress:\n                                                    e.target.value,\n                                            })\n                                        }\n                                    />\n                                </Col>\n                                <Col>\n                                    <FormControl\n                                        variant=\"filled\"\n                                        style={{\n                                            minWidth: \"120px\",\n                                        }}\n                                        className=\"mt-2 ml-2\"\n                                    >\n                                        <InputLabel id=\"demo-simple-select-outlined-label\">\n                                            Type\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-outlined-label\"\n                                            id=\"demo-simple-select-outlined\"\n                                            label=\"type\"\n                                            defaultValue={\n                                                this.state.activePartyType\n                                            }\n                                            onChange={(e) =>\n                                                this.setState({\n                                                    activePartyType:\n                                                        e.target.value,\n                                                })\n                                            }\n                                        >\n                                            <MenuItem value={2}>\n                                                Wholeseller\n                                            </MenuItem>\n                                            <MenuItem value={3}>\n                                                Customer\n                                            </MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Col>\n                            </Row>\n                        </div>\n                        <hr />\n                        <div className=\"mt-2 mr-1\">\n                            <Btn1\n                                style={{ float: \"right\" }}\n                                onClick={(e) => {\n                                    this.setState({\n                                        showUpdateModal: false,\n                                    });\n                                    this.handleUpdateSubmit(e);\n                                }}\n                            >\n                                Update\n                            </Btn1>\n                        </div>\n                    </form>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n    render() {\n        return (\n            <div className=\"container-fluid border m-0 p-0 main\">\n                <div className=\"m-0 p-0\">\n                    <div className=\"container-fluid border m-0 p-1\">\n                        <div\n                            class=\"btn-group\"\n                            role=\"group\"\n                            aria-label=\"Basic example\"\n                        >\n                            <Button\n                                className=\"mt-1 mr-1 mb-3\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={(e) => {\n                                    this.setState({ showAddModal: true });\n                                }}\n                            >\n                                add new retailer\n                            </Button>\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                className=\"mt-1 mr-1 mb-3 ml-5\"\n                                onClick={this.refreshParties}\n                            >\n                                <FontAwesomeIcon icon={faSyncAlt} size=\"2x\" />\n                            </Button>\n                        </div>\n\n                        {this.renderUpdatePartyModal()}\n                        <Modal\n                            show={this.state.showAddModal}\n                            onHide={(e) =>\n                                this.setState({ showAddModal: false })\n                            }\n                            size=\"md\"\n                            aria-labelledby=\"contained-modal-title-vcenter\"\n                            centered\n                        >\n                            <Modal.Header closeButton>\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\n                                    Add New Retailer\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <form noValidate autoComplete=\"off\">\n                                    <div className=\"mt-3\">\n                                        <Row>\n                                            <Col size=\"12\">\n                                                <TextField\n                                                    id=\"partyName\"\n                                                    label=\"Party name\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue=\"\"\n                                                    onChange={(e) => {\n                                                        this.setState({\n                                                            activePartyName:\n                                                                e.target.value,\n                                                        });\n                                                    }}\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <TextField\n                                                    id=\"mobile\"\n                                                    label=\"Mobile\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue=\"\"\n                                                    onChange={(e) =>\n                                                        this.setState({\n                                                            activePartyMobile:\n                                                                e.target.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <TextField\n                                                    id=\"address\"\n                                                    s\n                                                    label=\"Address\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue=\"\"\n                                                    onChange={(e) =>\n                                                        this.setState({\n                                                            activePartyAddress:\n                                                                e.target.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <FormControl\n                                                    variant=\"filled\"\n                                                    style={{\n                                                        minWidth: \"120px\",\n                                                    }}\n                                                    className=\"mt-2 ml-2\"\n                                                >\n                                                    <InputLabel id=\"demo-simple-select-outlined-label\">\n                                                        Type\n                                                    </InputLabel>\n                                                    <Select\n                                                        labelId=\"demo-simple-select-outlined-label\"\n                                                        id=\"demo-simple-select-outlined\"\n                                                        label=\"type\"\n                                                        defaultValue={1}\n                                                        onChange={(e) =>\n                                                            this.setState({\n                                                                activePartyType:\n                                                                    e.target\n                                                                        .value,\n                                                            })\n                                                        }\n                                                    >\n                                                        <MenuItem value={1}>\n                                                            DistributorPartyManager\n                                                        </MenuItem>\n                                                    </Select>\n                                                </FormControl>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <hr />\n                                    <div className=\"mt-2 mr-1\">\n                                        <Btn1\n                                            style={{ float: \"right\" }}\n                                            onClick={(e) => {\n                                                this.setState({\n                                                    showAddModal: false,\n                                                });\n                                                this.handleAddSubmit(e);\n                                            }}\n                                        >\n                                            Add\n                                        </Btn1>\n                                    </div>\n                                </form>\n                            </Modal.Body>\n                        </Modal>\n                        <Row className=\"ml-0 mr-0\">\n                            <Col md=\"12\" className=\"p-0 m-0 measure1\">\n                                <div>\n                                    <table\n                                        id=\"retailer_table\"\n                                        className=\"display\"\n                                        style={{ width: \"100%\" }}\n                                    >\n                                        <thead>\n                                            <tr align=\"center\">\n                                                <th>Party Id</th>\n                                                <th>Name</th>\n                                                <th>Mobile No</th>\n                                                <th>Address</th>\n                                                <th>Balance</th>\n                                                <th>Options</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.renderPartiesData()}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n\n                <ToastContainer\n                    position={toast.POSITION.TOP_RIGHT}\n                    autoClose={5000}\n                />\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// material UI imports\nimport {\n    AppBar,\n    Tab,\n    Button,\n    TextField,\n    InputLabel,\n    MenuItem,\n    Select,\n    FormControl,\n} from \"@material-ui/core\";\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\nimport { Row, Col, Button as Btn1, Modal, Badge } from \"react-bootstrap\";\n\n// font awasome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faPenAlt,\n    faBook,\n    faTrash,\n    faSyncAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Toastify imports\nimport { ToastContainer, toast } from \"react-toastify\";\n// import \"../ledger_manager/exportManager/node_modules/react-toastify/dist/ReactToastify.css\";\n\n//API handling components\nimport { API_URL } from \"./../../global\";\n\n// datatable setup\nimport jsZip from \"jszip\";\nwindow.JSZip = jsZip;\nvar $ = require(\"jquery\");\n$.DataTable = require(\"datatables.net\");\nrequire(\"datatables.net-bs4\");\nrequire(\"datatables.net-autofill-bs4\");\nrequire(\"datatables.net-buttons-bs4\");\nrequire(\"datatables.net-buttons/js/buttons.colVis\");\nrequire(\"datatables.net-buttons/js/buttons.flash\");\nrequire(\"datatables.net-buttons/js/buttons.html5\");\nrequire(\"datatables.net-buttons/js/buttons.print\");\nrequire(\"datatables.net-responsive-bs4\");\nrequire(\"datatables.net-scroller-bs4\");\nrequire(\"datatables.net-select-bs4\");\nrequire(\"pdfmake\");\n\n// constants\nconst axios = require(\"axios\");\n\nexport default class WholesellerPartyManager extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showAddModal: false,\n            showUpdateModel: false,\n            value: \"1\",\n            activePartyId: \"\",\n            activePartyName: \"\",\n            activePartyMobile: \"\",\n            activePartyAddress: \"\",\n            activePartyType: 2,\n            partiesData: null,\n        };\n    }\n\n    fetchPartiesData() {\n        let url = API_URL;\n        const query = `SELECT * FROM party WHERE type=2 AND status=1;`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"party data: \", res.data);\n                this.setState({ partiesData: res.data });\n            })\n            .catch((err) => {\n                console.log(\"party data error: \", err);\n            });\n    }\n\n    handleUpdateSubmit(e) {\n        e.preventDefault();\n        let url = API_URL;\n\n        const query = `UPDATE partyView SET name=\"${this.state.activePartyName}\", mobile=\"${this.state.activePartyMobile}\", address=\"${this.state.activePartyAddress}\", type=${this.state.activePartyType} WHERE id=${this.state.activePartyId};`;\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(url, data)\n            .then((res) => {\n                toast.success(\"Party details updated successfully\");\n                this.fetchPartiesData();\n            })\n            .catch((err) => {\n                console.log(\"error while updating party data\", err);\n            });\n    }\n\n    handleAddSubmit(e) {\n        e.preventDefault();\n        let url = API_URL;\n\n        const query = `INSERT INTO party(name, mobile, address, type) VALUES('${this.state.activePartyName}', '${this.state.activePartyMobile}', '${this.state.activePartyAddress}', ${this.state.activePartyType})`;\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(url, data)\n            .then((res) => {\n                toast.success(\"party details added successfully\");\n                this.fetchPartiesData();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    deleteRecord(id) {\n        let url = API_URL;\n        const query = `UPDATE party SET status = 0  WHERE id=${id};`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"deleted status data: \", res.data);\n                console.log(\"Party deleted successfully\");\n                toast.error(\"Party deleted successfully\");\n                setTimeout(() => {\n                    this.refreshParties();\n                }, 2000);\n            })\n            .catch((err) => {\n                console.log(\"record delete error: \", err);\n            });\n    }\n\n    handleTabs = (event, newValue) => {\n        this.setState({ value: newValue });\n    };\n\n    componentDidMount() {\n        this.fetchPartiesData();\n    }\n\n    componentDidUpdate() {\n        $(\"#Wholeseller_table\").DataTable({\n            destroy: true,\n            keys: true,\n            buttons: [\n                \"copy\",\n                \"csv\",\n                \"excel\",\n                {\n                    extend: \"pdf\",\n                    messageTop: \"<h4 style='text-align:center'>Users List</h4>\",\n                    download: \"open\",\n                },\n                {\n                    extend: \"print\",\n                    messageTop: \"<h4 style='text-align:center'>Users List</h4>\",\n                    download: \"open\",\n                },\n            ],\n        });\n    }\n\n    renderPartiesData = () => {\n        const parties = this.state.partiesData;\n\n        if (parties == null) {\n            return null;\n        }\n\n        return parties.map((party) => {\n            return (\n                <tr>\n                    <td align=\"center\">\n                        <Badge variant=\"primary\">{party[\"id\"]}</Badge>{\" \"}\n                    </td>\n                    <td align=\"center\">{party[\"name\"]}</td>\n                    <td align=\"center\">{party[\"mobile\"]}</td>\n                    <td align=\"center\">{party[\"address\"]}</td>\n                    <td align=\"center\">\n                        {party[\"balance\"] == null ? 0 : party[\"balance\"]}\n                    </td>\n                    <td align=\"center\">\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={(e) => {\n                                this.setState({\n                                    activePartyId: party[\"id\"],\n                                    activePartyName: party[\"name\"],\n                                    activePartyMobile: party[\"mobile\"],\n                                    activePartyAddress: party[\"address\"],\n                                    activePartyType: party[\"type\"],\n                                    showUpdateModal: true,\n                                });\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faPenAlt} />\n                        </Button>\n                        <Link to={`ledgerManager/${party[\"id\"]}`}>\n                            <Button\n                                className=\"mx-1\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={(e) => {}}\n                            >\n                                <FontAwesomeIcon icon={faBook} />\n                            </Button>\n                        </Link>\n                        <Button\n                            className=\"mx-1\"\n                            color=\"danger\"\n                            variant=\"contained\"\n                            onClick={(e) => {\n                                if (window.confirm(\"Delete the item?\")) {\n                                    this.deleteRecord(party[\"id\"]);\n                                }\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faTrash} />\n                        </Button>\n                    </td>\n                </tr>\n            );\n        });\n    };\n\n    refreshParties() {\n        window.location.reload(false);\n    }\n\n    renderUpdatePartyModal() {\n        return (\n            <Modal\n                show={this.state.showUpdateModal}\n                onHide={(e) => this.setState({ showUpdateModal: false })}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Update Party\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form noValidate autoComplete=\"off\">\n                        <div className=\"mt-3\">\n                            <Row>\n                                <Col size=\"12\">\n                                    <TextField\n                                        id=\"partyName\"\n                                        label=\"Party name\"\n                                        variant=\"outlined\"\n                                        className=\"m-2\"\n                                        defaultValue={\n                                            this.state.activePartyName\n                                        }\n                                        onChange={(e) => {\n                                            this.setState({\n                                                activePartyName: e.target.value,\n                                            });\n                                        }}\n                                    />\n                                </Col>\n                                <Col>\n                                    <TextField\n                                        id=\"mobile\"\n                                        label=\"Mobile\"\n                                        variant=\"outlined\"\n                                        className=\"m-2\"\n                                        defaultValue={\n                                            this.state.activePartyMobile\n                                        }\n                                        onChange={(e) =>\n                                            this.setState({\n                                                activePartyMobile:\n                                                    e.target.value,\n                                            })\n                                        }\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <TextField\n                                        id=\"address\"\n                                        s\n                                        label=\"Address\"\n                                        variant=\"outlined\"\n                                        className=\"m-2\"\n                                        defaultValue={\n                                            this.state.activePartyAddress\n                                        }\n                                        onChange={(e) =>\n                                            this.setState({\n                                                activePartyAddress:\n                                                    e.target.value,\n                                            })\n                                        }\n                                    />\n                                </Col>\n                                <Col>\n                                    <FormControl\n                                        variant=\"filled\"\n                                        style={{\n                                            minWidth: \"120px\",\n                                        }}\n                                        className=\"mt-2 ml-2\"\n                                    >\n                                        <InputLabel id=\"demo-simple-select-outlined-label\">\n                                            Type\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-outlined-label\"\n                                            id=\"demo-simple-select-outlined\"\n                                            label=\"type\"\n                                            defaultValue={\n                                                this.state.activePartyType\n                                            }\n                                            onChange={(e) =>\n                                                this.setState({\n                                                    activePartyType:\n                                                        e.target.value,\n                                                })\n                                            }\n                                        >\n                                            <MenuItem value={1}>\n                                                Retailer\n                                            </MenuItem>\n                                            <MenuItem value={2}>\n                                                Wholeseller\n                                            </MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Col>\n                            </Row>\n                        </div>\n                        <hr />\n                        <div className=\"mt-2 mr-1\">\n                            <Btn1\n                                style={{ float: \"right\" }}\n                                onClick={(e) => {\n                                    this.setState({\n                                        showUpdateModal: false,\n                                    });\n                                    this.handleUpdateSubmit(e);\n                                }}\n                            >\n                                Update\n                            </Btn1>\n                        </div>\n                    </form>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n    render() {\n        return (\n            <div className=\"container-fluid border m-0 p-0 main\">\n                <div className=\"m-0 p-0\">\n                    <div className=\"container-fluid border m-0 p-1\">\n                        <div\n                            class=\"btn-group\"\n                            role=\"group\"\n                            aria-label=\"Basic example\"\n                        >\n                            <Button\n                                className=\"mt-1 mr-1 mb-3\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={(e) => {\n                                    this.setState({ showAddModal: true });\n                                }}\n                            >\n                                add new Wholeseller\n                            </Button>\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                className=\"mt-1 mr-1 mb-3 ml-5\"\n                                onClick={this.refreshParties}\n                            >\n                                <FontAwesomeIcon icon={faSyncAlt} size=\"2x\" />\n                            </Button>\n                        </div>\n\n                        {this.renderUpdatePartyModal()}\n                        <Modal\n                            show={this.state.showAddModal}\n                            onHide={(e) =>\n                                this.setState({ showAddModal: false })\n                            }\n                            size=\"md\"\n                            aria-labelledby=\"contained-modal-title-vcenter\"\n                            centered\n                        >\n                            <Modal.Header closeButton>\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\n                                    Add New Wholeseller\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <form noValidate autoComplete=\"off\">\n                                    <div className=\"mt-3\">\n                                        <Row>\n                                            <Col size=\"12\">\n                                                <TextField\n                                                    id=\"partyName\"\n                                                    label=\"Party name\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue=\"\"\n                                                    onChange={(e) => {\n                                                        this.setState({\n                                                            activePartyName:\n                                                                e.target.value,\n                                                        });\n                                                    }}\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <TextField\n                                                    id=\"mobile\"\n                                                    label=\"Mobile\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue=\"\"\n                                                    onChange={(e) =>\n                                                        this.setState({\n                                                            activePartyMobile:\n                                                                e.target.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <TextField\n                                                    id=\"address\"\n                                                    s\n                                                    label=\"Address\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue=\"\"\n                                                    onChange={(e) =>\n                                                        this.setState({\n                                                            activePartyAddress:\n                                                                e.target.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <FormControl\n                                                    variant=\"filled\"\n                                                    style={{\n                                                        minWidth: \"120px\",\n                                                    }}\n                                                    className=\"mt-2 ml-2\"\n                                                >\n                                                    <InputLabel id=\"demo-simple-select-outlined-label\">\n                                                        Type\n                                                    </InputLabel>\n                                                    <Select\n                                                        labelId=\"demo-simple-select-outlined-label\"\n                                                        id=\"demo-simple-select-outlined\"\n                                                        label=\"type\"\n                                                        defaultValue={2}\n                                                        onChange={(e) =>\n                                                            this.setState({\n                                                                activePartyType:\n                                                                    e.target\n                                                                        .value,\n                                                            })\n                                                        }\n                                                    >\n                                                        <MenuItem value={2}>\n                                                            Wholeseller\n                                                        </MenuItem>\n                                                    </Select>\n                                                </FormControl>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <hr />\n                                    <div className=\"mt-2 mr-1\">\n                                        <Btn1\n                                            style={{ float: \"right\" }}\n                                            onClick={(e) => {\n                                                this.setState({\n                                                    showAddModal: false,\n                                                });\n                                                this.handleAddSubmit(e);\n                                            }}\n                                        >\n                                            Add\n                                        </Btn1>\n                                    </div>\n                                </form>\n                            </Modal.Body>\n                        </Modal>\n                        <Row className=\"ml-0 mr-0\">\n                            <Col md=\"12\" className=\"p-0 m-0 measure1\">\n                                <div>\n                                    <table\n                                        id=\"Wholeseller_table\"\n                                        className=\"display\"\n                                        style={{ width: \"100%\" }}\n                                    >\n                                        <thead>\n                                            <tr align=\"center\">\n                                                <th>Party Id</th>\n                                                <th>Name</th>\n                                                <th>Mobile No</th>\n                                                <th>Address</th>\n                                                <th>Balance</th>\n                                                <th>Options</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.renderPartiesData()}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n\n                <ToastContainer\n                    position={toast.POSITION.TOP_RIGHT}\n                    autoClose={5000}\n                />\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// material UI imports\nimport {\n    AppBar,\n    Tab,\n    Button,\n    TextField,\n    InputLabel,\n    MenuItem,\n    Select,\n    FormControl,\n} from \"@material-ui/core\";\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\nimport { Row, Col, Button as Btn1, Modal, Badge } from \"react-bootstrap\";\n\n// font awasome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faPenAlt,\n    faBook,\n    faTrash,\n    faSyncAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Toastify imports\nimport { ToastContainer, toast } from \"react-toastify\";\n// import \"../ledger_manager/exportManager/node_modules/react-toastify/dist/ReactToastify.css\";\n\n//API handling components\nimport { API_URL } from \"./../../global\";\n\n// datatable setup\nimport jsZip from \"jszip\";\nwindow.JSZip = jsZip;\nvar $ = require(\"jquery\");\n$.DataTable = require(\"datatables.net\");\nrequire(\"datatables.net-bs4\");\nrequire(\"datatables.net-autofill-bs4\");\nrequire(\"datatables.net-buttons-bs4\");\nrequire(\"datatables.net-buttons/js/buttons.colVis\");\nrequire(\"datatables.net-buttons/js/buttons.flash\");\nrequire(\"datatables.net-buttons/js/buttons.html5\");\nrequire(\"datatables.net-buttons/js/buttons.print\");\nrequire(\"datatables.net-responsive-bs4\");\nrequire(\"datatables.net-scroller-bs4\");\nrequire(\"datatables.net-select-bs4\");\nrequire(\"pdfmake\");\n\n// constants\nconst axios = require(\"axios\");\n\nexport default class CustomerPartyManager extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showAddModal: false,\n            showUpdateModel: false,\n            value: \"1\",\n            activePartyId: \"\",\n            activePartyName: \"\",\n            activePartyMobile: \"\",\n            activePartyAddress: \"\",\n            activePartyType: 2,\n            partiesData: null,\n        };\n    }\n\n    fetchPartiesData() {\n        let url = API_URL;\n        const query = `SELECT * FROM party WHERE type=3 AND status=1;`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"party data: \", res.data);\n                this.setState({ partiesData: res.data });\n            })\n            .catch((err) => {\n                console.log(\"party data error: \", err);\n            });\n    }\n\n    handleUpdateSubmit(e) {\n        e.preventDefault();\n        let url = API_URL;\n\n        const query = `UPDATE party SET name=\"${this.state.activePartyName}\", mobile=\"${this.state.activePartyMobile}\", address=\"${this.state.activePartyAddress}\", type=${this.state.activePartyType} WHERE id=${this.state.activePartyId};`;\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(url, data)\n            .then((res) => {\n                toast.success(\"Party details updated successfully\");\n                this.fetchPartiesData();\n            })\n            .catch((err) => {\n                console.log(\"error while updating party data\", err);\n            });\n    }\n\n    handleAddSubmit(e) {\n        e.preventDefault();\n        let url = API_URL;\n\n        const query = `INSERT INTO party(name, mobile, address, type) VALUES('${this.state.activePartyName}', '${this.state.activePartyMobile}', '${this.state.activePartyAddress}', ${this.state.activePartyType})`;\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(url, data)\n            .then((res) => {\n                toast.success(\"party details added successfully\");\n                this.fetchPartiesData();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    deleteRecord(id) {\n        let url = API_URL;\n        const query = `UPDATE party SET status = 0  WHERE id=${id};`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"deleted status data: \", res.data);\n                console.log(\"Party deleted successfully\");\n                toast.error(\"Party deleted successfully\");\n                setTimeout(() => {\n                    this.refreshParties();\n                }, 2000);\n            })\n            .catch((err) => {\n                console.log(\"record delete error: \", err);\n            });\n    }\n\n    handleTabs = (event, newValue) => {\n        this.setState({ value: newValue });\n    };\n\n    componentDidMount() {\n        this.fetchPartiesData();\n    }\n\n    componentDidUpdate() {\n        $(\"#Wholeseller_table\").DataTable({\n            destroy: true,\n            keys: true,\n            buttons: [\n                \"copy\",\n                \"csv\",\n                \"excel\",\n                {\n                    extend: \"pdf\",\n                    messageTop: \"<h4 style='text-align:center'>Users List</h4>\",\n                    download: \"open\",\n                },\n                {\n                    extend: \"print\",\n                    messageTop: \"<h4 style='text-align:center'>Users List</h4>\",\n                    download: \"open\",\n                },\n            ],\n        });\n    }\n\n    renderPartiesData = () => {\n        const parties = this.state.partiesData;\n\n        if (parties == null) {\n            return null;\n        }\n\n        return parties.map((party) => {\n            return (\n                <tr>\n                    <td align=\"center\">\n                        <Badge variant=\"primary\">{party[\"id\"]}</Badge>{\" \"}\n                    </td>\n                    <td align=\"center\">{party[\"name\"]}</td>\n                    <td align=\"center\">{party[\"mobile\"]}</td>\n                    <td align=\"center\">{party[\"address\"]}</td>\n                    <td align=\"center\">\n                        {party[\"balance\"] == null ? 0 : party[\"balance\"]}\n                    </td>\n                    <td align=\"center\">\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={(e) => {\n                                this.setState({\n                                    activePartyId: party[\"id\"],\n                                    activePartyName: party[\"name\"],\n                                    activePartyMobile: party[\"mobile\"],\n                                    activePartyAddress: party[\"address\"],\n                                    activePartyType: party[\"type\"],\n                                    showUpdateModal: true,\n                                });\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faPenAlt} />\n                        </Button>\n                        <Link to={`ledgerManager/${party[\"id\"]}`}>\n                            <Button\n                                className=\"mx-1\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={(e) => {}}\n                            >\n                                <FontAwesomeIcon icon={faBook} />\n                            </Button>\n                        </Link>\n                        <Button\n                            className=\"mx-1\"\n                            color=\"danger\"\n                            variant=\"contained\"\n                            onClick={(e) => {\n                                if (window.confirm(\"Delete the item?\")) {\n                                    this.deleteRecord(party[\"id\"]);\n                                }\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faTrash} />\n                        </Button>\n                    </td>\n                </tr>\n            );\n        });\n    };\n\n    refreshParties() {\n        window.location.reload(false);\n    }\n\n    renderUpdatePartyModal() {\n        return (\n            <Modal\n                show={this.state.showUpdateModal}\n                onHide={(e) => this.setState({ showUpdateModal: false })}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Update Party\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form noValidate autoComplete=\"off\">\n                        <div className=\"mt-3\">\n                            <Row>\n                                <Col size=\"12\">\n                                    <TextField\n                                        id=\"partyName\"\n                                        label=\"Party name\"\n                                        variant=\"outlined\"\n                                        className=\"m-2\"\n                                        defaultValue={\n                                            this.state.activePartyName\n                                        }\n                                        onChange={(e) => {\n                                            this.setState({\n                                                activePartyName: e.target.value,\n                                            });\n                                        }}\n                                    />\n                                </Col>\n                                <Col>\n                                    <TextField\n                                        id=\"mobile\"\n                                        label=\"Mobile\"\n                                        variant=\"outlined\"\n                                        className=\"m-2\"\n                                        defaultValue={\n                                            this.state.activePartyMobile\n                                        }\n                                        onChange={(e) =>\n                                            this.setState({\n                                                activePartyMobile:\n                                                    e.target.value,\n                                            })\n                                        }\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <TextField\n                                        id=\"address\"\n                                        s\n                                        label=\"Address\"\n                                        variant=\"outlined\"\n                                        className=\"m-2\"\n                                        defaultValue={\n                                            this.state.activePartyAddress\n                                        }\n                                        onChange={(e) =>\n                                            this.setState({\n                                                activePartyAddress:\n                                                    e.target.value,\n                                            })\n                                        }\n                                    />\n                                </Col>\n                                <Col>\n                                    <FormControl\n                                        variant=\"filled\"\n                                        style={{\n                                            minWidth: \"120px\",\n                                        }}\n                                        className=\"mt-2 ml-2\"\n                                    >\n                                        <InputLabel id=\"demo-simple-select-outlined-label\">\n                                            Type\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-outlined-label\"\n                                            id=\"demo-simple-select-outlined\"\n                                            label=\"type\"\n                                            defaultValue={\n                                                this.state.activePartyType\n                                            }\n                                            onChange={(e) =>\n                                                this.setState({\n                                                    activePartyType:\n                                                        e.target.value,\n                                                })\n                                            }\n                                        >\n                                            <MenuItem value={1}>\n                                                Retailer\n                                            </MenuItem>\n                                            <MenuItem value={2}>\n                                                Wholeseller\n                                            </MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Col>\n                            </Row>\n                        </div>\n                        <hr />\n                        <div className=\"mt-2 mr-1\">\n                            <Btn1\n                                style={{ float: \"right\" }}\n                                onClick={(e) => {\n                                    this.setState({\n                                        showUpdateModal: false,\n                                    });\n                                    this.handleUpdateSubmit(e);\n                                }}\n                            >\n                                Update\n                            </Btn1>\n                        </div>\n                    </form>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n    render() {\n        return (\n            <div className=\"container-fluid border m-0 p-0 main\">\n                <div className=\"m-0 p-0\">\n                    <div className=\"container-fluid border m-0 p-1\">\n                        <div\n                            class=\"btn-group\"\n                            role=\"group\"\n                            aria-label=\"Basic example\"\n                        >\n                            <Button\n                                className=\"mt-1 mr-1 mb-3\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={(e) => {\n                                    this.setState({ showAddModal: true });\n                                }}\n                            >\n                                add new Wholeseller\n                            </Button>\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                className=\"mt-1 mr-1 mb-3 ml-5\"\n                                onClick={this.refreshParties}\n                            >\n                                <FontAwesomeIcon icon={faSyncAlt} size=\"2x\" />\n                            </Button>\n                        </div>\n\n                        {this.renderUpdatePartyModal()}\n                        <Modal\n                            show={this.state.showAddModal}\n                            onHide={(e) =>\n                                this.setState({ showAddModal: false })\n                            }\n                            size=\"md\"\n                            aria-labelledby=\"contained-modal-title-vcenter\"\n                            centered\n                        >\n                            <Modal.Header closeButton>\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\n                                    Add New Wholeseller\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <form noValidate autoComplete=\"off\">\n                                    <div className=\"mt-3\">\n                                        <Row>\n                                            <Col size=\"12\">\n                                                <TextField\n                                                    id=\"partyName\"\n                                                    label=\"Party name\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue=\"\"\n                                                    onChange={(e) => {\n                                                        this.setState({\n                                                            activePartyName:\n                                                                e.target.value,\n                                                        });\n                                                    }}\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <TextField\n                                                    id=\"mobile\"\n                                                    label=\"Mobile\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue=\"\"\n                                                    onChange={(e) =>\n                                                        this.setState({\n                                                            activePartyMobile:\n                                                                e.target.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <TextField\n                                                    id=\"address\"\n                                                    s\n                                                    label=\"Address\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue=\"\"\n                                                    onChange={(e) =>\n                                                        this.setState({\n                                                            activePartyAddress:\n                                                                e.target.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <FormControl\n                                                    variant=\"filled\"\n                                                    style={{\n                                                        minWidth: \"120px\",\n                                                    }}\n                                                    className=\"mt-2 ml-2\"\n                                                >\n                                                    <InputLabel id=\"demo-simple-select-outlined-label\">\n                                                        Type\n                                                    </InputLabel>\n                                                    <Select\n                                                        labelId=\"demo-simple-select-outlined-label\"\n                                                        id=\"demo-simple-select-outlined\"\n                                                        label=\"type\"\n                                                        defaultValue={2}\n                                                        onChange={(e) =>\n                                                            this.setState({\n                                                                activePartyType:\n                                                                    e.target\n                                                                        .value,\n                                                            })\n                                                        }\n                                                    >\n                                                        <MenuItem value={2}>\n                                                            Wholeseller\n                                                        </MenuItem>\n                                                    </Select>\n                                                </FormControl>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <hr />\n                                    <div className=\"mt-2 mr-1\">\n                                        <Btn1\n                                            style={{ float: \"right\" }}\n                                            onClick={(e) => {\n                                                this.setState({\n                                                    showAddModal: false,\n                                                });\n                                                this.handleAddSubmit(e);\n                                            }}\n                                        >\n                                            Add\n                                        </Btn1>\n                                    </div>\n                                </form>\n                            </Modal.Body>\n                        </Modal>\n                        <Row className=\"ml-0 mr-0\">\n                            <Col md=\"12\" className=\"p-0 m-0 measure1\">\n                                <div>\n                                    <table\n                                        id=\"Wholeseller_table\"\n                                        className=\"display\"\n                                        style={{ width: \"100%\" }}\n                                    >\n                                        <thead>\n                                            <tr align=\"center\">\n                                                <th>Party Id</th>\n                                                <th>Name</th>\n                                                <th>Mobile No</th>\n                                                <th>Address</th>\n                                                <th>Balance</th>\n                                                <th>Options</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.renderPartiesData()}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n\n                <ToastContainer\n                    position={toast.POSITION.TOP_RIGHT}\n                    autoClose={5000}\n                />\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// material UI imports\nimport {\n    AppBar,\n    Tab,\n    Button,\n    TextField,\n    InputLabel,\n    MenuItem,\n    Select,\n    FormControl,\n} from \"@material-ui/core\";\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\nimport { Row, Col, Button as Btn1, Modal, Badge } from \"react-bootstrap\";\n\n// font awasome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faPenAlt,\n    faBook,\n    faTrash,\n    faSyncAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Toastify imports\nimport { ToastContainer, toast } from \"react-toastify\";\n// import \"../ledger_manager/exportManager/node_modules/react-toastify/dist/ReactToastify.css\";\n\n//API handling components\nimport { API_URL } from \"./../../global\";\n\n// import child components\nimport RetailerPartyManager from \"./RetailerPartyManager\";\nimport WholesellerPartyManager from \"./WholesellerPartyManager\";\nimport CustomerPartyManager from \"./CustomerPartyManager\";\n\n// datatable setup\nimport jsZip from \"jszip\";\nwindow.JSZip = jsZip;\nvar $ = require(\"jquery\");\n$.DataTable = require(\"datatables.net\");\nrequire(\"datatables.net-bs4\");\nrequire(\"datatables.net-autofill-bs4\");\nrequire(\"datatables.net-buttons-bs4\");\nrequire(\"datatables.net-buttons/js/buttons.colVis\");\nrequire(\"datatables.net-buttons/js/buttons.flash\");\nrequire(\"datatables.net-buttons/js/buttons.html5\");\nrequire(\"datatables.net-buttons/js/buttons.print\");\nrequire(\"datatables.net-responsive-bs4\");\nrequire(\"datatables.net-scroller-bs4\");\nrequire(\"datatables.net-select-bs4\");\nrequire(\"pdfmake\");\n\n// constants\nconst axios = require(\"axios\");\n\nclass PartyManager extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showAddModal: false,\n            showUpdateModel: false,\n            value: \"1\",\n            activePartyId: \"\",\n            activePartyName: \"\",\n            activePartyMobile: \"\",\n            activePartyAddress: \"\",\n            activePartyType: 1,\n            partiesData: null,\n        };\n    }\n\n    fetchPartiesData() {\n        let url = API_URL;\n        const query = `SELECT * FROM partyView WHERE status=1;`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"party data: \", res.data);\n                this.setState({ partiesData: res.data });\n            })\n            .catch((err) => {\n                console.log(\"party data error: \", err);\n            });\n    }\n\n    handleUpdateSubmit(e) {\n        e.preventDefault();\n        let url = API_URL;\n\n        const query = `UPDATE party SET name=\"${this.state.activePartyName}\", mobile=\"${this.state.activePartyMobile}\", address=\"${this.state.activePartyAddress}\", type=${this.state.activePartyType} WHERE id=${this.state.activePartyId};`;\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(url, data)\n            .then((res) => {\n                toast.success(\"Party details updated successfully\");\n                this.fetchPartiesData();\n            })\n            .catch((err) => {\n                console.log(\"error while updating party data\", err);\n            });\n    }\n\n    handleAddSubmit(e) {\n        e.preventDefault();\n        let url = API_URL;\n\n        const query = `INSERT INTO party(name, mobile, address, type) VALUES('${this.state.activePartyName}', '${this.state.activePartyMobile}', '${this.state.activePartyAddress}', ${this.state.activePartyType})`;\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(url, data)\n            .then((res) => {\n                toast.success(\"party details added successfully\");\n                setTimeout(() => {\n                    this.refreshParties();\n                }, 2000);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    deleteRecord(id) {\n        let url = API_URL;\n        const query = `UPDATE party SET status = 0  WHERE id=${id};`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"deleted status data: \", res.data);\n                console.log(\"Party deleted successfully\");\n                toast.error(\"Party deleted successfully\");\n                setTimeout(() => {\n                    this.refreshParties();\n                }, 2000);\n            })\n            .catch((err) => {\n                console.log(\"record delete error: \", err);\n            });\n    }\n\n    handleTabs = (event, newValue) => {\n        this.setState({ value: newValue });\n    };\n\n    refreshParties() {\n        window.location.reload(false);\n    }\n\n    componentDidMount() {\n        this.fetchPartiesData();\n    }\n\n    componentDidUpdate() {\n        $(\"#party_table\").DataTable({\n            destroy: true,\n            keys: true,\n            buttons: [\n                \"copy\",\n                \"csv\",\n                \"excel\",\n                {\n                    extend: \"pdf\",\n                    messageTop: \"<h4 style='text-align:center'>Users List</h4>\",\n                    download: \"open\",\n                },\n                {\n                    extend: \"print\",\n                    messageTop: \"<h4 style='text-align:center'>Users List</h4>\",\n                    download: \"open\",\n                },\n            ],\n        });\n    }\n\n    renderPartiesData = () => {\n        const parties = this.state.partiesData;\n\n        if (parties == null) {\n            return null;\n        }\n\n        return parties.map((party) => {\n            return (\n                <tr>\n                    <td align=\"center\">\n                        <Badge variant=\"primary\">{party[\"id\"]}</Badge>{\" \"}\n                    </td>\n                    <td align=\"center\">{party[\"name\"]}</td>\n                    <td align=\"center\">\n                        <a href={\"tel:\" + party[\"mobile\"]}>\n                            <Button\n                                className=\"mx-1\"\n                                color=\"primary\"\n                                variant=\"secondary\"\n                            >\n                                {party[\"mobile\"]}\n                            </Button>\n                        </a>\n                    </td>\n                    <td align=\"center\">{party[\"address\"]}</td>\n                    <td align=\"center\">\n                        {party[\"type\"] === 1\n                            ? \"Retailer\"\n                            : party[\"type\"] === 1\n                            ? \"Wholeseller\"\n                            : \"Customer\"}\n                    </td>\n                    <td align=\"center\">\n                        {party[\"balance\"] == null ? 0 : party[\"balance\"]}\n                    </td>\n                    <td align=\"center\">\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={(e) => {\n                                this.setState({\n                                    activePartyId: party[\"id\"],\n                                    activePartyName: party[\"name\"],\n                                    activePartyMobile: party[\"mobile\"],\n                                    activePartyAddress: party[\"address\"],\n                                    activePartyType: party[\"type\"],\n                                    showUpdateModal: true,\n                                });\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faPenAlt} />\n                        </Button>\n                        <Link to={`ledgerManager/${party[\"id\"]}`}>\n                            <Button\n                                className=\"mx-1\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={(e) => {}}\n                            >\n                                <FontAwesomeIcon icon={faBook} />\n                            </Button>\n                        </Link>\n                        <Button\n                            className=\"mx-1\"\n                            color=\"danger\"\n                            variant=\"contained\"\n                            onClick={(e) => {\n                                if (window.confirm(\"Delete the item?\")) {\n                                    this.deleteRecord(party[\"id\"]);\n                                }\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faTrash} />\n                        </Button>\n                    </td>\n                </tr>\n            );\n        });\n    };\n\n    renderUpdatePartyModal() {\n        return (\n            <Modal\n                show={this.state.showUpdateModal}\n                onHide={(e) => this.setState({ showUpdateModal: false })}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Update Party\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form noValidate autoComplete=\"off\">\n                        <div className=\"mt-3\">\n                            <Row>\n                                <Col size=\"12\">\n                                    <TextField\n                                        id=\"partyName\"\n                                        label=\"Party name\"\n                                        variant=\"outlined\"\n                                        className=\"m-2\"\n                                        defaultValue={\n                                            this.state.activePartyName\n                                        }\n                                        onChange={(e) => {\n                                            this.setState({\n                                                activePartyName: e.target.value,\n                                            });\n                                        }}\n                                    />\n                                </Col>\n                                <Col>\n                                    <TextField\n                                        id=\"mobile\"\n                                        label=\"Mobile\"\n                                        variant=\"outlined\"\n                                        className=\"m-2\"\n                                        defaultValue={\n                                            this.state.activePartyMobile\n                                        }\n                                        onChange={(e) =>\n                                            this.setState({\n                                                activePartyMobile:\n                                                    e.target.value,\n                                            })\n                                        }\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <TextField\n                                        id=\"address\"\n                                        s\n                                        label=\"Address\"\n                                        variant=\"outlined\"\n                                        className=\"m-2\"\n                                        defaultValue={\n                                            this.state.activePartyAddress\n                                        }\n                                        onChange={(e) =>\n                                            this.setState({\n                                                activePartyAddress:\n                                                    e.target.value,\n                                            })\n                                        }\n                                    />\n                                </Col>\n                                <Col>\n                                    <FormControl\n                                        variant=\"filled\"\n                                        style={{\n                                            minWidth: \"120px\",\n                                        }}\n                                        className=\"mt-2 ml-2\"\n                                    >\n                                        <InputLabel id=\"demo-simple-select-outlined-label\">\n                                            Type\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-outlined-label\"\n                                            id=\"demo-simple-select-outlined\"\n                                            label=\"type\"\n                                            defaultValue={\n                                                this.state.activePartyType\n                                            }\n                                            onChange={(e) =>\n                                                this.setState({\n                                                    activePartyType:\n                                                        e.target.value,\n                                                })\n                                            }\n                                        >\n                                            <MenuItem value={1}>\n                                                Retailer\n                                            </MenuItem>\n                                            <MenuItem value={2}>\n                                                Wholeseller\n                                            </MenuItem>\n                                            <MenuItem value={3}>\n                                                Customer\n                                            </MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Col>\n                            </Row>\n                        </div>\n                        <hr />\n                        <div className=\"mt-2 mr-1\">\n                            <Btn1\n                                style={{ float: \"right\" }}\n                                onClick={(e) => {\n                                    this.setState({\n                                        showUpdateModal: false,\n                                    });\n                                    this.handleUpdateSubmit(e);\n                                }}\n                            >\n                                Update\n                            </Btn1>\n                        </div>\n                    </form>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n    render() {\n        return (\n            <TabContext\n                value={this.state.value}\n                className=\"container-fluid border m-0 p-0 main\"\n            >\n                <AppBar position=\"static\" color=\"default\">\n                    <TabList\n                        onChange={this.handleTabs}\n                        aria-label=\"simple tabs example\"\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                    >\n                        <Tab label=\"Parties\" value=\"1\" />\n                        <Tab label=\"Retailers\" value=\"2\" />\n                        <Tab label=\"Wholeseller\" value=\"3\" />\n                        <Tab label=\"Customer\" value=\"4\" />\n                    </TabList>\n                </AppBar>\n                <TabPanel value=\"1\" className=\"m-0 p-0\">\n                    <div className=\"container-fluid border m-0 p-1\">\n                        <div\n                            className=\"btn-group\"\n                            role=\"group\"\n                            aria-label=\"Basic example\"\n                        >\n                            <Button\n                                className=\"mt-1 mr-1 mb-3\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={(e) => {\n                                    this.setState({ showAddModal: true });\n                                }}\n                            >\n                                add new party\n                            </Button>\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                className=\"mt-1 mr-1 mb-3 ml-5\"\n                                onClick={this.refreshParties}\n                            >\n                                <FontAwesomeIcon icon={faSyncAlt} size=\"2x\" />\n                            </Button>\n                        </div>\n\n                        {this.renderUpdatePartyModal()}\n                        <Modal\n                            show={this.state.showAddModal}\n                            onHide={(e) =>\n                                this.setState({ showAddModal: false })\n                            }\n                            size=\"md\"\n                            aria-labelledby=\"contained-modal-title-vcenter\"\n                            centered\n                        >\n                            <Modal.Header closeButton>\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\n                                    Add New Party\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <form noValidate autoComplete=\"off\">\n                                    <div className=\"mt-3\">\n                                        <Row>\n                                            <Col size=\"12\">\n                                                <TextField\n                                                    id=\"partyName\"\n                                                    label=\"Party name\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue=\"\"\n                                                    onChange={(e) => {\n                                                        this.setState({\n                                                            activePartyName:\n                                                                e.target.value,\n                                                        });\n                                                    }}\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <TextField\n                                                    id=\"mobile\"\n                                                    label=\"Mobile\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue=\"\"\n                                                    onChange={(e) =>\n                                                        this.setState({\n                                                            activePartyMobile:\n                                                                e.target.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <TextField\n                                                    id=\"address\"\n                                                    s\n                                                    label=\"Address\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue=\"\"\n                                                    onChange={(e) =>\n                                                        this.setState({\n                                                            activePartyAddress:\n                                                                e.target.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <FormControl\n                                                    variant=\"filled\"\n                                                    style={{\n                                                        minWidth: \"120px\",\n                                                    }}\n                                                    className=\"mt-2 ml-2\"\n                                                >\n                                                    <InputLabel id=\"demo-simple-select-outlined-label\">\n                                                        Type\n                                                    </InputLabel>\n                                                    <Select\n                                                        labelId=\"demo-simple-select-outlined-label\"\n                                                        id=\"demo-simple-select-outlined\"\n                                                        label=\"type\"\n                                                        defaultValue={1}\n                                                        onChange={(e) =>\n                                                            this.setState({\n                                                                activePartyType:\n                                                                    e.target\n                                                                        .value,\n                                                            })\n                                                        }\n                                                    >\n                                                        <MenuItem value={1}>\n                                                            Retialer\n                                                        </MenuItem>\n                                                        <MenuItem value={2}>\n                                                            Wholeseller\n                                                        </MenuItem>\n                                                        <MenuItem value={3}>\n                                                            Customer\n                                                        </MenuItem>\n                                                    </Select>\n                                                </FormControl>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <hr />\n                                    <div className=\"mt-2 mr-1\">\n                                        <Btn1\n                                            style={{ float: \"right\" }}\n                                            onClick={(e) => {\n                                                this.setState({\n                                                    showAddModal: false,\n                                                });\n                                                this.handleAddSubmit(e);\n                                            }}\n                                        >\n                                            Add\n                                        </Btn1>\n                                    </div>\n                                </form>\n                            </Modal.Body>\n                        </Modal>\n                        <Row className=\"ml-0 mr-0\">\n                            <Col md=\"12\" className=\"p-0 m-0 measure1\">\n                                <div>\n                                    <table\n                                        id=\"party_table\"\n                                        className=\"display\"\n                                        style={{ width: \"100%\" }}\n                                    >\n                                        <thead>\n                                            <tr align=\"center\">\n                                                <th>Party Id</th>\n                                                <th>Name</th>\n                                                <th>Mobile No</th>\n                                                <th>Address</th>\n                                                <th>Type</th>\n                                                <th>Balance</th>\n                                                <th>Options</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.renderPartiesData()}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </TabPanel>\n                <TabPanel value=\"2\" className=\"m-0 p-0\">\n                    <RetailerPartyManager />\n                </TabPanel>\n                <TabPanel value=\"3\" className=\"m-0 p-0\">\n                    <WholesellerPartyManager />\n                </TabPanel>\n                <TabPanel value=\"4\" className=\"m-0 p-0\">\n                    <CustomerPartyManager />\n                </TabPanel>\n\n                <ToastContainer\n                    position={toast.POSITION.TOP_RIGHT}\n                    autoClose={5000}\n                />\n            </TabContext>\n        );\n    }\n}\n\nexport default PartyManager;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport { Button, TextField, Paper } from \"@material-ui/core\";\nimport { Badge, Card, Modal } from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport moment from \"moment\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n//Bootstrap and jQuery libraries\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"jquery/dist/jquery.min.js\";\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\";\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\nimport $ from \"jquery\";\n\n//API handling components\nimport { API_URL } from \"./../../global\";\nconst axios = require(\"axios\");\n\nexport class expenses extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDeleteModal: false,\n            description: \"\",\n            amount: \"\",\n            expenseData: {},\n            activeExpenseId: null,\n        };\n    }\n    getExpenseData() {\n        const query = `SELECT *  from expenses order by id desc;`;\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(API_URL, data)\n            .then((res) => {\n                console.log(res.data);\n                this.setState({ expenseData: res.data });\n                this.initializeDataTable();\n            })\n            .catch((err) => {\n                console.log(err);\n                toast(\"failed to fetch\");\n            });\n    }\n    componentDidMount() {\n        this.getExpenseData();\n    }\n    handleSubmit(e, state) {\n        e.preventDefault();\n        const { description, amount } = state;\n        const date = new Date();\n        const query = `INSERT INTO expenses (description,date,amount) VALUES('${description}','${moment(\n            date\n        ).format()}',${amount});`;\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(API_URL, data)\n            .then((res) => {\n                toast(\"expense saved successfully\");\n                this.getExpenseData();\n            })\n            .catch((err) => {\n                console.log(err);\n                toast(\"failed to save\");\n            });\n    }\n\n    deleteExpense(id) {\n        const query = `DELETE from expenses WHERE id=${id};`;\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(API_URL, data)\n            .then((res) => {\n                toast.success(\"expense deleted successfully\");\n                this.getExpenseData();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    initializeDataTable() {\n        $(\"#expenses_table\").DataTable({\n            destroy: true,\n        });\n    }\n\n    refreshLedger() {\n        window.location.reload(false);\n    }\n\n    render() {\n        return (\n            <div\n                className=\"container-fluid border m-0 p-1 main\"\n                style={{ backgroundColor: \"aliceblue\" }}\n            >\n                <Card>\n                    <Card.Body className=\"mt-0 pt-3\">\n                        <Card.Title>Manage Expenses</Card.Title>\n                        <form\n                            noValidate\n                            autoComplete=\"off\"\n                            onSubmit={(e) => this.handleSubmit(e, this.state)}\n                        >\n                            <div className=\"mt-3\">\n                                <TextField\n                                    id=\"amount\"\n                                    label=\"Amount\"\n                                    variant=\"outlined\"\n                                    type=\"number\"\n                                    size=\"small\"\n                                    value={this.state.amount}\n                                    className=\"mr-3\"\n                                    onChange={(e) =>\n                                        this.setState({\n                                            amount: e.target.value,\n                                        })\n                                    }\n                                />\n                                <TextField\n                                    id=\"description\"\n                                    label=\"Description\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    value={this.state.description}\n                                    className=\"mr-3\"\n                                    style={{ minWidth: \"30vw\" }}\n                                    onChange={(e) =>\n                                        this.setState({\n                                            description: e.target.value,\n                                        })\n                                    }\n                                />\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    type=\"submit\"\n                                >\n                                    Add expense\n                                </Button>\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    className=\"ml-3 p-1\"\n                                    onClick={this.refreshLedger}\n                                >\n                                    <FontAwesomeIcon\n                                        icon={faSyncAlt}\n                                        size=\"2x\"\n                                    />\n                                </Button>\n                            </div>\n                        </form>\n                    </Card.Body>\n                </Card>\n                <div\n                    component={Paper}\n                    style={{ width: \"100%\" }}\n                    className=\"mt-2\"\n                >\n                    <table\n                        id=\"expenses_table\"\n                        className=\"display\"\n                        style={{ width: \"100%\" }}\n                    >\n                        <thead>\n                            <tr>\n                                <th align=\"center\">Expense Id</th>\n                                <th>Description</th>\n                                <th>Amount</th>\n                                <th>Date</th>\n                                <th align=\"center\">Option</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.expenseData.length > 0 ? (\n                                this.state.expenseData.map((expense) => {\n                                    return (\n                                        <tr key={expense.id}>\n                                            <td align=\"center\">\n                                                <Badge variant=\"primary\">\n                                                    {\" \"}\n                                                    {expense.id}\n                                                </Badge>\n                                            </td>\n                                            <td\n                                                style={{\n                                                    textTransform: \"capitalize\",\n                                                }}\n                                            >\n                                                {expense.description}\n                                            </td>\n                                            <td>₹ {expense.amount}</td>\n                                            <td>\n                                                {moment(expense.date).format(\n                                                    \"D/M/YYYY h:mm A\"\n                                                )}\n                                            </td>\n                                            <td align=\"center\">\n                                                <Button\n                                                    color=\"primary\"\n                                                    variant=\"contained\"\n                                                    className=\"mt-1 mb-1\"\n                                                    onClick={(e) => {\n                                                        this.setState({\n                                                            activeExpenseId:\n                                                                expense.id,\n                                                        });\n                                                        this.setState({\n                                                            showDeleteModal: true,\n                                                        });\n                                                    }}\n                                                >\n                                                    <FontAwesomeIcon\n                                                        icon={faTrash}\n                                                    />\n                                                </Button>\n                                                <Modal\n                                                    show={\n                                                        this.state\n                                                            .showDeleteModal\n                                                    }\n                                                    onHide={(e) =>\n                                                        this.setState({\n                                                            showDeleteModal: false,\n                                                        })\n                                                    }\n                                                    size=\"md\"\n                                                    aria-labelledby=\"contained-modal-title-vcenter\"\n                                                    centered\n                                                >\n                                                    <Modal.Header closeButton>\n                                                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                                                            Delete expense\n                                                            record\n                                                        </Modal.Title>\n                                                    </Modal.Header>\n                                                    <Modal.Body>\n                                                        <p>\n                                                            Do you really want\n                                                            to delete this\n                                                            expense?\n                                                        </p>\n                                                        <Button\n                                                            color=\"danger\"\n                                                            variant=\"contained\"\n                                                            className=\"mt-1 mb-1\"\n                                                            onClick={() => {\n                                                                this.deleteExpense(\n                                                                    this.state\n                                                                        .activeExpenseId\n                                                                );\n                                                                this.setState({\n                                                                    showDeleteModal: false,\n                                                                });\n                                                            }}\n                                                        >\n                                                            Delete\n                                                        </Button>\n                                                    </Modal.Body>\n                                                </Modal>\n                                            </td>\n                                        </tr>\n                                    );\n                                })\n                            ) : (\n                                <tr>\n                                    <td>No data found</td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n                <ToastContainer\n                    position={toast.POSITION.TOP_RIGHT}\n                    autoClose={3000}\n                />\n            </div>\n        );\n    }\n}\n\nexport default expenses;\n","import React, { Component } from \"react\";\n\nimport {\n    TextField,\n    Button,\n    FormControl,\n    Select,\n    MenuItem,\n    InputLabel,\n} from \"@material-ui/core\";\n// import { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\n// import { Row, Col, Card, Badge, Table as Tbl } from \"react-bootstrap\";\nimport \"./style.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\n\n//API handling components\nimport { API_URL } from \"./../../global\";\nconst axios = require(\"axios\");\n\nexport class AddNewEntry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: null,\n            quntity: 0,\n            amount: 0,\n        };\n    }\n\n    handleAddSubmit(e) {\n        e.preventDefault();\n\n        const query = `INSERT INTO products( name, quantity) VALUES('${this.state.name}', ${this.state.quantity});`;\n\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(API_URL, data)\n            .then((res) => {\n                toast.success(\"Product record added successfully\");\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <form autoComplete=\"off\">\n                    <div className=\"row ml-4 mt-4\">\n                        <TextField\n                            id=\"name\"\n                            label=\"name\"\n                            variant=\"outlined\"\n                            type=\"text\"\n                            className=\"mr-2\"\n                            required={true}\n                            size=\"small\"\n                            onChange={(e) =>\n                                this.setState({ name: e.target.value })\n                            }\n                        />\n\n                        <TextField\n                            id=\"quantity\"\n                            label=\"Quantity\"\n                            variant=\"outlined\"\n                            type=\"number\"\n                            className=\"mr-2\"\n                            size=\"small\"\n                            onChange={(e) =>\n                                this.setState({ quantity: e.target.value })\n                            }\n                        />\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            className=\"mb-3\"\n                            onClick={(e) => this.handleAddSubmit(e)}\n                        >\n                            <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\n                        </Button>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            className=\"mb-3 ml-2\"\n                            onClick={this.props.refreshLedger}\n                        >\n                            <FontAwesomeIcon icon={faSyncAlt} size=\"2x\" />\n                        </Button>\n                    </div>\n                </form>\n                <ToastContainer />\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\n//Bootstrap and jQuery libraries\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"jquery/dist/jquery.min.js\";\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\";\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\nimport $ from \"jquery\";\n\n// styles\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// material UI imports\nimport {\n    TableBody,\n    TableContainer,\n    Button,\n    Paper,\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from \"@material-ui/core\";\nimport { Row, Col, Button as Btn1, Modal, Badge } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport moment from \"moment\";\n\n// Toastify imports\nimport { toast } from \"react-toastify\";\n\n// import child components\nimport { AddNewEntry } from \"./AddNewEntry.js\";\n\n//API handling components\nimport { API_URL } from \"./../../global\";\nconst axios = require(\"axios\");\n\nexport default class ProductManager extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            partyId: 0,\n            showAddModal: false,\n            showProudctUpdateModal: false,\n            activeProduct: null,\n            activeQuantity: null,\n            products: null,\n        };\n    }\n\n    fetchProducts = () => {\n        const query = `SELECT * FROM products`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(API_URL, data)\n            .then((res) => {\n                this.setState({ products: res.data });\n                this.initializeDataTable();\n            })\n            .catch((err) => {\n                console.log(\"data fetch error: \", err);\n            });\n    };\n\n    deleteRecord(id) {\n        const query = `UPDATE products SET status = 0  WHERE id = ${id};`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(API_URL, data)\n            .then((res) => {\n                console.log(\"deleted status data: \", res.data);\n                console.log(\"record deleted successfully\");\n                toast.error(\"Record deleted successfully\");\n            })\n            .catch((err) => {\n                console.log(\"record delete error: \", err);\n            });\n    }\n\n    refreshLedger() {\n        window.location.reload(false);\n    }\n\n    componentDidMount() {\n        this.fetchProducts();\n    }\n\n    initializeDataTable() {\n        $(\"#product_table\").DataTable({\n            destroy: true,\n        });\n    }\n\n    renderProductData = () => {\n        if (this.state.products == null) {\n            return null;\n        }\n\n        const products = this.state.products;\n        let last_modified = null;\n\n        return products.map((record) => {\n            // extract date only\n            last_modified = moment(record[\"last_modified\"]).format(\n                \"DD / MM / YYYY HH:MM\"\n            );\n\n            return (\n                <tr>\n                    <td align=\"center\">\n                        <Badge variant=\"primary\">\n                            {record[\"id\"]}\n                            <span hidden>$</span>\n                        </Badge>{\" \"}\n                    </td>\n                    <td>{record[\"name\"]}</td>\n                    <td>{record[\"quantity\"]}</td>\n\n                    <td>{last_modified}</td>\n                    <td align=\"center\">\n                        {/* delete record */}\n                        <Button\n                            variant=\"contained\"\n                            onClick={(e) => {\n                                if (window.confirm(\"Delete the item?\")) {\n                                    this.deleteRecord(record.id);\n                                }\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faTrashAlt} />\n                        </Button>\n                    </td>\n                </tr>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"container-fluid border m-0 p-1\">\n                <br />\n                <div\n                    className=\"btn-group mb-3\"\n                    role=\"group\"\n                    aria-label=\"Basic example\"\n                >\n                    <AddNewEntry refreshLedger={() => this.refreshLedger()} />\n                </div>\n\n                <Row className=\"ml-0 mr-0\">\n                    <Col md=\"12\" className=\"p-0 m-0 measure1\">\n                        <TableContainer\n                            component={Paper}\n                            style={{ maxHeight: \"79vh\" }}\n                        >\n                            <table\n                                id=\"product_table\"\n                                className=\"display\"\n                                style={{ width: \"100%\" }}\n                            >\n                                <thead>\n                                    <tr>\n                                        <th align=\"center\">ID</th>\n                                        <th align=\"center\">Name</th>\n                                        <th>quantity</th>\n                                        <th>last modified</th>\n                                        <th align=\"center\">Options</th>\n                                    </tr>\n                                </thead>\n                                <TableBody>\n                                    {this.renderProductData()}\n                                </TableBody>\n                            </table>\n                        </TableContainer>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n","import React, { Component, useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport moment from \"moment\";\r\nimport { Row, Col, Card, Badge, Table as Tbl } from \"react-bootstrap\";\r\nimport {\r\n    TextField,\r\n    Button,\r\n    FormControl,\r\n    MenuItem,\r\n    Select,\r\n    InputLabel,\r\n} from \"@material-ui/core\";\r\n\r\nimport Autocomplete, {\r\n    createFilterOptions,\r\n} from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport qrCodeImg from \"./assets/qrcode.jpeg\";\r\n\r\nimport { API_URL } from \"./../../global\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport default class BillManager extends Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            billId: null,\r\n            partyId: 0,\r\n            partyName: null,\r\n            newPartyName: null,\r\n            address: null,\r\n            aadharCardNo: null,\r\n            gstin: null,\r\n            billType: 1,\r\n\r\n            routeName: \"\",\r\n\r\n            date: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n\r\n            particularValue: null,\r\n            particular: null,\r\n            quantity: 0,\r\n            rate: 0,\r\n            amount: 0,\r\n\r\n            itemList: [],\r\n            addedItems: [],\r\n\r\n            advance: 0,\r\n            total: 0,\r\n            balance: 0,\r\n            sgst: 0,\r\n            cgst: 0,\r\n            igst: 0,\r\n            adjustment: 0,\r\n            advance: 0,\r\n            grandTotal: 0,\r\n\r\n            printComponentRef: null,\r\n\r\n            partyList: null,\r\n\r\n            latestInsertId: 0,\r\n\r\n            productList: [],\r\n\r\n            routeOptions: [],\r\n        };\r\n    }\r\n\r\n    fetchRouteOptions() {\r\n        let url = API_URL;\r\n\r\n        let query = \"SELECT name from routes;\";\r\n        let data = {\r\n            crossDomain: true,\r\n            crossOrigin: true,\r\n            query: query,\r\n        };\r\n        axios\r\n            .post(url, data)\r\n            .then((res) => {\r\n                console.log(\"route options data : \", res.data);\r\n                const opts = res.data.map((record) => record.name);\r\n                this.setState({ routeOptions: opts });\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"route options error : \", err);\r\n            });\r\n    }\r\n\r\n    getIdPartyList() {\r\n        let url = API_URL;\r\n        // const query = `SELECT CONCAT(id, ', ', name) AS name, address FROM party;`;\r\n        const query = `SELECT id, name, address FROM party;`;\r\n        let data = { crossDomain: true, crossOrigin: true, query: query };\r\n        axios\r\n            .post(url, data)\r\n            .then((res) => {\r\n                console.log(\"id+name data: \", res.data);\r\n                this.setState({ partyList: res.data });\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"id + name fetch error: \", err);\r\n            });\r\n    }\r\n\r\n    getLatestId = () => {\r\n        let url = API_URL;\r\n        const query = `SELECT id FROM gstBill ORDER BY id DESC LIMIT 1;`;\r\n        let data = { crossDomain: true, crossOrigin: true, query: query };\r\n        axios\r\n            .post(url, data)\r\n            .then((res) => {\r\n                console.log(\"latest id data: \", res.data);\r\n                this.setState({\r\n                    billId: (res.data[0] != null ? res.data[0][\"id\"] : 0) + 1,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"latest id data fetch error: \", err);\r\n            });\r\n    };\r\n\r\n    fetchProducts = () => {\r\n        const query = `SELECT name FROM products`;\r\n        let data = { crossDomain: true, crossOrigin: true, query: query };\r\n        axios\r\n            .post(API_URL, data)\r\n            .then((res) => {\r\n                let _res = res.data.map((item) => {\r\n                    return item.name;\r\n                });\r\n                this.setState({ productList: _res });\r\n                this.initializeDataTable();\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"productlist data fetch error: \", err);\r\n            });\r\n    };\r\n\r\n    caluclateWeight = (field, value) => {\r\n        if (field === \"totalBoxes\") {\r\n            let weight = value * this.state.weightPerBox;\r\n            this.setState({ totalBoxes: value });\r\n            this.setState({ weight: weight });\r\n        } else if (field === \"weightPerBox\") {\r\n            let weight = this.state.totalBoxes * value;\r\n            this.setState({ weightPerBox: value });\r\n            this.setState({ weight: weight });\r\n        }\r\n    };\r\n\r\n    calculateAmount = (field, value) => {\r\n        if (field === \"weight\") {\r\n            let amount = value * this.state.rate;\r\n            this.setState({ weight: value });\r\n            this.setState({ amount: amount });\r\n        } else if (field === \"rate\") {\r\n            let amount = this.state.weight * value;\r\n            this.setState({ rate: value });\r\n            this.setState({ amount: amount });\r\n        }\r\n    };\r\n\r\n    calculateTaxes = () => {\r\n        const total = this.state.total;\r\n        this.setState(\r\n            {\r\n                sgst: Number((total / 100) * 9).toFixed(2),\r\n                cgst: Number((total / 100) * 9).toFixed(2),\r\n                igst: Number((total / 100) * 18).toFixed(2),\r\n            },\r\n            this.calculateGrandTotal\r\n        );\r\n    };\r\n\r\n    calculateGrandTotal = () => {\r\n        let grandTotal;\r\n        if (this.state.billType === 1) {\r\n            grandTotal =\r\n                Number(this.state.total) +\r\n                Number(this.state.igst) +\r\n                Number(this.state.adjustment);\r\n        } else {\r\n            grandTotal =\r\n                Number(this.state.total) + Number(this.state.adjustment);\r\n        }\r\n        this.setState({ grandTotal: grandTotal.toFixed(2) });\r\n    };\r\n\r\n    addItems = () => {\r\n        if (!this.state.particular || !this.state.rate) return;\r\n        // let items = this.state.itemList;\r\n        let items = this.state.addedItems;\r\n        const ifExists = items.find(\r\n            (item) => item.particular === this.state.particular\r\n        );\r\n        if (ifExists) {\r\n            items = items.map((item) => {\r\n                if (item.particular === this.state.particular) {\r\n                    return {\r\n                        particular: this.state.particular,\r\n                        quantity: +item.quantity + +this.state.quantity,\r\n                        rate: +item.rate + +this.state.rate,\r\n                        amount:\r\n                            +item.amount +\r\n                            +this.state.rate * +this.state.quantity,\r\n                    };\r\n                } else {\r\n                    return item;\r\n                }\r\n            });\r\n        } else {\r\n            items.push({\r\n                particular: this.state.particular,\r\n                quantity: this.state.quantity,\r\n                rate: this.state.rate,\r\n                amount: this.state.rate * this.state.quantity,\r\n            });\r\n        }\r\n        // items.push({\r\n        //     particular: this.state.particular,\r\n        //     mark: this.state.mark,\r\n        //     totalBoxes: this.state.totalBoxes,\r\n        //     weightPerBox: this.state.weightPerBox,\r\n        //     weight: this.state.weight,\r\n        //     rate: this.state.rate,\r\n        //     amount: this.state.amount,\r\n        // });\r\n\r\n        this.setState({ addedItems: items });\r\n\r\n        // update total & balance\r\n        // let total = Number(this.state.total) + Number(this.state.amount);\r\n        let total =\r\n            Number(this.state.total) +\r\n            Number(this.state.rate * this.state.quantity);\r\n        this.setState({ total: total }, this.calculateTaxes);\r\n        let balance = total + Number(this.state.advance);\r\n        this.setState({ balance: balance });\r\n        // this.calculateTaxes();\r\n    };\r\n\r\n    deleteItem = (index) => {\r\n        // let itemList = this.state.itemList;\r\n        let itemList = this.state.addedItems;\r\n\r\n        // update total & balance\r\n        let total = this.state.total - itemList[index][\"amount\"];\r\n        let balance = total + Number(this.state.advance);\r\n        this.setState({ total: total }, this.calculateTaxes);\r\n        this.setState({ balance: balance });\r\n\r\n        // remove element\r\n        // let updatedList = itemList.filter((item, _index) => {\r\n        //     if (index !== _index) return item;\r\n        // });\r\n        // this.setState({ itemList: updatedList });\r\n        let updatedList = itemList.filter((item, _index) => {\r\n            if (index !== _index) return item;\r\n        });\r\n        this.setState({ addedItems: updatedList });\r\n    };\r\n\r\n    handleClear = () => {\r\n        window.location.reload(false);\r\n    };\r\n\r\n    insertBillList = () => {\r\n        let url = API_URL;\r\n\r\n        // 1.  insert into deliveryMemoList\r\n        this.state.addedItems.map((item, index) => {\r\n            const query = `INSERT INTO billList(billType, billId, partyId, particular,quantity, rate, amount, status) VALUES(\r\n          ${this.state.billType},\r\n          ${this.state.billId},\r\n          ${this.state.partyId},\r\n          '${item.particular}', \r\n          ${item.quantity}, \r\n          ${item.rate}, \r\n          ${item.amount},\r\n          1\r\n        )`;\r\n            let data = { crossDomain: true, crossOrigin: true, query: query };\r\n            axios\r\n                .post(url, data)\r\n                .then((res) => {\r\n                    console.log(\"insert billList successfull, index: \", index);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"failed to insert billList, error: \", err);\r\n                });\r\n        });\r\n    };\r\n\r\n    insertLedgerRecord = () => {\r\n        // 1.  insert into ledger\r\n        const query = `INSERT INTO ledger(party_id, particular, total, memo_id) VALUES(${this.state.partyId}, 'reference bill id: ${this.state.latestInsertId}', ${this.state.total}, ${this.state.latestInsertId})`;\r\n\r\n        let data = { crossDomain: true, crossOrigin: true, query: query };\r\n        axios\r\n            .post(API_URL, data)\r\n            .then((res) => {\r\n                console.log(\"insert ledger successful\");\r\n                console.log(\"insert response: \", res.data.insertId);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"failed to insert ledger, error: \", err);\r\n            });\r\n    };\r\n\r\n    insertNewPartyAndSave = () => {\r\n        const query = `INSERT INTO party (name, address) values(\"${this.state.newPartyName}\", \"${this.state.address}\")`;\r\n        const data = { crossDomain: true, crossOrigin: true, query: query };\r\n        axios\r\n            .post(API_URL, data)\r\n            .then((res) => {\r\n                console.log(\"insert party successful\");\r\n                console.log(\"insert response: \", res.data.insertId);\r\n                this.setState({ partyId: res.data.insertId }, this.saveBill);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"failed to insert party, error: \", err);\r\n            });\r\n    };\r\n\r\n    saveBill = () => {\r\n        const newDate = moment(new Date()).format(\"YYYY-MM-DD\");\r\n        let query;\r\n        if (this.state.billType === 1) {\r\n            query = `INSERT INTO gstBill (partyId, aadharCard, total, gst, adjustment, paid, balance, date, status) values(\r\n        \"${this.state.partyId}\", \r\n        \"${this.state.aadharCardNo}\",     \r\n        ${this.state.grandTotal},\r\n        ${this.state.igst}, \r\n        ${this.state.adjustment}, \r\n        ${this.state.advance},\r\n        ${this.state.grandTotal - this.state.advance}, \r\n        \"${newDate}\", \r\n        1)`;\r\n        } else {\r\n            query = `INSERT INTO nonGstBill (partyId, aadharCard, total, adjustment, paid, balance, routeName, date, status) values(\"\r\n        ${this.state.partyId}\", \r\n        \"${this.state.aadharCardNo}\", \r\n        ${this.state.grandTotal}, \r\n        ${this.state.adjustment}, \r\n        ${this.state.advance}, \r\n        ${this.state.grandTotal - this.state.advance},\r\n        '${this.state.routeName}',\r\n        \"${newDate}\", \r\n        1)`;\r\n        }\r\n\r\n        let data = { crossDomain: true, crossOrigin: true, query: query };\r\n        axios\r\n            .post(API_URL, data)\r\n            .then((res) => {\r\n                toast.success(\"Generated Bill successfully\");\r\n                this.setState(\r\n                    { billId: res.data.insertId },\r\n                    this.insertBillList\r\n                );\r\n            })\r\n            .catch((err) => {\r\n                toast.error(\"Failed to Generate Bill \");\r\n            });\r\n    };\r\n\r\n    handleSave = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // check party already exists\r\n        let partyId = this.state.partyId;\r\n        if (partyId === null) {\r\n            this.insertNewPartyAndSave();\r\n        } else {\r\n            this.saveBill();\r\n        }\r\n    };\r\n\r\n    handleSavePrint = (e) => {\r\n        console.log(\"in handle save print\");\r\n        // 1. handle save\r\n        this.handleSave();\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getLatestId();\r\n        this.getIdPartyList();\r\n        this.fetchRouteOptions();\r\n        this.fetchProducts();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"mb-5\" onSubmit={(e) => e.preventDefault()}>\r\n                {/* Input Party Details */}\r\n\r\n                <FormControl\r\n                    style={{ minWidth: \"250px\" }}\r\n                    className=\"mr-2 mb-2 smt-0\"\r\n                >\r\n                    <Autocomplete\r\n                        id=\"free-solo-demo\"\r\n                        freeSolo\r\n                        options={\r\n                            this.state.partyList != null\r\n                                ? this.state.partyList.map(\r\n                                      (item) => item.id + \", \" + item.name\r\n                                  )\r\n                                : []\r\n                        }\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                // label=\"party name\"\r\n                                label=\"Party name\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                value={this.state.newPartyName}\r\n                                onChange={(event) =>\r\n                                    this.setState({\r\n                                        newPartyName: event.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                        onChange={(event, value) => {\r\n                            console.log(value);\r\n                            if (value != null && value.length > 2) {\r\n                                this.setState({\r\n                                    partyId: value.split(\", \")[0],\r\n                                    partyName: value.split(\", \")[1],\r\n                                    address: this.state.partyList.find(\r\n                                        (party) =>\r\n                                            party.id == value.split(\", \")[0]\r\n                                    )?.address,\r\n                                });\r\n                            } else {\r\n                                this.setState({\r\n                                    partyId: null,\r\n                                    partyName: \"\",\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </FormControl>\r\n\r\n                <TextField\r\n                    id=\"custAddress\"\r\n                    label=\"Address\"\r\n                    variant=\"outlined\"\r\n                    className=\"mr-2\"\r\n                    value={this.state.address || \"\"}\r\n                    onChange={(e) => this.setState({ address: e.target.value })}\r\n                    // required=\"true\"\r\n                    disabled={!!this.state.partyId}\r\n                    size=\"small\"\r\n                />\r\n                <TextField\r\n                    id=\"aadharCardNo\"\r\n                    label=\"Aadhar Card No\"\r\n                    variant=\"outlined\"\r\n                    className=\"mr-2\"\r\n                    value={this.state.aadharCardNo}\r\n                    onChange={(e) =>\r\n                        this.setState({ aadharCardNo: e.target.value })\r\n                    }\r\n                    // required=\"true\"\r\n                    size=\"small\"\r\n                />\r\n                <TextField\r\n                    id=\"gstin\"\r\n                    label=\"GSTIN\"\r\n                    variant=\"outlined\"\r\n                    className=\"mr-2 mt-1\"\r\n                    value={this.state.gstin}\r\n                    onChange={(e) => this.setState({ gstin: e.target.value })}\r\n                    // required=\"true\"\r\n                    size=\"small\"\r\n                />\r\n                <FormControl\r\n                    // variant=\"filled\"\r\n                    variant=\"outlined\"\r\n                    className=\"mr-2 mb-2 mt-2\"\r\n                    style={{ minWidth: \"180px\" }}\r\n                    size=\"small\"\r\n                >\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                        Bill Type\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        onChange={(e) =>\r\n                            this.setState({ billType: e.target.value })\r\n                        }\r\n                        name=\"billType\"\r\n                        value={this.state.billType}\r\n                        size=\"small\"\r\n                        label=\"Bill Type\"\r\n                    >\r\n                        <MenuItem value={1}>GST</MenuItem>\r\n                        <MenuItem value={2}>Non GST</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <TextField\r\n                    id=\"adjustment\"\r\n                    label=\"Adjustment\"\r\n                    variant=\"outlined\"\r\n                    className=\"mr-2 mt-2\"\r\n                    value={this.state.adjustment}\r\n                    onChange={(e) =>\r\n                        this.setState({ adjustment: e.target.value })\r\n                    }\r\n                    // required=\"true\"\r\n                    size=\"small\"\r\n                    type=\"number\"\r\n                />\r\n                <TextField\r\n                    id=\"advance\"\r\n                    label=\"Advance\"\r\n                    variant=\"outlined\"\r\n                    className=\"mr-2 mt-2\"\r\n                    value={this.state.advance}\r\n                    onChange={(e) => this.setState({ advance: e.target.value })}\r\n                    // required=\"true\"\r\n                    size=\"small\"\r\n                    type=\"number\"\r\n                />\r\n\r\n                {/* End of Input Party Details */}\r\n\r\n                <hr />\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <FormControl\r\n                            style={{ minWidth: \"250px\" }}\r\n                            className=\"mr-2 mb-2 smt-0\"\r\n                        >\r\n                            <Autocomplete\r\n                                id=\"free-solo-demo\"\r\n                                freeSolo\r\n                                options={\r\n                                    this.state.productList != null\r\n                                        ? this.state.productList.map(\r\n                                              (item) => item\r\n                                          )\r\n                                        : []\r\n                                }\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        // label=\"party name\"\r\n                                        label=\"product\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                    />\r\n                                )}\r\n                                onChange={(event, value) => {\r\n                                    // if (value != null && value.length > 2)\r\n                                    //     this.setState({\r\n                                    //         partyId: value.split(\",\")[0],\r\n                                    //     });\r\n                                    // this.setState({\r\n                                    //     partyName: value.split(\",\")[1],\r\n                                    // });\r\n                                    this.setState({ particular: value });\r\n                                }}\r\n                            />\r\n                        </FormControl>\r\n                    </Col>\r\n                    <Col>\r\n                        <TextField\r\n                            id=\"quantity\"\r\n                            label=\"Quantity\"\r\n                            variant=\"outlined\"\r\n                            className=\"mr-2 mt-1\"\r\n                            value={this.state.quantity}\r\n                            onChange={(e) =>\r\n                                this.setState({ quantity: e.target.value })\r\n                            }\r\n                            required=\"true\"\r\n                            size=\"small\"\r\n                            type=\"number\"\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <TextField\r\n                            id=\"rate\"\r\n                            label=\"Rate\"\r\n                            variant=\"outlined\"\r\n                            className=\"mr-2 mt-1\"\r\n                            value={this.state.rate}\r\n                            onChange={(e) =>\r\n                                this.setState({ rate: e.target.value })\r\n                            }\r\n                            required=\"true\"\r\n                            size=\"small\"\r\n                            type=\"number\"\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            className=\"mt-2\"\r\n                            onClick={this.addItems}\r\n                            disabled={\r\n                                !this.state.particular ||\r\n                                !this.state.rate ||\r\n                                !this.state.quantity\r\n                            }\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div className=\"mt-1 p-2 measure\">\r\n                    <Row>\r\n                        <Col md={8} className=\"mx-auto\">\r\n                            <Card className=\"mt-2 p-0\">\r\n                                <Card.Header>\r\n                                    <Card.Title className=\"text-center pb-0 mb-0\">\r\n                                        <b>MINISHO</b>\r\n                                    </Card.Title>\r\n                                    <hr />\r\n                                    <p className=\"text-center\">\r\n                                        Customer Care No. 7028828831, 06, 07\r\n                                        <hr />\r\n                                        email ID: customer.care@minisho.com\r\n                                    </p>\r\n                                    <hr />\r\n\r\n                                    <span\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <p>\r\n                                            Invoice No.{\" \"}\r\n                                            <b>{this.state.billId}</b>\r\n                                        </p>\r\n                                        <p>\r\n                                            Date{\" \"}\r\n                                            <b>\r\n                                                {moment(new Date()).format(\r\n                                                    \"D/M/YYYY\"\r\n                                                )}\r\n                                            </b>\r\n                                        </p>\r\n                                    </span>\r\n                                    <Card.Title className=\"text-center pb-0 mb-0\">\r\n                                        <h5>\r\n                                            <b>TAX INVOICE</b>\r\n                                        </h5>\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className=\"pb-3 mb-0\">\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Party name:{\" \"}\r\n                                                <b>\r\n                                                    {this.state.partyName ||\r\n                                                        this.state.newPartyName}\r\n                                                </b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Address:{\" \"}\r\n                                                <b>{this.state.address}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Aadhar Card No.:{\" \"}\r\n                                                <b>{this.state.aadharCardNo}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Date:{\" \"}\r\n                                                <b>\r\n                                                    {moment(new Date()).format(\r\n                                                        \"DD/MM/YYYY\"\r\n                                                    )}\r\n                                                </b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                GSTIN: <b>{this.state.gstin}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            ></h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                                <Card.Body className=\"m-0 pt-0\">\r\n                                    {/* Order overview */}\r\n                                    <Tbl striped bordered hover size=\"sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Particular</th>\r\n                                                <th>quantity</th>\r\n                                                <th>Rate</th>\r\n                                                <th>Amount</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        {this.state.addedItems.length > 0 ? (\r\n                                            <tbody>\r\n                                                {this.state.addedItems.map(\r\n                                                    (item, index) => {\r\n                                                        return (\r\n                                                            // <tr key={\"\" + item.particularValue.title}>\r\n                                                            //   <td>{item.particularValue.title} </td>\r\n                                                            <tr\r\n                                                                key={\r\n                                                                    \"\" +\r\n                                                                    item.particular\r\n                                                                }\r\n                                                            >\r\n                                                                <td>\r\n                                                                    {\r\n                                                                        item.particular\r\n                                                                    }{\" \"}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {\r\n                                                                        item.quantity\r\n                                                                    }\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {item.rate}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {\r\n                                                                        item.amount\r\n                                                                    }\r\n                                                                </td>\r\n                                                                <td\r\n                                                                    className=\"d-print-none\"\r\n                                                                    align=\"center\"\r\n                                                                >\r\n                                                                    <Button\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        onClick={() =>\r\n                                                                            this.deleteItem(\r\n                                                                                index\r\n                                                                            )\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <FontAwesomeIcon\r\n                                                                            icon={\r\n                                                                                faTrash\r\n                                                                            }\r\n                                                                        />\r\n                                                                    </Button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        );\r\n                                                    }\r\n                                                )}\r\n                                                <br></br>\r\n                                                {this.state.billType === 1 ? (\r\n                                                    <>\r\n                                                        <tr>\r\n                                                            <td colSpan=\"4\">\r\n                                                                Total amount\r\n                                                                before tax\r\n                                                            </td>\r\n                                                            <td colSpan=\"2\">\r\n                                                                {\r\n                                                                    this.state\r\n                                                                        .total\r\n                                                                }\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td colSpan=\"4\">\r\n                                                                SGST 9%\r\n                                                            </td>\r\n                                                            <td colSpan=\"2\">\r\n                                                                {\r\n                                                                    this.state\r\n                                                                        .sgst\r\n                                                                }\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td colSpan=\"4\">\r\n                                                                CGST 9%\r\n                                                            </td>\r\n                                                            <td colSpan=\"2\">\r\n                                                                {\r\n                                                                    this.state\r\n                                                                        .cgst\r\n                                                                }\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td colSpan=\"4\">\r\n                                                                IGST 18%\r\n                                                            </td>\r\n                                                            <td colSpan=\"2\">\r\n                                                                {\r\n                                                                    this.state\r\n                                                                        .igst\r\n                                                                }\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <tr>\r\n                                                        <td colSpan=\"4\">\r\n                                                            Total amount\r\n                                                        </td>\r\n                                                        <td colSpan=\"2\">\r\n                                                            {this.state.total}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )}\r\n                                                <tr>\r\n                                                    <td colSpan=\"4\">\r\n                                                        Adjustment\r\n                                                    </td>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {this.state.adjustment}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td colSpan=\"4\">\r\n                                                        Grand Total\r\n                                                    </td>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {this.state.grandTotal}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        ) : (\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td colSpan=\"6\">\r\n                                                        No items added\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        )}\r\n                                    </Tbl>\r\n                                </Card.Body>\r\n                                <Card.Footer className=\"pb-3 mb-0\">\r\n                                    <Row>\r\n                                        <Col md={7}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Company Name :{\" \"}\r\n                                                <b>Minisho Pvt. Ltd.</b>\r\n                                            </h6>\r\n\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                GSTIN No.:{\" \"}\r\n                                                <b>27BASWSES515R1ZM</b>\r\n                                            </h6>\r\n\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                State : <b>Maharashtra</b>\r\n                                            </h6>\r\n                                        </Col>\r\n\r\n                                        <Col md={5}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Bank : <b>ICICI</b>\r\n                                            </h6>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Bank A/c: <b>363405126422</b>\r\n                                            </h6>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                IFSC Code : <b>ICIC0006356</b>\r\n                                            </h6>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Branch Name : <b>Sangli</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    <Row className=\"mt-5\">\r\n                                        <Col md={12}>\r\n                                            <h6 className=\"float-right\">\r\n                                                Authorised Sign.\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div className=\"mx-5 px-5\">\r\n                    <ReactToPrint\r\n                        trigger={() => (\r\n                            <Button\r\n                                className=\"mt-2 mr-1\"\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                style={{ float: \"right\" }}\r\n                                disabled={\r\n                                    (this.state.partyName ||\r\n                                        this.state.newPartyName) &&\r\n                                    this.state.address\r\n                                        ? false\r\n                                        : true\r\n                                }\r\n                                hidden\r\n                            >\r\n                                Save & Print\r\n                            </Button>\r\n                        )}\r\n                    />\r\n                    <Button\r\n                        className=\"mt-2 mr-1\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        style={{ float: \"right\" }}\r\n                        // type=\"submit\"\r\n                        onClick={this.handleSave}\r\n                        disabled={\r\n                            (this.state.partyName || this.state.newPartyName) &&\r\n                            this.state.address\r\n                                ? false\r\n                                : true\r\n                        }\r\n                    >\r\n                        Save bill\r\n                    </Button>\r\n                    <Button\r\n                        className=\"mt-2 mr-1\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        style={{ float: \"right\" }}\r\n                        onClick={this.handleClear}\r\n                    >\r\n                        clear\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Modal, Card, Table as Tbl } from \"react-bootstrap\";\r\n\r\n//Bootstrap and jQuery libraries\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"jquery/dist/jquery.min.js\";\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport $ from \"jquery\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\n// font awasome\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faPenAlt,\r\n    faEye,\r\n    faTrash,\r\n    faEdit,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport qrCodeImg from \"./assets/qrcode.jpeg\";\r\n//API handling components\r\nimport { API_URL } from \"./../../global\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default class GstBillHistory extends Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            billList: null,\r\n            showUpdateModel: false,\r\n            activeBillId: null,\r\n            activePaid: 0,\r\n\r\n            aadharCard: null,\r\n            adjustment: 0,\r\n            balance: 0,\r\n            code: null,\r\n            date: null,\r\n            gst: null,\r\n            paid: 0,\r\n            partyId: null,\r\n            pname: null,\r\n            total: 0,\r\n            vehicleNo: null,\r\n\r\n            itemsList: [],\r\n            isLoadingItems: false,\r\n        };\r\n    }\r\n\r\n    fetchBillList = () => {\r\n        let url = API_URL;\r\n        const query = `SELECT gb.*, p.name as pname FROM gstBill as gb inner join party as p where gb.partyId = p.id AND gb.status=1 ORDER BY gb.id DESC;`;\r\n        let data = { crossDomain: true, crossOrigin: true, query: query };\r\n        axios\r\n            .post(url, data)\r\n            .then((res) => {\r\n                console.log(\"bill: \", res.data);\r\n                this.setState({ billList: res.data });\r\n\r\n                // init data table\r\n                this.initializeDataTable();\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"deliveryMemo list fetch error: \", err);\r\n            });\r\n    };\r\n\r\n    fetchBillItemList = () => {\r\n        let url = API_URL;\r\n        const query = `SELECT bl.* FROM billList as bl inner join gstBill as gb on bl.billType=gb.id where bl.billId= ${this.state.activeBillId}`;\r\n        let data = { crossDomain: true, crossOrigin: true, query: query };\r\n        axios\r\n            .post(url, data)\r\n            .then((res) => {\r\n                console.log(\"bill list data: \", res.data);\r\n                this.setState({ itemsList: res.data });\r\n\r\n                // init data table\r\n                this.initializeDataTable();\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"bill list fetch error: \", err);\r\n            });\r\n    };\r\n\r\n    deleteRecord(id) {\r\n        let url = API_URL;\r\n        const query = `UPDATE gstBill SET status = 0  WHERE id=${id};`;\r\n        let data = { crossDomain: true, crossOrigin: true, query: query };\r\n        axios\r\n            .post(url, data)\r\n            .then((res) => {\r\n                console.log(\"deleted status data: \", res.data);\r\n                toast.success(\"item deleted successfully\");\r\n                toast.success(\"Record deleted successfully\");\r\n                this.fetchBillList();\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"record delete error: \", err);\r\n                toast.error(\"Failed to delete record\");\r\n            });\r\n    }\r\n\r\n    initializeDataTable() {\r\n        const title = \"GST bill history-\" + moment().format(\"DD/MM/YYYY\");\r\n        $(document).ready(function () {\r\n            $(\"#billList\").DataTable({\r\n                destroy: true,\r\n                dom:\r\n                    \"<'row mb-2'<'col-sm-9' B><'col-sm-3' >>\" +\r\n                    \"<'row mb-2'<'col-sm-9' l><'col-sm-3' f>>\" +\r\n                    \"<'row'<'col-sm-12' tr>>\" +\r\n                    \"<'row'<'col-sm-7 mt-2 mr-5 pr-4'i><'ml-5' p>>\",\r\n                buttons: [\r\n                    {\r\n                        extend: \"csv\",\r\n                        title,\r\n                        download: \"open\",\r\n                        exportOptions: {\r\n                            columns: [0, 1, 2, 3, 4, 5, 6],\r\n                        },\r\n                    },\r\n                    {\r\n                        extend: \"print\",\r\n                        title,\r\n                        messageTop: `<h4 style='text-align:center'>${title}</h4>`,\r\n                        download: \"open\",\r\n                        exportOptions: {\r\n                            columns: [0, 1, 2, 3, 4, 5, 6],\r\n                        },\r\n                    },\r\n                ],\r\n            });\r\n        });\r\n    }\r\n\r\n    initializeData() {\r\n        this.fetchBillList();\r\n    }\r\n    componentDidMount() {\r\n        this.initializeData();\r\n    }\r\n\r\n    handleUpdateSubmit(e) {\r\n        let url = API_URL;\r\n        const query = `UPDATE gstBill SET balance = balance - ${this.state.activePaid}, paid = paid + ${this.state.activePaid} WHERE id=${this.state.activeBillId};`;\r\n\r\n        let data = {\r\n            crossDomain: true,\r\n            crossOrigin: true,\r\n            query: query,\r\n        };\r\n        axios\r\n            .post(url, data)\r\n            .then((res) => {\r\n                toast.success(\"Bill details updated successfully\");\r\n                this.fetchBillList();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    renderMemoList = () => {\r\n        if (this.state.billList == null) return null;\r\n\r\n        // else\r\n        return this.state.billList.map((bill) => {\r\n            return (\r\n                <tr align=\"center\">\r\n                    <td>{bill.id}</td>\r\n                    <td>{bill.pname}</td>\r\n                    <td>{bill.gst}</td>\r\n                    <td>{bill.adjustment}</td>\r\n                    <td>{bill.total}</td>\r\n                    <td>{bill.paid}</td>\r\n                    <td>{bill.balance}</td>\r\n                    <td>{moment(bill.date).format(\"DD/MM/YYYY\")}</td>\r\n                    <td className=\"d-flex justify-content-center\">\r\n                        &nbsp;\r\n                        <Button\r\n                            className=\"mt-2\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                this.setState(\r\n                                    {\r\n                                        activeBillId: bill.id,\r\n                                        showDisplayBillModal: true,\r\n                                        aadharCard: bill.aadharCard,\r\n                                        code: bill.code,\r\n                                        date: bill.date,\r\n                                        pname: bill.pname,\r\n                                        total: bill.total,\r\n                                        gst: bill.gst,\r\n                                        adjustment: bill.adjustment,\r\n                                        vehicleNo: bill.vehicleNo,\r\n                                    },\r\n                                    this.fetchBillItemList\r\n                                );\r\n                            }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faEye} />\r\n                        </Button>\r\n                        <Button\r\n                            className=\"mt-2\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    activeBillId: bill.id,\r\n                                    showUpdateModel: true,\r\n                                });\r\n                            }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                        </Button>\r\n                        <Button\r\n                            className=\"mt-2\"\r\n                            color=\"danger\"\r\n                            variant=\"contained\"\r\n                            onClick={(e) => {\r\n                                if (window.confirm(\"Delete the item?\")) {\r\n                                    this.deleteRecord(bill.id);\r\n                                }\r\n                            }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </Button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    };\r\n\r\n    renderUpdateModal = () => {\r\n        return (\r\n            <Modal\r\n                show={this.state.showUpdateModel}\r\n                onHide={(e) => this.setState({ showUpdateModel: false })}\r\n                size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Update bill\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <div className=\"mt-3\">\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                    <TextField\r\n                                        id=\"pending\"\r\n                                        label=\"Paid\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"m-2\"\r\n                                        defaultValue=\"\"\r\n                                        value={this.state.activePaid}\r\n                                        onChange={(e) =>\r\n                                            this.setState({\r\n                                                activePaid: e.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n\r\n                        <div className=\"mt-2 mr-1\">\r\n                            <Button\r\n                                style={{ float: \"right\" }}\r\n                                onClick={(e) => {\r\n                                    this.setState({\r\n                                        showUpdateModel: false,\r\n                                    });\r\n                                    this.handleUpdateSubmit(e);\r\n                                }}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    renderDisplayBillModal = () => {\r\n        return (\r\n            <Modal\r\n                show={this.state.showDisplayBillModal}\r\n                onHide={(e) => this.setState({ showDisplayBillModal: false })}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Bill details\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <div className=\"mt-1 measure\">\r\n                    <Row>\r\n                        <Col className=\"mx-auto\">\r\n                            <Card className=\"p-0\">\r\n                                <Card.Header>\r\n                                    <Card.Title className=\"text-center pb-0 mb-0\">\r\n                                        <b>MINISHO</b>\r\n                                    </Card.Title>\r\n                                    <hr />\r\n\r\n                                    <p className=\"text-center\">\r\n                                        Customer Care No. 77720031305, 06, 07\r\n                                        <hr />\r\n                                        email ID: customer.care@minisho.com\r\n                                    </p>\r\n                                    <hr />\r\n\r\n                                    <span\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <p>\r\n                                            Invoice No.{\" \"}\r\n                                            <b>{this.state.activeBillId}</b>\r\n                                        </p>\r\n                                        <p>\r\n                                            Date{\" \"}\r\n                                            <b>\r\n                                                {moment(this.state.date).format(\r\n                                                    \"D/M/YYYY\"\r\n                                                )}\r\n                                            </b>\r\n                                        </p>\r\n                                    </span>\r\n                                    <Card.Title className=\"text-center pb-0 mb-0\">\r\n                                        <h5>\r\n                                            <b>TAX INVOICE</b>\r\n                                        </h5>\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className=\"pb-3 mb-0\">\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Party name:{\" \"}\r\n                                                <b>{this.state.pname}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Address:{\" \"}\r\n                                                <b>{this.state.address}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Vehicle No.:{\" \"}\r\n                                                <b>{this.state.vehicleNo}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Aadhar Card No.:{\" \"}\r\n                                                <b>{this.state.aadharCard}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Date:{\" \"}\r\n                                                <b>\r\n                                                    {moment(\r\n                                                        this.state.date\r\n                                                    ).format(\"DD/MM/YYYY\")}\r\n                                                </b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                GSTIN: <b>{this.state.gstin}</b>\r\n                                            </h6>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Code: <b>{this.state.code}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Sign:\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                                <Card.Body className=\"m-0 pt-0\">\r\n                                    {/* Order overview */}\r\n                                    <Tbl striped bordered hover size=\"sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Particular</th>\r\n                                                <th>HSN Code</th>\r\n                                                <th>Box Qty.</th>\r\n                                                <th>Rate</th>\r\n                                                <th>Amount</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        {this.state.itemsList.length > 0 ? (\r\n                                            <tbody>\r\n                                                {this.state.itemsList.map(\r\n                                                    (item, index) => {\r\n                                                        return (\r\n                                                            // <tr key={\"\" + item.particularValue.title}>\r\n                                                            //   <td>{item.particularValue.title} </td>\r\n                                                            <tr\r\n                                                                key={\r\n                                                                    \"\" +\r\n                                                                    item.particular\r\n                                                                }\r\n                                                            >\r\n                                                                <td>\r\n                                                                    {\r\n                                                                        item.particular\r\n                                                                    }{\" \"}\r\n                                                                </td>\r\n                                                                <td>2201</td>\r\n                                                                <td>\r\n                                                                    {\r\n                                                                        item.boxQty\r\n                                                                    }\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {item.rate}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {\r\n                                                                        item.amount\r\n                                                                    }\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        );\r\n                                                    }\r\n                                                )}\r\n                                                <br></br>\r\n                                                <tr>\r\n                                                    <td colSpan=\"4\">\r\n                                                        Total amount before tax\r\n                                                    </td>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {this.state.total -\r\n                                                            this.state.gst +\r\n                                                            this.state\r\n                                                                .adjustment}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td colSpan=\"4\">SGST 9%</td>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {this.state.gst / 2}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td colSpan=\"4\">CGST 9%</td>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {this.state.gst / 2}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td colSpan=\"4\">\r\n                                                        IGST 18%\r\n                                                    </td>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {this.state.gst}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td colSpan=\"4\">\r\n                                                        Adjustment\r\n                                                    </td>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {this.state.adjustment}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td colSpan=\"4\">\r\n                                                        Grand Total\r\n                                                    </td>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {this.state.total}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        ) : (\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td colSpan=\"6\">\r\n                                                        No items added\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        )}\r\n                                    </Tbl>\r\n                                </Card.Body>\r\n                                <Card.Footer className=\"pb-3 mb-0\">\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                GSTIN No.:{\" \"}\r\n                                                <b>27AOLPK5202K1ZU</b>\r\n                                            </h6>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Date: 28/06/2017\r\n                                            </h6>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                State : Maharashtra Code: 27\r\n                                            </h6>\r\n                                        </Col>\r\n\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Bank A/c: <b>16153011000070</b>\r\n                                            </h6>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                IFSC Code : BKID0001615\r\n                                            </h6>\r\n                                            <h6>Branch: Sangli</h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col\r\n                        md=\"12\"\r\n                        className=\"m-0 p-1 measure1\"\r\n                        style={{ minHeight: \"85vh\" }}\r\n                    >\r\n                        <div>\r\n                            <table\r\n                                id=\"billList\"\r\n                                class=\"display\"\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                <thead>\r\n                                    <tr align=\"center\">\r\n                                        <th align=\"center\">Bill Id</th>\r\n                                        <th align=\"center\">Party Name</th>\r\n                                        <th align=\"center\">GST</th>\r\n                                        <th align=\"center\">Adjustment</th>\r\n                                        <th align=\"center\">Total</th>\r\n                                        <th align=\"center\">Paid</th>\r\n                                        <th align=\"center\">Balance</th>\r\n                                        <th align=\"center\">Date</th>\r\n                                        <th align=\"center\">Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>{this.renderMemoList()}</tbody>\r\n                            </table>\r\n                            {this.renderUpdateModal()}\r\n                            {this.renderDisplayBillModal()}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Modal, Card, Table as Tbl } from \"react-bootstrap\";\r\n\r\n//Bootstrap and jQuery libraries\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"jquery/dist/jquery.min.js\";\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport $ from \"jquery\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\n// font awasome\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faPenAlt,\r\n    faEye,\r\n    faTrash,\r\n    faEdit,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport qrCodeImg from \"./assets/qrcode.jpeg\";\r\n//API handling components\r\nimport { API_URL } from \"./../../global\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default class NonGstBillHistory extends Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            billList: null,\r\n            showUpdateModel: false,\r\n            activeBillId: null,\r\n            activePaid: 0,\r\n\r\n            aadharCard: null,\r\n            adjustment: 0,\r\n            balance: 0,\r\n            code: null,\r\n            date: null,\r\n            paid: 0,\r\n            partyId: null,\r\n            pname: null,\r\n            total: 0,\r\n            vehicleNo: null,\r\n\r\n            itemsList: [],\r\n            isLoadingItems: false,\r\n        };\r\n    }\r\n\r\n    fetchBillList = () => {\r\n        let url = API_URL;\r\n        const query = `SELECT ngb.*, p.name as pname FROM nonGstBill as ngb inner join party as p where ngb.partyId = p.id AND ngb.status=1 ORDER BY ngb.id DESC;`;\r\n        let data = { crossDomain: true, crossOrigin: true, query: query };\r\n        axios\r\n            .post(url, data)\r\n            .then((res) => {\r\n                console.log(\"bill: \", res.data);\r\n                this.setState({ billList: res.data });\r\n\r\n                // init data table\r\n                this.initializeDataTable();\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"deliveryMemo list fetch error: \", err);\r\n            });\r\n    };\r\n\r\n    fetchBillItemList = () => {\r\n        let url = API_URL;\r\n        const query = `SELECT bl.* FROM billList as bl inner join nonGstBill as ngb on bl.billType=ngb.id where bl.billId= ${this.state.activeBillId}`;\r\n        let data = { crossDomain: true, crossOrigin: true, query: query };\r\n        axios\r\n            .post(url, data)\r\n            .then((res) => {\r\n                console.log(\"bill list data: \", res.data);\r\n                this.setState({ itemsList: res.data });\r\n\r\n                // init data table\r\n                this.initializeDataTable();\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"bill list fetch error: \", err);\r\n            });\r\n    };\r\n\r\n    deleteRecord(id) {\r\n        let url = API_URL;\r\n        const query = `UPDATE capDeliveryMemo SET status = 0  WHERE id=${id};`;\r\n        let data = { crossDomain: true, crossOrigin: true, query: query };\r\n        axios\r\n            .post(url, data)\r\n            .then((res) => {\r\n                console.log(\"deleted status data: \", res.data);\r\n                console.log(\"item deleted successfully\");\r\n                toast.success(\"Record deleted successfully\");\r\n                this.fetchBillList();\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"record delete error: \", err);\r\n            });\r\n    }\r\n\r\n    initializeDataTable() {\r\n        const title = \"Non-GST bill history-\" + moment().format(\"DD/MM/YYYY\");\r\n        $(document).ready(function () {\r\n            $(\"#billList\").DataTable({\r\n                destroy: true,\r\n                dom:\r\n                    \"<'row mb-2'<'col-sm-9' B><'col-sm-3' >>\" +\r\n                    \"<'row mb-2'<'col-sm-9' l><'col-sm-3' f>>\" +\r\n                    \"<'row'<'col-sm-12' tr>>\" +\r\n                    \"<'row'<'col-sm-7 mt-2 mr-5 pr-4'i><'ml-5' p>>\",\r\n                buttons: [\r\n                    {\r\n                        extend: \"csv\",\r\n                        title,\r\n                        download: \"open\",\r\n                        exportOptions: {\r\n                            columns: [0, 1, 2, 3, 4, 5, 6],\r\n                        },\r\n                    },\r\n                    {\r\n                        extend: \"print\",\r\n                        title,\r\n                        messageTop: `<h4 style='text-align:center'>${title}</h4>`,\r\n                        download: \"open\",\r\n                        exportOptions: {\r\n                            columns: [0, 1, 2, 3, 4, 5, 6],\r\n                        },\r\n                    },\r\n                ],\r\n            });\r\n        });\r\n    }\r\n\r\n    initializeData() {\r\n        this.fetchBillList();\r\n    }\r\n    componentDidMount() {\r\n        this.initializeData();\r\n    }\r\n\r\n    handleUpdateSubmit(e) {\r\n        let url = API_URL;\r\n        const query = `UPDATE nonGstBill SET balance = balance - ${this.state.activePaid}, paid = paid + ${this.state.activePaid} WHERE id=${this.state.activeBillId};`;\r\n\r\n        let data = {\r\n            crossDomain: true,\r\n            crossOrigin: true,\r\n            query: query,\r\n        };\r\n        axios\r\n            .post(url, data)\r\n            .then((res) => {\r\n                toast.success(\"Bill details updated successfully\");\r\n                this.fetchBillList();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    renderMemoList = () => {\r\n        if (this.state.billList == null) return null;\r\n\r\n        // else\r\n        return this.state.billList.map((bill) => {\r\n            return (\r\n                <tr align=\"center\">\r\n                    <td>{bill.id}</td>\r\n                    <td>{bill.pname}</td>\r\n                    <td>{bill.adjustment}</td>\r\n                    <td>{bill.total}</td>\r\n                    <td>{bill.paid}</td>\r\n                    <td>{bill.balance}</td>\r\n                    <td>{moment(bill.date).format(\"DD/MM/YYYY\")}</td>\r\n                    <td className=\"d-flex justify-content-center\">\r\n                        &nbsp;\r\n                        <Button\r\n                            className=\"mt-2\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                this.setState(\r\n                                    {\r\n                                        activeBillId: bill.id,\r\n                                        showDisplayBillModal: true,\r\n                                        aadharCard: bill.aadharCard,\r\n                                        code: bill.code,\r\n                                        date: bill.date,\r\n                                        pname: bill.pname,\r\n                                        total: bill.total,\r\n                                        adjustment: bill.adjustment,\r\n                                        vehicleNo: bill.vehicleNo,\r\n                                    },\r\n                                    this.fetchBillItemList\r\n                                );\r\n                            }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faEye} />\r\n                        </Button>\r\n                        <Button\r\n                            className=\"mt-2\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    activeBillId: bill.id,\r\n                                    showUpdateModel: true,\r\n                                });\r\n                            }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                        </Button>\r\n                        <Button\r\n                            className=\"mt-2\"\r\n                            color=\"danger\"\r\n                            variant=\"contained\"\r\n                            onClick={(e) => {\r\n                                if (window.confirm(\"Delete the item?\")) {\r\n                                    this.deleteRecord(bill.id);\r\n                                }\r\n                            }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </Button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    };\r\n\r\n    renderUpdateModal = () => {\r\n        return (\r\n            <Modal\r\n                show={this.state.showUpdateModel}\r\n                onHide={(e) => this.setState({ showUpdateModel: false })}\r\n                size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Update bill\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <div className=\"mt-3\">\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                    <TextField\r\n                                        id=\"pending\"\r\n                                        label=\"Paid\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"m-2\"\r\n                                        defaultValue=\"\"\r\n                                        value={this.state.activePaid}\r\n                                        onChange={(e) =>\r\n                                            this.setState({\r\n                                                activePaid: e.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n\r\n                        <div className=\"mt-2 mr-1\">\r\n                            <Button\r\n                                style={{ float: \"right\" }}\r\n                                onClick={(e) => {\r\n                                    this.setState({\r\n                                        showUpdateModel: false,\r\n                                    });\r\n                                    this.handleUpdateSubmit(e);\r\n                                }}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    renderDisplayBillModal = () => {\r\n        return (\r\n            <Modal\r\n                show={this.state.showDisplayBillModal}\r\n                onHide={(e) => this.setState({ showDisplayBillModal: false })}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Bill details\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <div className=\"mt-1 measure\">\r\n                    <Row>\r\n                        <Col className=\"mx-auto\">\r\n                            <Card className=\"p-0\">\r\n                                <Card.Header>\r\n                                    <Card.Title className=\"text-center pb-0 mb-0\">\r\n                                        <b>MINISHO</b>\r\n                                    </Card.Title>\r\n                                    <hr />\r\n\r\n                                    <p className=\"text-center\">\r\n                                        Customer Care No. 77720031305, 06, 07\r\n                                        <hr />\r\n                                        email ID: customer.care@minisho.com\r\n                                    </p>\r\n                                    <hr />\r\n\r\n                                    <span\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <p>\r\n                                            Invoice No.{\" \"}\r\n                                            <b>{this.state.activeBillId}</b>\r\n                                        </p>\r\n                                        <p>\r\n                                            Date{\" \"}\r\n                                            <b>\r\n                                                {moment(this.state.date).format(\r\n                                                    \"D/M/YYYY\"\r\n                                                )}\r\n                                            </b>\r\n                                        </p>\r\n                                    </span>\r\n                                    <Card.Title className=\"text-center pb-0 mb-0\">\r\n                                        <h5>\r\n                                            <b>TAX INVOICE</b>\r\n                                        </h5>\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className=\"pb-3 mb-0\">\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Party name:{\" \"}\r\n                                                <b>{this.state.pname}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Address:{\" \"}\r\n                                                <b>{this.state.address}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Vehicle No.:{\" \"}\r\n                                                <b>{this.state.vehicleNo}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Aadhar Card No.:{\" \"}\r\n                                                <b>{this.state.aadharCard}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Date:{\" \"}\r\n                                                <b>\r\n                                                    {moment(\r\n                                                        this.state.date\r\n                                                    ).format(\"DD/MM/YYYY\")}\r\n                                                </b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                GSTIN: <b>{this.state.gstin}</b>\r\n                                            </h6>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Code: <b>{this.state.code}</b>\r\n                                            </h6>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Sign:\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                                <Card.Body className=\"m-0 pt-0\">\r\n                                    {/* Order overview */}\r\n                                    <Tbl striped bordered hover size=\"sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Particular</th>\r\n                                                <th>HSN Code</th>\r\n                                                <th>Box Qty.</th>\r\n                                                <th>Rate</th>\r\n                                                <th>Amount</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        {this.state.itemsList.length > 0 ? (\r\n                                            <tbody>\r\n                                                {this.state.itemsList.map(\r\n                                                    (item, index) => {\r\n                                                        return (\r\n                                                            // <tr key={\"\" + item.particularValue.title}>\r\n                                                            //   <td>{item.particularValue.title} </td>\r\n                                                            <tr\r\n                                                                key={\r\n                                                                    \"\" +\r\n                                                                    item.particular\r\n                                                                }\r\n                                                            >\r\n                                                                <td>\r\n                                                                    {\r\n                                                                        item.particular\r\n                                                                    }{\" \"}\r\n                                                                </td>\r\n                                                                <td>2201</td>\r\n                                                                <td>\r\n                                                                    {\r\n                                                                        item.boxQty\r\n                                                                    }\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {item.rate}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {\r\n                                                                        item.amount\r\n                                                                    }\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        );\r\n                                                    }\r\n                                                )}\r\n                                                <br></br>\r\n                                                <tr>\r\n                                                    <td colSpan=\"4\">\r\n                                                        Total amount\r\n                                                    </td>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {this.state.total -\r\n                                                            this.state\r\n                                                                .adjustment}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td colSpan=\"4\">\r\n                                                        Adjustment\r\n                                                    </td>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {this.state.adjustment}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td colSpan=\"4\">\r\n                                                        Grand Total\r\n                                                    </td>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {this.state.total}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        ) : (\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td colSpan=\"6\">\r\n                                                        No items added\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        )}\r\n                                    </Tbl>\r\n                                </Card.Body>\r\n                                <Card.Footer className=\"pb-3 mb-0\">\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                GSTIN No.:{\" \"}\r\n                                                <b>27AOLPK5202K1ZU</b>\r\n                                            </h6>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Date: 28/06/2017\r\n                                            </h6>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                State : Maharashtra Code: 27\r\n                                            </h6>\r\n                                        </Col>\r\n\r\n                                        <Col md={6}>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                Bank A/c:{\" \"}\r\n                                                <b>\r\n                                                    16153011000070 Bank of India\r\n                                                </b>\r\n                                            </h6>\r\n                                            <h6\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                IFSC Code : BKID0001615\r\n                                            </h6>\r\n                                            <h6>Branch: Sangli</h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col\r\n                        md=\"12\"\r\n                        className=\"m-0 p-1 measure1\"\r\n                        style={{ minHeight: \"85vh\" }}\r\n                    >\r\n                        <div>\r\n                            <table\r\n                                id=\"billList\"\r\n                                class=\"display\"\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                <thead>\r\n                                    <tr align=\"center\">\r\n                                        <th align=\"center\">Bill Id</th>\r\n                                        <th align=\"center\">Party Name</th>\r\n                                        <th align=\"center\">Adjustment</th>\r\n                                        <th align=\"center\">Total</th>\r\n                                        <th align=\"center\">Paid</th>\r\n                                        <th align=\"center\">Balance</th>\r\n                                        <th align=\"center\">Date</th>\r\n                                        <th align=\"center\">Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>{this.renderMemoList()}</tbody>\r\n                            </table>\r\n                            {this.renderUpdateModal()}\r\n                            {this.renderDisplayBillModal()}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    TextField,\r\n    AppBar,\r\n    Tab,\r\n    Button,\r\n    FormControl,\r\n    MenuItem,\r\n    Select,\r\n    InputLabel,\r\n} from \"@material-ui/core\";\r\n\r\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\r\nimport Autocomplete, {\r\n    createFilterOptions,\r\n} from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { Row, Col, Card, Table as Tbl } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport moment from \"moment\";\r\n\r\n// sub components\r\nimport BillManager from \"./BillManager\";\r\nimport GstBillHistory from \"./gstBillHistory\";\r\nimport NonGstBillHistory from \"./nonGstBillHistory\";\r\n\r\nfunction OrderManager() {\r\n    const [value, setValue] = React.useState(\"1\");\r\n\r\n    const handleTabs = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <TabContext\r\n            value={value}\r\n            className=\"container-fluid border m-0 p-0 main\"\r\n        >\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <TabList\r\n                    onChange={handleTabs}\r\n                    aria-label=\"simple tabs example\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                >\r\n                    <Tab label=\"New Bill\" value=\"1\" />\r\n                    <Tab label=\"Bill (GST) History\" value=\"2\" />\r\n                    <Tab label=\"Bill (non GST) History\" value=\"3\" />\r\n                </TabList>\r\n            </AppBar>\r\n            <TabPanel\r\n                value=\"1\"\r\n                className=\"container-fluid\"\r\n                style={{ padding: \"15px 18px 40px 10px\" }}\r\n            >\r\n                <BillManager />\r\n            </TabPanel>\r\n            <TabPanel\r\n                value=\"2\"\r\n                className=\"container-fluid\"\r\n                style={{ padding: \"15px 18px 40px 10px\" }}\r\n            >\r\n                <GstBillHistory />\r\n            </TabPanel>\r\n            <TabPanel\r\n                value=\"3\"\r\n                className=\"container-fluid\"\r\n                style={{ padding: \"15px 18px 40px 10px\" }}\r\n            >\r\n                <NonGstBillHistory />\r\n            </TabPanel>\r\n\r\n            <ToastContainer\r\n                position={toast.POSITION.TOP_RIGHT}\r\n                autoClose={5000}\r\n            />\r\n        </TabContext>\r\n    );\r\n}\r\n\r\nexport default OrderManager;\r\n","import React, { Component } from \"react\";\n\nimport { TextField, Button } from \"@material-ui/core\";\n// import { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\n// import { Row, Col, Card, Badge, Table as Tbl } from \"react-bootstrap\";\nimport \"./style.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\n\n//API handling components\nimport { API_URL } from \"./../../global\";\nconst axios = require(\"axios\");\n\nexport class AddNewEntry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            partyId: this.props.partyId,\n            particular: null,\n            total: 0,\n            debit: 0,\n            credit: 0,\n            balance: 0,\n        };\n    }\n\n    getCurrentBalance() {\n        let url = API_URL;\n\n        const query = `SELECT balance FROM ledger WHERE party_id=${this.state.partyId} ORDER BY id DESC LIMIT 1 `;\n\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"ledger balance: \", res.data[0][\"balance\"]);\n                this.setState({ balance: res.data[0][\"balance\"] });\n                console.log(\"ledger balance fetched successfully\");\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    handleAddSubmit(e) {\n        e.preventDefault();\n        let url = API_URL;\n        this.state.balance =\n            this.state.credit - this.state.debit + this.state.balance;\n        const query = `INSERT INTO ledger(party_id, particular, debit, credit, balance) VALUES(${this.state.partyId}, '${this.state.particular}', ${this.state.debit}, ${this.state.credit}, ${this.state.balance});`;\n\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"ledger record added successfully\");\n                toast.success(\"ledger record added successfully\");\n                this.props.refreshLedger();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    componentDidMount() {\n        this.getCurrentBalance();\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <form autoComplete=\"off\">\n                    <div className=\"row ml-4 mt-4\">\n                        <TextField\n                            id=\"particular\"\n                            label=\"particular\"\n                            variant=\"outlined\"\n                            type=\"text\"\n                            className=\"mr-2\"\n                            required={true}\n                            size=\"small\"\n                            onChange={(e) =>\n                                this.setState({ particular: e.target.value })\n                            }\n                        />\n\n                        {/* <TextField\n                            id=\"total\"\n                            label=\"Total\"\n                            variant=\"outlined\"\n                            type=\"number\"\n                            className=\"mr-2\"\n                            size=\"small\"\n                            onChange={(e) =>\n                                this.setState({ total: e.target.value })\n                            }\n                        /> */}\n\n                        <TextField\n                            id=\"debit\"\n                            label=\"debit\"\n                            variant=\"outlined\"\n                            type=\"number\"\n                            className=\"mr-2\"\n                            size=\"small\"\n                            onChange={(e) =>\n                                this.setState({ debit: e.target.value })\n                            }\n                        />\n                        <TextField\n                            id=\"credit\"\n                            label=\"credit\"\n                            variant=\"outlined\"\n                            className=\"mr-2\"\n                            type=\"number\"\n                            size=\"small\"\n                            onChange={(e) =>\n                                this.setState({ credit: e.target.value })\n                            }\n                        />\n\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            className=\"\"\n                            onClick={(e) => this.handleAddSubmit(e)}\n                        >\n                            <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\n                        </Button>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            className=\"ml-5\"\n                            onClick={this.props.refreshLedger}\n                        >\n                            <FontAwesomeIcon icon={faSyncAlt} size=\"2x\" />\n                        </Button>\n                    </div>\n                </form>\n                <ToastContainer />\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\n//Bootstrap and jQuery libraries\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"jquery/dist/jquery.min.js\";\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\";\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\nimport $ from \"jquery\";\n\n// styles\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// material UI imports\nimport {\n    TableBody,\n    TableContainer,\n    Button,\n    Paper,\n    TextField,\n} from \"@material-ui/core\";\nimport { Row, Col, Button as Btn1, Modal, Badge } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport moment from \"moment\";\n\n// Toastify imports\nimport { toast } from \"react-toastify\";\n\n// import child components\nimport { AddNewEntry } from \"./AddNewEntry.js\";\n\n//API handling components\nimport { API_URL } from \"./../../global\";\nconst axios = require(\"axios\");\n\nclass LedgerManager extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            partyId: this.props.match.params.partyId,\n            showAddModal: false,\n            showUpdateModel: false,\n            activeRecordId: null,\n            activePartyId: null,\n            activeParticular: null,\n            activeDebit: null,\n            activeCredit: null,\n            activeBalance: null,\n            partyData: null,\n            LedgerData: null,\n            totalBalance: 0,\n        };\n    }\n\n    fetchBalance() {\n        // if party id is null\n        if (!this.state.partyId) return null;\n\n        let url = API_URL;\n        const query = `SELECT (SUM(total) + SUM(debit) - SUM(credit)) as balance FROM ledger where party_id=${this.state.partyId};`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"party balance: \", res.data[0][\"balance\"]);\n                this.setState({ totalBalance: res.data[0][\"balance\"] });\n            })\n            .catch((err) => {\n                console.log(\"party data fetch error: \", err);\n            });\n    }\n\n    fetchPartyData() {\n        // if party id is null\n        if (!this.state.partyId) return null;\n\n        let url = API_URL;\n        const query = `SELECT * FROM party WHERE id=${this.state.partyId};`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"party data: \", res.data);\n                this.setState({ partyData: res.data });\n            })\n            .catch((err) => {\n                console.log(\"party data fetch error: \", err);\n            });\n    }\n\n    fetchLedgerData = () => {\n        // if party id is null\n        if (!this.state.partyId) return null;\n\n        let url = API_URL;\n        const query = `SELECT * FROM ledger WHERE party_id=${this.state.partyId};`;\n        let data = { crossDomain: true, crossOrigin: true, query: query };\n        axios\n            .post(url, data)\n            .then((res) => {\n                console.log(\"ledger data: \", res.data);\n                this.setState({ LedgerData: res.data });\n                this.initializeDataTable();\n            })\n            .catch((err) => {\n                console.log(\"ledger data fetch error: \", err);\n            });\n    };\n\n    handleUpdateSubmit(e) {\n        let url = API_URL;\n\n        const query = `UPDATE ledger SET particular=\"${this.state.activeParticular}\", debit=\"${this.state.activeDebit}\", credit=\"${this.state.activeCredit}\", balance=\"${this.state.activeBalance}\" WHERE id=${this.state.activeRecordId};`;\n        let data = {\n            crossDomain: true,\n            crossOrigin: true,\n            query: query,\n        };\n        axios\n            .post(url, data)\n            .then((res) => {\n                toast.success(\"ledger details updated successfully\");\n                this.fetchLedgerData();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    refreshLedger() {\n        window.location.reload(false);\n    }\n\n    componentDidMount() {\n        this.fetchPartyData();\n        this.fetchLedgerData();\n        this.fetchBalance();\n    }\n\n    renderPartyData = () => {\n        const party = this.state.partyData;\n        if (!party || party.length < 1) return null;\n\n        return (\n            <div className=\"mb-2\">\n                <h5 className=\"float-left mt-2\">\n                    {party[0][\"id\"]} | <b>{party[0][\"name\"]}</b>\n                </h5>\n                <Button\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    className=\"float-right pb-0\"\n                >\n                    <h5>\n                        Total balance:&nbsp; &nbsp;\n                        <b>{this.state.totalBalance}</b>\n                    </h5>\n                </Button>\n            </div>\n        );\n    };\n    renderLedgerData = () => {\n        if (this.state.LedgerData == null) {\n            return null;\n        }\n\n        const ledger = this.state.LedgerData;\n        let last_modified = null;\n        let balance = 0;\n\n        return ledger.map((record) => {\n            // extract date only\n            last_modified = moment(record[\"last_modified\"]).format(\n                \"D / MM / YYYY HH:MM\"\n            );\n\n            balance =\n                balance + record[\"total\"] + record[\"debit\"] - record[\"credit\"];\n            return (\n                <tr>\n                    <td align=\"center\">\n                        <Badge variant=\"primary\">{record[\"id\"]}</Badge>{\" \"}\n                    </td>\n                    <td align=\"center\">{record[\"particular\"]}</td>\n                    <td>{record[\"total\"]}</td>\n                    <td>{record[\"debit\"]}</td>\n                    <td>{record[\"credit\"]}</td>\n                    <td>{balance}</td>\n                    <td>{last_modified}</td>\n                    <td align=\"center\">\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={(e) => {\n                                this.setState({\n                                    activeRecordId: record.id,\n                                    activeParticular: record.particular,\n                                    activeDebit: record.debit,\n                                    activeCredit: record.credit,\n                                    activeBalance: balance,\n                                });\n                                this.setState({ showUpdateModel: true });\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faPenAlt} />\n                        </Button>\n                        <Modal\n                            show={this.state.showUpdateModel}\n                            onHide={(e) =>\n                                this.setState({ showUpdateModel: false })\n                            }\n                            size=\"md\"\n                            aria-labelledby=\"contained-modal-title-vcenter\"\n                            centered\n                        >\n                            <Modal.Header closeButton>\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\n                                    Update record\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <form noValidate autoComplete=\"off\">\n                                    <div className=\"mt-3\">\n                                        <Row>\n                                            <Col xs={12}>\n                                                <TextField\n                                                    id=\"Particular\"\n                                                    label=\"Particular\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue={\n                                                        this.state\n                                                            .activeParticular\n                                                    }\n                                                    onChange={(e) =>\n                                                        this.setState({\n                                                            activeParticular:\n                                                                e.target.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col>\n                                                <TextField\n                                                    id=\"debit\"\n                                                    label=\"Debit\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue={\n                                                        this.state.activeDebit\n                                                    }\n                                                    onChange={(e) =>\n                                                        this.setState({\n                                                            activeDebit:\n                                                                e.target.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Col>\n\n                                            <Col>\n                                                <TextField\n                                                    id=\"credit\"\n                                                    label=\"Credit\"\n                                                    variant=\"outlined\"\n                                                    className=\"m-2\"\n                                                    defaultValue={\n                                                        this.state.activeCredit\n                                                    }\n                                                    onChange={(e) =>\n                                                        this.setState({\n                                                            activeCredit:\n                                                                e.target.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </div>\n\n                                    <div className=\"mt-2 mr-1\">\n                                        <Btn1\n                                            style={{ float: \"right\" }}\n                                            onClick={(e) => {\n                                                this.setState({\n                                                    showUpdateModel: false,\n                                                });\n                                                this.handleUpdateSubmit(e);\n                                            }}\n                                        >\n                                            Update\n                                        </Btn1>\n                                    </div>\n                                </form>\n                            </Modal.Body>\n                        </Modal>\n                    </td>\n                </tr>\n            );\n        });\n    };\n\n    initializeDataTable() {\n        $(\"#ledger_table\").DataTable({\n            destroy: true,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid border m-0 p-1\">\n                {this.renderPartyData()}\n                <br />\n                <hr />\n                <div\n                    class=\"btn-group mb-3\"\n                    role=\"group\"\n                    aria-label=\"Basic example\"\n                >\n                    <AddNewEntry\n                        partyId={this.state.partyId}\n                        refreshLedger={() => this.refreshLedger()}\n                        totalBalance={this.state.totalBalance}\n                    />\n                </div>\n\n                <Row className=\"ml-0 mr-0\">\n                    <Col md=\"12\" className=\"p-0 m-0 measure1\">\n                        <TableContainer\n                            component={Paper}\n                            style={{ maxHeight: \"79vh\" }}\n                        >\n                            <table\n                                id=\"ledger_table\"\n                                class=\"display\"\n                                style={{ width: \"100%\" }}\n                            >\n                                <thead>\n                                    <tr>\n                                        <th align=\"center\">ID</th>\n                                        <th align=\"center\">Particular</th>\n                                        <th>total</th>\n                                        <th>debit</th>\n                                        <th align=\"center\">credit</th>\n                                        <th>balance</th>\n                                        <th>last modified</th>\n                                        <th align=\"center\">Options</th>\n                                    </tr>\n                                </thead>\n                                <TableBody>{this.renderLedgerData()}</TableBody>\n                            </table>\n                        </TableContainer>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default LedgerManager;\n","import React, { useState } from \"react\";\nimport { Row, Col, Navbar } from \"react-bootstrap\";\nimport {\n    Switch,\n    HashRouter as Router,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\n// import CSS styles\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// import components\nimport NavbarPanel from \"./NavbarPanel\";\nimport PartyManager from \"../party_manager/PartyManager\";\nimport ExpenseManager from \"../expense_manager/ExpenseManager\";\nimport ProductManager from \"../product_manager/ProductManager\";\nimport OrderManager from \"../order_manager/orderManager\";\nimport LedgerManager from \"../ledger_manager/LedgerManager\";\n\nfunction Main(props) {\n    const [authenticated, setAuthenticated] = useState(props.location.state);\n\n    function logout() {\n        setAuthenticated(null);\n    }\n    if (authenticated || true) {\n        //const { userName } = authenticated;\n        const userName = \"user1\";\n        return (\n            <Router>\n                <Navbar bg=\"dark\" expand=\"lg\">\n                    <Navbar.Brand id=\"title\" href=\"#home\">\n                        Inventory Management | Admin Panel\n                    </Navbar.Brand>\n                </Navbar>\n                <div className=\"container-fluid m-0 p-0\">\n                    <Row className=\"m-0 p-0\">\n                        <Col className=\"col-sm-2 mt-1 pl-1 pr-1\">\n                            <NavbarPanel\n                                user={userName}\n                                logout={() => logout()}\n                            />\n                        </Col>\n                        <Col className=\"col-sm-10 mt-1 p-0\">\n                            <Switch>\n                                {/* Manager Routes */}\n                                <Route\n                                    exact\n                                    path=\"/mainDashboard\"\n                                    component={OrderManager}\n                                />\n                                <Route\n                                    path=\"/partyManager\"\n                                    exact\n                                    component={PartyManager}\n                                />\n\n                                <Route\n                                    path=\"/productManager\"\n                                    exact\n                                    component={ProductManager}\n                                />\n                                <Route\n                                    path=\"/expenseManager\"\n                                    exact\n                                    component={ExpenseManager}\n                                />\n                                <Route\n                                    path=\"/ledgerManager/:partyId\"\n                                    exact\n                                    component={LedgerManager}\n                                />\n                            </Switch>\n                        </Col>\n                    </Row>\n                </div>\n            </Router>\n        );\n    } else {\n        return <Redirect to=\"/\" />;\n    }\n}\n\nexport default Main;\n","import React, { createContext, useState } from \"react\";\n\nexport const WorkerContext = createContext();\n\nexport const WorkerProvider = (props) => {\n  const [workers, setWorkers] = useState(null);\n\n  return (\n    <WorkerContext.Provider value={[workers, setWorkers]}>\n      {props.children}\n    </WorkerContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// import CSS styles\nimport \"./App.css\";\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\n\n// import components\n// import Login from \"./components/user_authentication/Login\";\nimport Main from \"./components/main_dashboard/Main\";\n\n// import context\nimport { WorkerProvider } from \"./contexts/workerContext\";\n\nfunction App() {\n    return (\n        <WorkerProvider>\n            <Router>\n                <div className=\"container-fluid m-0 p-0\">\n                    <Switch>\n                        <Route path=\"/mainDashboard\" exact component={Main} />\n                        <Route path=\"/\" component={Main} />\n                    </Switch>\n                </div>\n            </Router>\n        </WorkerProvider>\n    );\n}\n\nexport default App;\n\n// testing\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}